[
  {
    "__Checksum": {
      "Data1": 8099987249904946857,
      "Data2": -8455533693404036248,
      "Data3": -9143123666759131660,
      "Data4": 7001701330765099020
    },
    "Kind": "Components.Component",
    "Name": "BlazorApp1.Pages.Counter",
    "AssemblyName": "BlazorApp1",
    "DisplayName": "BlazorApp1.Pages.Counter",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Counter"
      }
    ],
    "Metadata": {
      "Common.TypeName": "BlazorApp1.Pages.Counter",
      "Common.TypeNameIdentifier": "Counter",
      "Common.TypeNamespace": "BlazorApp1.Pages",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -6431048106179485060,
      "Data2": 6034356476215413475,
      "Data3": 6056821599582187012,
      "Data4": -6227980005008123026
    },
    "Kind": "Components.Component",
    "Name": "BlazorApp1.Pages.Counter",
    "AssemblyName": "BlazorApp1",
    "DisplayName": "BlazorApp1.Pages.Counter",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "BlazorApp1.Pages.Counter"
      }
    ],
    "Metadata": {
      "Common.TypeName": "BlazorApp1.Pages.Counter",
      "Common.TypeNameIdentifier": "Counter",
      "Common.TypeNamespace": "BlazorApp1.Pages",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 5132844681732630669,
      "Data2": 2744273515306874229,
      "Data3": 6173709233393781665,
      "Data4": -584821476446434095
    },
    "Kind": "Components.Component",
    "Name": "BlazorApp1.Shared.MainLayout",
    "AssemblyName": "BlazorApp1",
    "DisplayName": "BlazorApp1.Shared.MainLayout",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "MainLayout"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "Body",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment BlazorApp1.Shared.MainLayout.Body",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\r\n            <summary>\r\n            Gets the content to be rendered inside the layout.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Common.PropertyName": "Body",
          "Components.ChildContent": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "BlazorApp1.Shared.MainLayout",
      "Common.TypeNameIdentifier": "MainLayout",
      "Common.TypeNamespace": "BlazorApp1.Shared",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 7642774603381578576,
      "Data2": -5551463728660387324,
      "Data3": -6174362726655406342,
      "Data4": 6530647603889737968
    },
    "Kind": "Components.Component",
    "Name": "BlazorApp1.Shared.MainLayout",
    "AssemblyName": "BlazorApp1",
    "DisplayName": "BlazorApp1.Shared.MainLayout",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "BlazorApp1.Shared.MainLayout"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "Body",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment BlazorApp1.Shared.MainLayout.Body",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\r\n            <summary>\r\n            Gets the content to be rendered inside the layout.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Common.PropertyName": "Body",
          "Components.ChildContent": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "BlazorApp1.Shared.MainLayout",
      "Common.TypeNameIdentifier": "MainLayout",
      "Common.TypeNamespace": "BlazorApp1.Shared",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -2704074268753013286,
      "Data2": 6803723210932791415,
      "Data3": 1190702192242668759,
      "Data4": 4391723216510114242
    },
    "Kind": "Components.ChildContent",
    "Name": "BlazorApp1.Shared.MainLayout.Body",
    "AssemblyName": "BlazorApp1",
    "DisplayName": "BlazorApp1.Shared.MainLayout.Body",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\r\n            <summary>\r\n            Gets the content to be rendered inside the layout.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Body",
        "ParentTag": "MainLayout"
      }
    ],
    "Metadata": {
      "Common.TypeName": "BlazorApp1.Shared.MainLayout.Body",
      "Common.TypeNameIdentifier": "MainLayout",
      "Common.TypeNamespace": "BlazorApp1.Shared",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -3896965275996991702,
      "Data2": -8686782627035636932,
      "Data3": -8556178959396624857,
      "Data4": -7224157604284590922
    },
    "Kind": "Components.ChildContent",
    "Name": "BlazorApp1.Shared.MainLayout.Body",
    "AssemblyName": "BlazorApp1",
    "DisplayName": "BlazorApp1.Shared.MainLayout.Body",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\r\n            <summary>\r\n            Gets the content to be rendered inside the layout.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Body",
        "ParentTag": "BlazorApp1.Shared.MainLayout"
      }
    ],
    "Metadata": {
      "Common.TypeName": "BlazorApp1.Shared.MainLayout.Body",
      "Common.TypeNameIdentifier": "MainLayout",
      "Common.TypeNamespace": "BlazorApp1.Shared",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 7811770228307842449,
      "Data2": 3322028457118448269,
      "Data3": 41855705415870146,
      "Data4": -8429618465189859410
    },
    "Kind": "Components.Component",
    "Name": "BlazorApp1.Shared.NavMenu",
    "AssemblyName": "BlazorApp1",
    "DisplayName": "BlazorApp1.Shared.NavMenu",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "NavMenu"
      }
    ],
    "Metadata": {
      "Common.TypeName": "BlazorApp1.Shared.NavMenu",
      "Common.TypeNameIdentifier": "NavMenu",
      "Common.TypeNamespace": "BlazorApp1.Shared",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -4537143290887361385,
      "Data2": -6149934747250567370,
      "Data3": 8998751486953067367,
      "Data4": -4663503186795195304
    },
    "Kind": "Components.Component",
    "Name": "BlazorApp1.Shared.NavMenu",
    "AssemblyName": "BlazorApp1",
    "DisplayName": "BlazorApp1.Shared.NavMenu",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "BlazorApp1.Shared.NavMenu"
      }
    ],
    "Metadata": {
      "Common.TypeName": "BlazorApp1.Shared.NavMenu",
      "Common.TypeNameIdentifier": "NavMenu",
      "Common.TypeNamespace": "BlazorApp1.Shared",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -5367674102157473401,
      "Data2": -2792358546765559142,
      "Data3": -566162226018705879,
      "Data4": -6279714792608394507
    },
    "Kind": "Components.Component",
    "Name": "BlazorApp1.Shared.SurveyPrompt",
    "AssemblyName": "BlazorApp1",
    "DisplayName": "BlazorApp1.Shared.SurveyPrompt",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "SurveyPrompt"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "Title",
        "TypeName": "System.String",
        "DisplayName": "string BlazorApp1.Shared.SurveyPrompt.Title",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "Title"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "BlazorApp1.Shared.SurveyPrompt",
      "Common.TypeNameIdentifier": "SurveyPrompt",
      "Common.TypeNamespace": "BlazorApp1.Shared",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -1596196128814268679,
      "Data2": 1048194155269884460,
      "Data3": 7335236384155318705,
      "Data4": 2443528171745734786
    },
    "Kind": "Components.Component",
    "Name": "BlazorApp1.Shared.SurveyPrompt",
    "AssemblyName": "BlazorApp1",
    "DisplayName": "BlazorApp1.Shared.SurveyPrompt",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "BlazorApp1.Shared.SurveyPrompt"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "Title",
        "TypeName": "System.String",
        "DisplayName": "string BlazorApp1.Shared.SurveyPrompt.Title",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "Title"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "BlazorApp1.Shared.SurveyPrompt",
      "Common.TypeNameIdentifier": "SurveyPrompt",
      "Common.TypeNamespace": "BlazorApp1.Shared",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 205142976935521097,
      "Data2": 9107771028632312228,
      "Data3": 6274659642242205419,
      "Data4": 6800268062140247321
    },
    "Kind": "Components.Component",
    "Name": "BlazorApp1.Pages.Index",
    "AssemblyName": "BlazorApp1",
    "DisplayName": "BlazorApp1.Pages.Index",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Index"
      }
    ],
    "Metadata": {
      "Common.TypeName": "BlazorApp1.Pages.Index",
      "Common.TypeNameIdentifier": "Index",
      "Common.TypeNamespace": "BlazorApp1.Pages",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -2926950332963924512,
      "Data2": 7622045448826768350,
      "Data3": -3688753087563139579,
      "Data4": -5586309183133206198
    },
    "Kind": "Components.Component",
    "Name": "BlazorApp1.Pages.Index",
    "AssemblyName": "BlazorApp1",
    "DisplayName": "BlazorApp1.Pages.Index",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "BlazorApp1.Pages.Index"
      }
    ],
    "Metadata": {
      "Common.TypeName": "BlazorApp1.Pages.Index",
      "Common.TypeNameIdentifier": "Index",
      "Common.TypeNamespace": "BlazorApp1.Pages",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -40717666776784024,
      "Data2": 3889965238532071261,
      "Data3": 2458123906702446637,
      "Data4": 3529459121932187908
    },
    "Kind": "Components.Component",
    "Name": "BlazorApp1.Pages.FetchData",
    "AssemblyName": "BlazorApp1",
    "DisplayName": "BlazorApp1.Pages.FetchData",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "FetchData"
      }
    ],
    "Metadata": {
      "Common.TypeName": "BlazorApp1.Pages.FetchData",
      "Common.TypeNameIdentifier": "FetchData",
      "Common.TypeNamespace": "BlazorApp1.Pages",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 6911801493112497823,
      "Data2": 2213507279393090768,
      "Data3": 8031177593184470718,
      "Data4": -3647895738916384881
    },
    "Kind": "Components.Component",
    "Name": "BlazorApp1.Pages.FetchData",
    "AssemblyName": "BlazorApp1",
    "DisplayName": "BlazorApp1.Pages.FetchData",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "BlazorApp1.Pages.FetchData"
      }
    ],
    "Metadata": {
      "Common.TypeName": "BlazorApp1.Pages.FetchData",
      "Common.TypeNameIdentifier": "FetchData",
      "Common.TypeNamespace": "BlazorApp1.Pages",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -3075590334792719951,
      "Data2": -8057492784069631357,
      "Data3": -7380395539832370240,
      "Data4": -188991615315459814
    },
    "Kind": "Components.Component",
    "Name": "BlazorApp1.App",
    "AssemblyName": "BlazorApp1",
    "DisplayName": "BlazorApp1.App",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "App"
      }
    ],
    "Metadata": {
      "Common.TypeName": "BlazorApp1.App",
      "Common.TypeNameIdentifier": "App",
      "Common.TypeNamespace": "BlazorApp1",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 3135514666801773654,
      "Data2": -7184844202540896096,
      "Data3": 2136371984154980817,
      "Data4": 766583206158407900
    },
    "Kind": "Components.Component",
    "Name": "BlazorApp1.App",
    "AssemblyName": "BlazorApp1",
    "DisplayName": "BlazorApp1.App",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "BlazorApp1.App"
      }
    ],
    "Metadata": {
      "Common.TypeName": "BlazorApp1.App",
      "Common.TypeNameIdentifier": "App",
      "Common.TypeNamespace": "BlazorApp1",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 8763129550808725669,
      "Data2": 8440347814648453328,
      "Data3": -1495006013913634270,
      "Data4": 3395259123047580365
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView\">\r\n             <summary>\r\n             Combines the behaviors of <see cref=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\" /> and <see cref=\"T:Microsoft.AspNetCore.Components.RouteView\" />,\r\n             so that it displays the page matching the specified route but only if the user\r\n             is authorized to see it.\r\n            \r\n             Additionally, this component supplies a cascading parameter of type <see cref=\"T:System.Threading.Tasks.Task`1\" />,\r\n             which makes the user's current authentication state available to descendants.\r\n             </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "AuthorizeRouteView"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "NotAuthorized",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState> Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
          "Common.PropertyName": "NotAuthorized",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Authorizing",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Common.PropertyName": "Authorizing",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Resource",
        "TypeName": "System.Object",
        "DisplayName": "object Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Resource",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Resource\">\r\n            <summary>\r\n            The resource to which access is being controlled.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Object",
          "Common.PropertyName": "Resource"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "RouteData",
        "TypeName": "Microsoft.AspNetCore.Components.RouteData",
        "DisplayName": "Microsoft.AspNetCore.Components.RouteData Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.RouteData",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.RouteView.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This determines the page that will be\r\n            displayed and the parameter values that will be supplied to the page.\r\n            </summary>\r\n        </member>",
        "IsEditorRequired": true,
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RouteData",
          "Common.PropertyName": "RouteData"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "DefaultLayout",
        "TypeName": "System.Type",
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.DefaultLayout",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.RouteView.DefaultLayout\">\r\n            <summary>\r\n            Gets or sets the type of a layout to be used if the page does not\r\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\r\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Type",
          "Common.PropertyName": "DefaultLayout"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Context",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Context",
        "Documentation": {
          "Id": 12
        },
        "Metadata": {
          "Common.PropertyName": "Context",
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView",
      "Common.TypeNameIdentifier": "AuthorizeRouteView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -1126820336252066546,
      "Data2": 2062211342647697663,
      "Data3": 8016395908811423407,
      "Data4": -9083134338239884034
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView\">\r\n             <summary>\r\n             Combines the behaviors of <see cref=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\" /> and <see cref=\"T:Microsoft.AspNetCore.Components.RouteView\" />,\r\n             so that it displays the page matching the specified route but only if the user\r\n             is authorized to see it.\r\n            \r\n             Additionally, this component supplies a cascading parameter of type <see cref=\"T:System.Threading.Tasks.Task`1\" />,\r\n             which makes the user's current authentication state available to descendants.\r\n             </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "NotAuthorized",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState> Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
          "Common.PropertyName": "NotAuthorized",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Authorizing",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Common.PropertyName": "Authorizing",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Resource",
        "TypeName": "System.Object",
        "DisplayName": "object Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Resource",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Resource\">\r\n            <summary>\r\n            The resource to which access is being controlled.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Object",
          "Common.PropertyName": "Resource"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "RouteData",
        "TypeName": "Microsoft.AspNetCore.Components.RouteData",
        "DisplayName": "Microsoft.AspNetCore.Components.RouteData Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.RouteData",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.RouteView.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This determines the page that will be\r\n            displayed and the parameter values that will be supplied to the page.\r\n            </summary>\r\n        </member>",
        "IsEditorRequired": true,
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RouteData",
          "Common.PropertyName": "RouteData"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "DefaultLayout",
        "TypeName": "System.Type",
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.DefaultLayout",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.RouteView.DefaultLayout\">\r\n            <summary>\r\n            Gets or sets the type of a layout to be used if the page does not\r\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\r\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Type",
          "Common.PropertyName": "DefaultLayout"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Context",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Context",
        "Documentation": {
          "Id": 12
        },
        "Metadata": {
          "Common.PropertyName": "Context",
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView",
      "Common.TypeNameIdentifier": "AuthorizeRouteView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -3488398355339662872,
      "Data2": -8344262365856710599,
      "Data3": 2203914251255903202,
      "Data4": -549283059369327803
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "NotAuthorized",
        "ParentTag": "AuthorizeRouteView"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.ChildContent",
        "Name": "Context",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "NotAuthorized"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Context",
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
      "Common.TypeNameIdentifier": "AuthorizeRouteView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -8974977729823506722,
      "Data2": -7624693699004013925,
      "Data3": 6334444031807957260,
      "Data4": -7477599851432545018
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "NotAuthorized",
        "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.ChildContent",
        "Name": "Context",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "NotAuthorized"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Context",
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
      "Common.TypeNameIdentifier": "AuthorizeRouteView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 8409146836506811220,
      "Data2": -3557229339975962491,
      "Data3": -9036079713174403303,
      "Data4": -2046918318881541777
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Authorizing",
        "ParentTag": "AuthorizeRouteView"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
      "Common.TypeNameIdentifier": "AuthorizeRouteView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -4369813011973348817,
      "Data2": -2849368957331268153,
      "Data3": -3443584105976924493,
      "Data4": 5959283735533993681
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Authorizing",
        "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
      "Common.TypeNameIdentifier": "AuthorizeRouteView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -3429174736135457823,
      "Data2": 1359026430171826729,
      "Data3": 5789336515782671394,
      "Data4": -7141973529948150278
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\">\r\n            <summary>\r\n            Displays differing content depending on the user's authorization status.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "AuthorizeView"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "Policy",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Policy",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Policy\">\r\n            <summary>\r\n            The policy name that determines whether the content can be displayed.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "Policy"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Roles",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Roles",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Roles\">\r\n            <summary>\r\n            A comma delimited list of roles that are allowed to display the content.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "Roles"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState> Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
          "Common.PropertyName": "ChildContent",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "NotAuthorized",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState> Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
          "Common.PropertyName": "NotAuthorized",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Authorized",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState> Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
          "Common.PropertyName": "Authorized",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Authorizing",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Common.PropertyName": "Authorizing",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Resource",
        "TypeName": "System.Object",
        "DisplayName": "object Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Resource",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Resource\">\r\n            <summary>\r\n            The resource to which access is being controlled.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Object",
          "Common.PropertyName": "Resource"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Context",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Context",
        "Documentation": {
          "Id": 12
        },
        "Metadata": {
          "Common.PropertyName": "Context",
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView",
      "Common.TypeNameIdentifier": "AuthorizeView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 4076162487340942279,
      "Data2": 38494143145235419,
      "Data3": 1770899250837084767,
      "Data4": -5731216382025977688
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\">\r\n            <summary>\r\n            Displays differing content depending on the user's authorization status.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "Policy",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Policy",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Policy\">\r\n            <summary>\r\n            The policy name that determines whether the content can be displayed.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "Policy"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Roles",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Roles",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Roles\">\r\n            <summary>\r\n            A comma delimited list of roles that are allowed to display the content.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "Roles"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState> Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
          "Common.PropertyName": "ChildContent",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "NotAuthorized",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState> Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
          "Common.PropertyName": "NotAuthorized",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Authorized",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState> Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
          "Common.PropertyName": "Authorized",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Authorizing",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Common.PropertyName": "Authorizing",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Resource",
        "TypeName": "System.Object",
        "DisplayName": "object Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Resource",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Resource\">\r\n            <summary>\r\n            The resource to which access is being controlled.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Object",
          "Common.PropertyName": "Resource"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Context",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Context",
        "Documentation": {
          "Id": 12
        },
        "Metadata": {
          "Common.PropertyName": "Context",
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView",
      "Common.TypeNameIdentifier": "AuthorizeView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 1054974347256619987,
      "Data2": -2840325723997861834,
      "Data3": 642976044333426267,
      "Data4": 8915713283713928034
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "AuthorizeView"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.ChildContent",
        "Name": "Context",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "ChildContent"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Context",
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
      "Common.TypeNameIdentifier": "AuthorizeView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -7647723278018591681,
      "Data2": 2104210306329917784,
      "Data3": -2453041780994961145,
      "Data4": 2251289738597512163
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.ChildContent",
        "Name": "Context",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "ChildContent"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Context",
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
      "Common.TypeNameIdentifier": "AuthorizeView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 1256654829718035504,
      "Data2": 6176331583798799807,
      "Data3": 2735777182756055709,
      "Data4": 8258612773221362239
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "NotAuthorized",
        "ParentTag": "AuthorizeView"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.ChildContent",
        "Name": "Context",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "NotAuthorized"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Context",
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
      "Common.TypeNameIdentifier": "AuthorizeView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -6825185546786896001,
      "Data2": 7842384322328390413,
      "Data3": 8729699594286724263,
      "Data4": -7984488084425419062
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "NotAuthorized",
        "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.ChildContent",
        "Name": "Context",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "NotAuthorized"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Context",
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
      "Common.TypeNameIdentifier": "AuthorizeView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 4896319727897810395,
      "Data2": -5937122031597645414,
      "Data3": 5830494489755099766,
      "Data4": 4075248029398980667
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Authorized",
        "ParentTag": "AuthorizeView"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.ChildContent",
        "Name": "Context",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "Authorized"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Context",
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
      "Common.TypeNameIdentifier": "AuthorizeView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 928643252168344305,
      "Data2": 2738096222007397976,
      "Data3": 7694624462705259661,
      "Data4": -9092372737483223080
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Authorized",
        "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.ChildContent",
        "Name": "Context",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "Authorized"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Context",
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
      "Common.TypeNameIdentifier": "AuthorizeView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 7856880125415756571,
      "Data2": 8383998373486821725,
      "Data3": -8723496610221350529,
      "Data4": 4633865963454802466
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Authorizing",
        "ParentTag": "AuthorizeView"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
      "Common.TypeNameIdentifier": "AuthorizeView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -1027976193082131680,
      "Data2": 4196849792968480238,
      "Data3": -7699342640913503885,
      "Data4": -2046378850436257891
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Authorizing",
        "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
      "Common.TypeNameIdentifier": "AuthorizeView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -576041239627392457,
      "Data2": 8201378603604506401,
      "Data3": 2520610336752314436,
      "Data4": -7200396900823791274
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "CascadingAuthenticationState"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent\">\r\n            <summary>\r\n            The content to which the authentication state should be provided.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Common.PropertyName": "ChildContent",
          "Components.ChildContent": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState",
      "Common.TypeNameIdentifier": "CascadingAuthenticationState",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -8235365834910926769,
      "Data2": 6694312252349350718,
      "Data3": 5143715084207989652,
      "Data4": 428090287477119526
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent\">\r\n            <summary>\r\n            The content to which the authentication state should be provided.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Common.PropertyName": "ChildContent",
          "Components.ChildContent": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState",
      "Common.TypeNameIdentifier": "CascadingAuthenticationState",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -3508685268214383852,
      "Data2": -2358856202161226431,
      "Data3": 8158469474100257103,
      "Data4": -8624873112559932432
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent\">\r\n            <summary>\r\n            The content to which the authentication state should be provided.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "CascadingAuthenticationState"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
      "Common.TypeNameIdentifier": "CascadingAuthenticationState",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 151529769816882701,
      "Data2": 8794175924374574069,
      "Data3": -5057124985829292905,
      "Data4": 8653669153692737253
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent\">\r\n            <summary>\r\n            The content to which the authentication state should be provided.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
      "Common.TypeNameIdentifier": "CascadingAuthenticationState",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 2939941643516732002,
      "Data2": -1216194779081055621,
      "Data3": 1667946559397228020,
      "Data4": 5824969354985129430
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.CascadingValue`1\">\r\n            <summary>\r\n            A component that provides a cascading value to all descendant components.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "CascadingValue"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "TValue",
        "TypeName": "System.Type",
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.CascadingValue<TValue>.TValue",
        "Documentation": {
          "Id": 13,
          "Args": [
            "TValue",
            "Microsoft.AspNetCore.Components.CascadingValue<TValue>"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "TValue",
          "Components.TypeParameter": "True",
          "Components.TypeParameterIsCascading": "False"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.ChildContent\">\r\n            <summary>\r\n            The content to which the value should be provided.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Common.PropertyName": "ChildContent",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Value",
        "TypeName": "TValue",
        "DisplayName": "TValue Microsoft.AspNetCore.Components.CascadingValue<TValue>.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\">\r\n            <summary>\r\n            The value to be provided.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "TValue",
          "Common.PropertyName": "Value",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Name",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.CascadingValue<TValue>.Name",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Name\">\r\n             <summary>\r\n             Optionally gives a name to the provided value. Descendant components\r\n             will be able to receive the value by specifying this name.\r\n            \r\n             If no name is specified, then descendant components will receive the\r\n             value based the type of value they are requesting.\r\n             </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "Name"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "IsFixed",
        "TypeName": "System.Boolean",
        "DisplayName": "bool Microsoft.AspNetCore.Components.CascadingValue<TValue>.IsFixed",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.IsFixed\">\r\n            <summary>\r\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\r\n            performance optimization that allows the framework to skip setting up\r\n            change notifications. Set this flag only if you will not change\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Boolean",
          "Common.PropertyName": "IsFixed"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
      "Common.TypeNameIdentifier": "CascadingValue",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
      "Components.GenericTyped": "True",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -7679833204236774100,
      "Data2": 63559635700121060,
      "Data3": -986925736960264831,
      "Data4": -8689859966039105595
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.CascadingValue`1\">\r\n            <summary>\r\n            A component that provides a cascading value to all descendant components.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.CascadingValue"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "TValue",
        "TypeName": "System.Type",
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.CascadingValue<TValue>.TValue",
        "Documentation": {
          "Id": 13,
          "Args": [
            "TValue",
            "Microsoft.AspNetCore.Components.CascadingValue<TValue>"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "TValue",
          "Components.TypeParameter": "True",
          "Components.TypeParameterIsCascading": "False"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.ChildContent\">\r\n            <summary>\r\n            The content to which the value should be provided.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Common.PropertyName": "ChildContent",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Value",
        "TypeName": "TValue",
        "DisplayName": "TValue Microsoft.AspNetCore.Components.CascadingValue<TValue>.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\">\r\n            <summary>\r\n            The value to be provided.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "TValue",
          "Common.PropertyName": "Value",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Name",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.CascadingValue<TValue>.Name",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Name\">\r\n             <summary>\r\n             Optionally gives a name to the provided value. Descendant components\r\n             will be able to receive the value by specifying this name.\r\n            \r\n             If no name is specified, then descendant components will receive the\r\n             value based the type of value they are requesting.\r\n             </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "Name"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "IsFixed",
        "TypeName": "System.Boolean",
        "DisplayName": "bool Microsoft.AspNetCore.Components.CascadingValue<TValue>.IsFixed",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.IsFixed\">\r\n            <summary>\r\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\r\n            performance optimization that allows the framework to skip setting up\r\n            change notifications. Set this flag only if you will not change\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Boolean",
          "Common.PropertyName": "IsFixed"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
      "Common.TypeNameIdentifier": "CascadingValue",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
      "Components.GenericTyped": "True",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -4608482289570964838,
      "Data2": -7726302403965888404,
      "Data3": 8005627572853295780,
      "Data4": 6904535770820904557
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.ChildContent\">\r\n            <summary>\r\n            The content to which the value should be provided.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "CascadingValue"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
      "Common.TypeNameIdentifier": "CascadingValue",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -7099468049881998144,
      "Data2": 1010359103196847476,
      "Data3": 7871980467203887852,
      "Data4": 4603658050491783925
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.ChildContent\">\r\n            <summary>\r\n            The content to which the value should be provided.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "Microsoft.AspNetCore.Components.CascadingValue"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
      "Common.TypeNameIdentifier": "CascadingValue",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 5731302864841358952,
      "Data2": -8981471926612505981,
      "Data3": -4403247565854984028,
      "Data4": -6387829014248849351
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.DynamicComponent",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.DynamicComponent",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.DynamicComponent\">\r\n            <summary>\r\n            A component that renders another component dynamically according to its\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\" /> parameter.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "DynamicComponent"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "Type",
        "TypeName": "System.Type",
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.DynamicComponent.Type",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\">\r\n            <summary>\r\n            Gets or sets the type of the component to be rendered. The supplied type must\r\n            implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\r\n            </summary>\r\n        </member>",
        "IsEditorRequired": true,
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Type",
          "Common.PropertyName": "Type"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Parameters",
        "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.DynamicComponent.Parameters",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Parameters\">\r\n            <summary>\r\n            Gets or sets a dictionary of parameters to be passed to the component.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>",
          "Common.PropertyName": "Parameters"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.DynamicComponent",
      "Common.TypeNameIdentifier": "DynamicComponent",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 7110698932307731208,
      "Data2": -1569536967984684798,
      "Data3": -3992574793600979564,
      "Data4": 4055446559830609435
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.DynamicComponent",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.DynamicComponent",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.DynamicComponent\">\r\n            <summary>\r\n            A component that renders another component dynamically according to its\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\" /> parameter.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.DynamicComponent"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "Type",
        "TypeName": "System.Type",
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.DynamicComponent.Type",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\">\r\n            <summary>\r\n            Gets or sets the type of the component to be rendered. The supplied type must\r\n            implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\r\n            </summary>\r\n        </member>",
        "IsEditorRequired": true,
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Type",
          "Common.PropertyName": "Type"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Parameters",
        "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.DynamicComponent.Parameters",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Parameters\">\r\n            <summary>\r\n            Gets or sets a dictionary of parameters to be passed to the component.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>",
          "Common.PropertyName": "Parameters"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.DynamicComponent",
      "Common.TypeNameIdentifier": "DynamicComponent",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -5647725014167321797,
      "Data2": -552944172644708731,
      "Data3": -3815279164226980465,
      "Data4": 7388613562141534977
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.LayoutView",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.LayoutView",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.LayoutView\">\r\n            <summary>\r\n            Displays the specified content inside the specified layout and any further\r\n            nested layouts.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "LayoutView"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.LayoutView.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to display.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Common.PropertyName": "ChildContent",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Layout",
        "TypeName": "System.Type",
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.LayoutView.Layout",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.Layout\">\r\n            <summary>\r\n            Gets or sets the type of the layout in which to display the content.\r\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Type",
          "Common.PropertyName": "Layout"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView",
      "Common.TypeNameIdentifier": "LayoutView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 1361411529474496483,
      "Data2": -739982539966889227,
      "Data3": -977459276069733025,
      "Data4": -225334187807638369
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.LayoutView",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.LayoutView",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.LayoutView\">\r\n            <summary>\r\n            Displays the specified content inside the specified layout and any further\r\n            nested layouts.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.LayoutView"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.LayoutView.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to display.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Common.PropertyName": "ChildContent",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Layout",
        "TypeName": "System.Type",
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.LayoutView.Layout",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.Layout\">\r\n            <summary>\r\n            Gets or sets the type of the layout in which to display the content.\r\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Type",
          "Common.PropertyName": "Layout"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView",
      "Common.TypeNameIdentifier": "LayoutView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 1270776707106377636,
      "Data2": 8797105731492125492,
      "Data3": -4722775846668528642,
      "Data4": 3305447825452506234
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to display.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "LayoutView"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
      "Common.TypeNameIdentifier": "LayoutView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -4098664675869633111,
      "Data2": 4977801593976148775,
      "Data3": -3591351345106431176,
      "Data4": -3629411109416117244
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to display.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "Microsoft.AspNetCore.Components.LayoutView"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
      "Common.TypeNameIdentifier": "LayoutView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 4217022035368751388,
      "Data2": -4067929904648929838,
      "Data3": 6526259014377304754,
      "Data4": 9187030806021014627
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.RouteView",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.RouteView",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.RouteView\">\r\n            <summary>\r\n            Displays the specified page component, rendering it inside its layout\r\n            and any further nested layouts.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "RouteView"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "RouteData",
        "TypeName": "Microsoft.AspNetCore.Components.RouteData",
        "DisplayName": "Microsoft.AspNetCore.Components.RouteData Microsoft.AspNetCore.Components.RouteView.RouteData",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.RouteView.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This determines the page that will be\r\n            displayed and the parameter values that will be supplied to the page.\r\n            </summary>\r\n        </member>",
        "IsEditorRequired": true,
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RouteData",
          "Common.PropertyName": "RouteData"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "DefaultLayout",
        "TypeName": "System.Type",
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.RouteView.DefaultLayout",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.RouteView.DefaultLayout\">\r\n            <summary>\r\n            Gets or sets the type of a layout to be used if the page does not\r\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\r\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Type",
          "Common.PropertyName": "DefaultLayout"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.RouteView",
      "Common.TypeNameIdentifier": "RouteView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 3181917166860484265,
      "Data2": 5592830598254929166,
      "Data3": 6332203196792038142,
      "Data4": 1705581486661393550
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.RouteView",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.RouteView",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.RouteView\">\r\n            <summary>\r\n            Displays the specified page component, rendering it inside its layout\r\n            and any further nested layouts.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.RouteView"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "RouteData",
        "TypeName": "Microsoft.AspNetCore.Components.RouteData",
        "DisplayName": "Microsoft.AspNetCore.Components.RouteData Microsoft.AspNetCore.Components.RouteView.RouteData",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.RouteView.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This determines the page that will be\r\n            displayed and the parameter values that will be supplied to the page.\r\n            </summary>\r\n        </member>",
        "IsEditorRequired": true,
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RouteData",
          "Common.PropertyName": "RouteData"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "DefaultLayout",
        "TypeName": "System.Type",
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.RouteView.DefaultLayout",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.RouteView.DefaultLayout\">\r\n            <summary>\r\n            Gets or sets the type of a layout to be used if the page does not\r\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\r\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Type",
          "Common.PropertyName": "DefaultLayout"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.RouteView",
      "Common.TypeNameIdentifier": "RouteView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 1065865949068824216,
      "Data2": 5992357818554971059,
      "Data3": -5474552193129438454,
      "Data4": -2540487500587233647
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Routing.Router",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Routing.Router",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Routing.Router\">\r\n            <summary>\r\n            A component that supplies route data corresponding to the current navigation state.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Router"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "AppAssembly",
        "TypeName": "System.Reflection.Assembly",
        "DisplayName": "System.Reflection.Assembly Microsoft.AspNetCore.Components.Routing.Router.AppAssembly",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.AppAssembly\">\r\n            <summary>\r\n            Gets or sets the assembly that should be searched for components matching the URI.\r\n            </summary>\r\n        </member>",
        "IsEditorRequired": true,
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Reflection.Assembly",
          "Common.PropertyName": "AppAssembly"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "AdditionalAssemblies",
        "TypeName": "System.Collections.Generic.IEnumerable<System.Reflection.Assembly>",
        "DisplayName": "System.Collections.Generic.IEnumerable<System.Reflection.Assembly> Microsoft.AspNetCore.Components.Routing.Router.AdditionalAssemblies",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.AdditionalAssemblies\">\r\n            <summary>\r\n            Gets or sets a collection of additional assemblies that should be searched for components\r\n            that can match URIs.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IEnumerable<global::System.Reflection.Assembly>",
          "Common.PropertyName": "AdditionalAssemblies"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "NotFound",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Routing.Router.NotFound",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.NotFound\">\r\n            <summary>\r\n            Gets or sets the content to display when no match is found for the requested route.\r\n            </summary>\r\n        </member>",
        "IsEditorRequired": true,
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Common.PropertyName": "NotFound",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Found",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData> Microsoft.AspNetCore.Components.Routing.Router.Found",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Found\">\r\n            <summary>\r\n            Gets or sets the content to display when a match is found for the requested route.\r\n            </summary>\r\n        </member>",
        "IsEditorRequired": true,
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.RouteData>",
          "Common.PropertyName": "Found",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Navigating",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Routing.Router.Navigating",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Navigating\">\r\n            <summary>\r\n            Get or sets the content to display when asynchronous navigation is in progress.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Common.PropertyName": "Navigating",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "OnNavigateAsync",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext> Microsoft.AspNetCore.Components.Routing.Router.OnNavigateAsync",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.OnNavigateAsync\">\r\n            <summary>\r\n            Gets or sets a handler that should be called before navigating to a new page.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Routing.NavigationContext>",
          "Common.PropertyName": "OnNavigateAsync",
          "Components.EventCallback": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "PreferExactMatches",
        "TypeName": "System.Boolean",
        "DisplayName": "bool Microsoft.AspNetCore.Components.Routing.Router.PreferExactMatches",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.PreferExactMatches\">\r\n            <summary>\r\n            Gets or sets a flag to indicate whether route matching should prefer exact matches\r\n            over wildcards.\r\n            <para>This property is obsolete and configuring it does nothing.</para>\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Boolean",
          "Common.PropertyName": "PreferExactMatches"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Context",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Routing.Router.Context",
        "Documentation": {
          "Id": 12
        },
        "Metadata": {
          "Common.PropertyName": "Context",
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router",
      "Common.TypeNameIdentifier": "Router",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -3280662649738157413,
      "Data2": -3435747272199950955,
      "Data3": 93864075351459690,
      "Data4": 1782415312587554142
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Routing.Router",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Routing.Router",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Routing.Router\">\r\n            <summary>\r\n            A component that supplies route data corresponding to the current navigation state.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Routing.Router"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "AppAssembly",
        "TypeName": "System.Reflection.Assembly",
        "DisplayName": "System.Reflection.Assembly Microsoft.AspNetCore.Components.Routing.Router.AppAssembly",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.AppAssembly\">\r\n            <summary>\r\n            Gets or sets the assembly that should be searched for components matching the URI.\r\n            </summary>\r\n        </member>",
        "IsEditorRequired": true,
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Reflection.Assembly",
          "Common.PropertyName": "AppAssembly"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "AdditionalAssemblies",
        "TypeName": "System.Collections.Generic.IEnumerable<System.Reflection.Assembly>",
        "DisplayName": "System.Collections.Generic.IEnumerable<System.Reflection.Assembly> Microsoft.AspNetCore.Components.Routing.Router.AdditionalAssemblies",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.AdditionalAssemblies\">\r\n            <summary>\r\n            Gets or sets a collection of additional assemblies that should be searched for components\r\n            that can match URIs.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IEnumerable<global::System.Reflection.Assembly>",
          "Common.PropertyName": "AdditionalAssemblies"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "NotFound",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Routing.Router.NotFound",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.NotFound\">\r\n            <summary>\r\n            Gets or sets the content to display when no match is found for the requested route.\r\n            </summary>\r\n        </member>",
        "IsEditorRequired": true,
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Common.PropertyName": "NotFound",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Found",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData> Microsoft.AspNetCore.Components.Routing.Router.Found",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Found\">\r\n            <summary>\r\n            Gets or sets the content to display when a match is found for the requested route.\r\n            </summary>\r\n        </member>",
        "IsEditorRequired": true,
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.RouteData>",
          "Common.PropertyName": "Found",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Navigating",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Routing.Router.Navigating",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Navigating\">\r\n            <summary>\r\n            Get or sets the content to display when asynchronous navigation is in progress.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Common.PropertyName": "Navigating",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "OnNavigateAsync",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext> Microsoft.AspNetCore.Components.Routing.Router.OnNavigateAsync",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.OnNavigateAsync\">\r\n            <summary>\r\n            Gets or sets a handler that should be called before navigating to a new page.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Routing.NavigationContext>",
          "Common.PropertyName": "OnNavigateAsync",
          "Components.EventCallback": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "PreferExactMatches",
        "TypeName": "System.Boolean",
        "DisplayName": "bool Microsoft.AspNetCore.Components.Routing.Router.PreferExactMatches",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.PreferExactMatches\">\r\n            <summary>\r\n            Gets or sets a flag to indicate whether route matching should prefer exact matches\r\n            over wildcards.\r\n            <para>This property is obsolete and configuring it does nothing.</para>\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Boolean",
          "Common.PropertyName": "PreferExactMatches"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Context",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Routing.Router.Context",
        "Documentation": {
          "Id": 12
        },
        "Metadata": {
          "Common.PropertyName": "Context",
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router",
      "Common.TypeNameIdentifier": "Router",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -4630501097924564915,
      "Data2": -6969352399603112370,
      "Data3": -884570759550605109,
      "Data4": -7873193560135182138
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.NotFound\">\r\n            <summary>\r\n            Gets or sets the content to display when no match is found for the requested route.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "NotFound",
        "ParentTag": "Router"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
      "Common.TypeNameIdentifier": "Router",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -5099200554898534440,
      "Data2": 1672479040074326024,
      "Data3": -6141355748436917872,
      "Data4": 7297139618378947219
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.NotFound\">\r\n            <summary>\r\n            Gets or sets the content to display when no match is found for the requested route.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "NotFound",
        "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
      "Common.TypeNameIdentifier": "Router",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 997777688699634274,
      "Data2": -284251513568491132,
      "Data3": 135580316298199262,
      "Data4": 362626749714483680
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Routing.Router.Found",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Routing.Router.Found",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Found\">\r\n            <summary>\r\n            Gets or sets the content to display when a match is found for the requested route.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Found",
        "ParentTag": "Router"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.ChildContent",
        "Name": "Context",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Routing.Router.Found.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "Found"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Context",
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Found",
      "Common.TypeNameIdentifier": "Router",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 417637872835683764,
      "Data2": -8076763885613547699,
      "Data3": -9098266231859602864,
      "Data4": 857792143088992320
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Routing.Router.Found",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Routing.Router.Found",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Found\">\r\n            <summary>\r\n            Gets or sets the content to display when a match is found for the requested route.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Found",
        "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.ChildContent",
        "Name": "Context",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Routing.Router.Found.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "Found"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Context",
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Found",
      "Common.TypeNameIdentifier": "Router",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 3681772173185327190,
      "Data2": 825247420715656159,
      "Data3": 126573524554611381,
      "Data4": 6282543168888848734
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Navigating\">\r\n            <summary>\r\n            Get or sets the content to display when asynchronous navigation is in progress.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Navigating",
        "ParentTag": "Router"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
      "Common.TypeNameIdentifier": "Router",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -6383522948775192073,
      "Data2": 8438063685897523313,
      "Data3": -1465512590274301324,
      "Data4": 9107167753500072108
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Navigating\">\r\n            <summary>\r\n            Get or sets the content to display when asynchronous navigation is in progress.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Navigating",
        "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
      "Common.TypeNameIdentifier": "Router",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -8573805794810384742,
      "Data2": 3190260025099912483,
      "Data3": 286211946971728597,
      "Data4": 2235639381601190169
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.EditForm",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.EditForm",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\">\r\n            <summary>\r\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "EditForm"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.EditForm.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>",
          "Common.PropertyName": "AdditionalAttributes"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "EditContext",
        "TypeName": "Microsoft.AspNetCore.Components.Forms.EditContext",
        "DisplayName": "Microsoft.AspNetCore.Components.Forms.EditContext Microsoft.AspNetCore.Components.Forms.EditForm.EditContext",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\">\r\n            <summary>\r\n            Supplies the edit context explicitly. If using this parameter, do not\r\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\r\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Forms.EditContext",
          "Common.PropertyName": "EditContext"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Model",
        "TypeName": "System.Object",
        "DisplayName": "object Microsoft.AspNetCore.Components.Forms.EditForm.Model",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\">\r\n            <summary>\r\n            Specifies the top-level model object for the form. An edit context will\r\n            be constructed for this model. If using this parameter, do not also supply\r\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Object",
          "Common.PropertyName": "Model"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext> Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent\">\r\n            <summary>\r\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
          "Common.PropertyName": "ChildContent",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "OnSubmit",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext> Microsoft.AspNetCore.Components.Forms.EditForm.OnSubmit",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnSubmit\">\r\n             <summary>\r\n             A callback that will be invoked when the form is submitted.\r\n            \r\n             If using this parameter, you are responsible for triggering any validation\r\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\r\n             </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
          "Common.PropertyName": "OnSubmit",
          "Components.EventCallback": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "OnValidSubmit",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext> Microsoft.AspNetCore.Components.Forms.EditForm.OnValidSubmit",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnValidSubmit\">\r\n            <summary>\r\n            A callback that will be invoked when the form is submitted and the\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
          "Common.PropertyName": "OnValidSubmit",
          "Components.EventCallback": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "OnInvalidSubmit",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext> Microsoft.AspNetCore.Components.Forms.EditForm.OnInvalidSubmit",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnInvalidSubmit\">\r\n            <summary>\r\n            A callback that will be invoked when the form is submitted and the\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
          "Common.PropertyName": "OnInvalidSubmit",
          "Components.EventCallback": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Context",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.EditForm.Context",
        "Documentation": {
          "Id": 12
        },
        "Metadata": {
          "Common.PropertyName": "Context",
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm",
      "Common.TypeNameIdentifier": "EditForm",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -4416280976354102043,
      "Data2": -3760434688580255632,
      "Data3": -5285723401744202602,
      "Data4": -8971075941582462424
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.EditForm",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.EditForm",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\">\r\n            <summary>\r\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.EditForm"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.EditForm.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>",
          "Common.PropertyName": "AdditionalAttributes"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "EditContext",
        "TypeName": "Microsoft.AspNetCore.Components.Forms.EditContext",
        "DisplayName": "Microsoft.AspNetCore.Components.Forms.EditContext Microsoft.AspNetCore.Components.Forms.EditForm.EditContext",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\">\r\n            <summary>\r\n            Supplies the edit context explicitly. If using this parameter, do not\r\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\r\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Forms.EditContext",
          "Common.PropertyName": "EditContext"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Model",
        "TypeName": "System.Object",
        "DisplayName": "object Microsoft.AspNetCore.Components.Forms.EditForm.Model",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\">\r\n            <summary>\r\n            Specifies the top-level model object for the form. An edit context will\r\n            be constructed for this model. If using this parameter, do not also supply\r\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Object",
          "Common.PropertyName": "Model"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext> Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent\">\r\n            <summary>\r\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
          "Common.PropertyName": "ChildContent",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "OnSubmit",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext> Microsoft.AspNetCore.Components.Forms.EditForm.OnSubmit",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnSubmit\">\r\n             <summary>\r\n             A callback that will be invoked when the form is submitted.\r\n            \r\n             If using this parameter, you are responsible for triggering any validation\r\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\r\n             </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
          "Common.PropertyName": "OnSubmit",
          "Components.EventCallback": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "OnValidSubmit",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext> Microsoft.AspNetCore.Components.Forms.EditForm.OnValidSubmit",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnValidSubmit\">\r\n            <summary>\r\n            A callback that will be invoked when the form is submitted and the\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
          "Common.PropertyName": "OnValidSubmit",
          "Components.EventCallback": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "OnInvalidSubmit",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext> Microsoft.AspNetCore.Components.Forms.EditForm.OnInvalidSubmit",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnInvalidSubmit\">\r\n            <summary>\r\n            A callback that will be invoked when the form is submitted and the\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
          "Common.PropertyName": "OnInvalidSubmit",
          "Components.EventCallback": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Context",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.EditForm.Context",
        "Documentation": {
          "Id": 12
        },
        "Metadata": {
          "Common.PropertyName": "Context",
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm",
      "Common.TypeNameIdentifier": "EditForm",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -8981596313203451455,
      "Data2": 1294755070007482779,
      "Data3": -8669452550379814980,
      "Data4": -7950528233039134052
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent\">\r\n            <summary>\r\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "EditForm"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.ChildContent",
        "Name": "Context",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "ChildContent"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Context",
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
      "Common.TypeNameIdentifier": "EditForm",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 6286417777505078195,
      "Data2": -3485072285495963737,
      "Data3": 4330826567266810052,
      "Data4": -321605847845400593
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent\">\r\n            <summary>\r\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "Microsoft.AspNetCore.Components.Forms.EditForm"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.ChildContent",
        "Name": "Context",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "ChildContent"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Context",
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
      "Common.TypeNameIdentifier": "EditForm",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -6187584435325857626,
      "Data2": 167589322083600774,
      "Data3": 5705629187949551463,
      "Data4": -5960037433306373421
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputCheckbox\">\r\n            <summary>\r\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "InputCheckbox"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputCheckbox.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>",
          "Common.PropertyName": "AdditionalAttributes"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Value",
        "TypeName": "System.Boolean",
        "DisplayName": "bool Microsoft.AspNetCore.Components.Forms.InputCheckbox.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Boolean",
          "Common.PropertyName": "Value"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ValueChanged",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean> Microsoft.AspNetCore.Components.Forms.InputCheckbox.ValueChanged",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>",
          "Common.PropertyName": "ValueChanged",
          "Components.EventCallback": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ValueExpression",
        "TypeName": "System.Linq.Expressions.Expression<System.Func<System.Boolean>>",
        "DisplayName": "System.Linq.Expressions.Expression<System.Func<System.Boolean>> Microsoft.AspNetCore.Components.Forms.InputCheckbox.ValueExpression",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<global::System.Boolean>>",
          "Common.PropertyName": "ValueExpression"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "DisplayName",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputCheckbox.DisplayName",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "DisplayName"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
      "Common.TypeNameIdentifier": "InputCheckbox",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -4146236444580142722,
      "Data2": 5030192670004756898,
      "Data3": -7372726565557631228,
      "Data4": 2856541690275313358
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputCheckbox\">\r\n            <summary>\r\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputCheckbox.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>",
          "Common.PropertyName": "AdditionalAttributes"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Value",
        "TypeName": "System.Boolean",
        "DisplayName": "bool Microsoft.AspNetCore.Components.Forms.InputCheckbox.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Boolean",
          "Common.PropertyName": "Value"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ValueChanged",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean> Microsoft.AspNetCore.Components.Forms.InputCheckbox.ValueChanged",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>",
          "Common.PropertyName": "ValueChanged",
          "Components.EventCallback": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ValueExpression",
        "TypeName": "System.Linq.Expressions.Expression<System.Func<System.Boolean>>",
        "DisplayName": "System.Linq.Expressions.Expression<System.Func<System.Boolean>> Microsoft.AspNetCore.Components.Forms.InputCheckbox.ValueExpression",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<global::System.Boolean>>",
          "Common.PropertyName": "ValueExpression"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "DisplayName",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputCheckbox.DisplayName",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "DisplayName"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
      "Common.TypeNameIdentifier": "InputCheckbox",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 1228906755754688927,
      "Data2": -5318654479202899585,
      "Data3": -3463282059115261949,
      "Data4": 7703747975973445142
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputDate`1\">\r\n            <summary>\r\n            An input component for editing date values.\r\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "InputDate"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "TValue",
        "TypeName": "System.Type",
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.TValue",
        "Documentation": {
          "Id": 13,
          "Args": [
            "TValue",
            "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "TValue",
          "Components.TypeParameter": "True",
          "Components.TypeParameterIsCascading": "False"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Type",
        "TypeName": "Microsoft.AspNetCore.Components.Forms.InputDateType",
        "IsEnum": true,
        "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputDateType Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.Type",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputDate`1.Type\">\r\n            <summary>\r\n            Gets or sets the type of HTML input to be rendered.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Forms.InputDateType",
          "Common.PropertyName": "Type"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ParsingErrorMessage",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.ParsingErrorMessage",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputDate`1.ParsingErrorMessage\">\r\n            <summary>\r\n            Gets or sets the error message used when displaying an a parsing error.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "ParsingErrorMessage"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>",
          "Common.PropertyName": "AdditionalAttributes"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Value",
        "TypeName": "TValue",
        "DisplayName": "TValue Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "TValue",
          "Common.PropertyName": "Value",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ValueChanged",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<TValue> Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.ValueChanged",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
          "Common.PropertyName": "ValueChanged",
          "Components.EventCallback": "True",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ValueExpression",
        "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
        "DisplayName": "System.Linq.Expressions.Expression<System.Func<TValue>> Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.ValueExpression",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
          "Common.PropertyName": "ValueExpression",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "DisplayName",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.DisplayName",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "DisplayName"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
      "Common.TypeNameIdentifier": "InputDate",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.GenericTyped": "True",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -7840331994028869918,
      "Data2": -3802876581885721243,
      "Data3": -2334812786506549364,
      "Data4": -3278621492621492256
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputDate`1\">\r\n            <summary>\r\n            An input component for editing date values.\r\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputDate"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "TValue",
        "TypeName": "System.Type",
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.TValue",
        "Documentation": {
          "Id": 13,
          "Args": [
            "TValue",
            "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "TValue",
          "Components.TypeParameter": "True",
          "Components.TypeParameterIsCascading": "False"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Type",
        "TypeName": "Microsoft.AspNetCore.Components.Forms.InputDateType",
        "IsEnum": true,
        "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputDateType Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.Type",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputDate`1.Type\">\r\n            <summary>\r\n            Gets or sets the type of HTML input to be rendered.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Forms.InputDateType",
          "Common.PropertyName": "Type"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ParsingErrorMessage",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.ParsingErrorMessage",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputDate`1.ParsingErrorMessage\">\r\n            <summary>\r\n            Gets or sets the error message used when displaying an a parsing error.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "ParsingErrorMessage"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>",
          "Common.PropertyName": "AdditionalAttributes"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Value",
        "TypeName": "TValue",
        "DisplayName": "TValue Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "TValue",
          "Common.PropertyName": "Value",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ValueChanged",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<TValue> Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.ValueChanged",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
          "Common.PropertyName": "ValueChanged",
          "Components.EventCallback": "True",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ValueExpression",
        "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
        "DisplayName": "System.Linq.Expressions.Expression<System.Func<TValue>> Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.ValueExpression",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
          "Common.PropertyName": "ValueExpression",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "DisplayName",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.DisplayName",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "DisplayName"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
      "Common.TypeNameIdentifier": "InputDate",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.GenericTyped": "True",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 4796468856128707353,
      "Data2": 6018478287849707548,
      "Data3": -69398322114761356,
      "Data4": -5671204785369491357
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputFile",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputFile",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputFile\">\r\n            <summary>\r\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "InputFile"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "OnChange",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs> Microsoft.AspNetCore.Components.Forms.InputFile.OnChange",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputFile.OnChange\">\r\n            <summary>\r\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>",
          "Common.PropertyName": "OnChange",
          "Components.EventCallback": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputFile.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputFile.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the input element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>",
          "Common.PropertyName": "AdditionalAttributes"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputFile",
      "Common.TypeNameIdentifier": "InputFile",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 2851344421610587549,
      "Data2": -8253885058954965608,
      "Data3": 2253047349172282888,
      "Data4": 6183884232706389432
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputFile",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputFile",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputFile\">\r\n            <summary>\r\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputFile"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "OnChange",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs> Microsoft.AspNetCore.Components.Forms.InputFile.OnChange",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputFile.OnChange\">\r\n            <summary>\r\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>",
          "Common.PropertyName": "OnChange",
          "Components.EventCallback": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputFile.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputFile.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the input element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>",
          "Common.PropertyName": "AdditionalAttributes"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputFile",
      "Common.TypeNameIdentifier": "InputFile",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -3980074744483278973,
      "Data2": 1326625528494469073,
      "Data3": -6904959133428587702,
      "Data4": -8044718618287349359
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputNumber`1\">\r\n            <summary>\r\n            An input component for editing numeric values.\r\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "InputNumber"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "TValue",
        "TypeName": "System.Type",
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>.TValue",
        "Documentation": {
          "Id": 13,
          "Args": [
            "TValue",
            "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "TValue",
          "Components.TypeParameter": "True",
          "Components.TypeParameterIsCascading": "False"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ParsingErrorMessage",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>.ParsingErrorMessage",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputNumber`1.ParsingErrorMessage\">\r\n            <summary>\r\n            Gets or sets the error message used when displaying an a parsing error.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "ParsingErrorMessage"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>",
          "Common.PropertyName": "AdditionalAttributes"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Value",
        "TypeName": "TValue",
        "DisplayName": "TValue Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "TValue",
          "Common.PropertyName": "Value",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ValueChanged",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<TValue> Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>.ValueChanged",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
          "Common.PropertyName": "ValueChanged",
          "Components.EventCallback": "True",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ValueExpression",
        "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
        "DisplayName": "System.Linq.Expressions.Expression<System.Func<TValue>> Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>.ValueExpression",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
          "Common.PropertyName": "ValueExpression",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "DisplayName",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>.DisplayName",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "DisplayName"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
      "Common.TypeNameIdentifier": "InputNumber",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.GenericTyped": "True",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 6183677447586594150,
      "Data2": 2955628431327958784,
      "Data3": 2686326169988694506,
      "Data4": -7678600250330349587
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputNumber`1\">\r\n            <summary>\r\n            An input component for editing numeric values.\r\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputNumber"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "TValue",
        "TypeName": "System.Type",
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>.TValue",
        "Documentation": {
          "Id": 13,
          "Args": [
            "TValue",
            "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "TValue",
          "Components.TypeParameter": "True",
          "Components.TypeParameterIsCascading": "False"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ParsingErrorMessage",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>.ParsingErrorMessage",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputNumber`1.ParsingErrorMessage\">\r\n            <summary>\r\n            Gets or sets the error message used when displaying an a parsing error.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "ParsingErrorMessage"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>",
          "Common.PropertyName": "AdditionalAttributes"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Value",
        "TypeName": "TValue",
        "DisplayName": "TValue Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "TValue",
          "Common.PropertyName": "Value",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ValueChanged",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<TValue> Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>.ValueChanged",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
          "Common.PropertyName": "ValueChanged",
          "Components.EventCallback": "True",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ValueExpression",
        "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
        "DisplayName": "System.Linq.Expressions.Expression<System.Func<TValue>> Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>.ValueExpression",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
          "Common.PropertyName": "ValueExpression",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "DisplayName",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>.DisplayName",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "DisplayName"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
      "Common.TypeNameIdentifier": "InputNumber",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.GenericTyped": "True",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 6962000952834850936,
      "Data2": 8086149865075863129,
      "Data3": -979942818319618291,
      "Data4": -6754850214328841521
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\">\r\n            <summary>\r\n            An input component used for selecting a value from a group of choices.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "InputRadio"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "TValue",
        "TypeName": "System.Type",
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>.TValue",
        "Documentation": {
          "Id": 13,
          "Args": [
            "TValue",
            "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "TValue",
          "Components.TypeParameter": "True",
          "Components.TypeParameterIsCascading": "False"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the input element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>",
          "Common.PropertyName": "AdditionalAttributes"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Value",
        "TypeName": "TValue",
        "DisplayName": "TValue Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of this input.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "TValue",
          "Common.PropertyName": "Value",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Name",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>.Name",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.Name\">\r\n            <summary>\r\n            Gets or sets the name of the parent input radio group.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "Name"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
      "Common.TypeNameIdentifier": "InputRadio",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.GenericTyped": "True",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 6723092100417738000,
      "Data2": 68278938014999267,
      "Data3": -3172674951308760976,
      "Data4": -8612851921988760702
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\">\r\n            <summary>\r\n            An input component used for selecting a value from a group of choices.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputRadio"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "TValue",
        "TypeName": "System.Type",
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>.TValue",
        "Documentation": {
          "Id": 13,
          "Args": [
            "TValue",
            "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "TValue",
          "Components.TypeParameter": "True",
          "Components.TypeParameterIsCascading": "False"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the input element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>",
          "Common.PropertyName": "AdditionalAttributes"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Value",
        "TypeName": "TValue",
        "DisplayName": "TValue Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of this input.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "TValue",
          "Common.PropertyName": "Value",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Name",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>.Name",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.Name\">\r\n            <summary>\r\n            Gets or sets the name of the parent input radio group.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "Name"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
      "Common.TypeNameIdentifier": "InputRadio",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.GenericTyped": "True",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -5938157798000805913,
      "Data2": 1424891236530968759,
      "Data3": -8084624530189606525,
      "Data4": 536175735094239168
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\">\r\n            <summary>\r\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "InputRadioGroup"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "TValue",
        "TypeName": "System.Type",
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.TValue",
        "Documentation": {
          "Id": 13,
          "Args": [
            "TValue",
            "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "TValue",
          "Components.TypeParameter": "True",
          "Components.TypeParameterIsCascading": "False"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Common.PropertyName": "ChildContent",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Name",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.Name",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.Name\">\r\n            <summary>\r\n            Gets or sets the name of the group.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "Name"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>",
          "Common.PropertyName": "AdditionalAttributes"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Value",
        "TypeName": "TValue",
        "DisplayName": "TValue Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "TValue",
          "Common.PropertyName": "Value",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ValueChanged",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<TValue> Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ValueChanged",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
          "Common.PropertyName": "ValueChanged",
          "Components.EventCallback": "True",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ValueExpression",
        "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
        "DisplayName": "System.Linq.Expressions.Expression<System.Func<TValue>> Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ValueExpression",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
          "Common.PropertyName": "ValueExpression",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "DisplayName",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.DisplayName",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "DisplayName"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
      "Common.TypeNameIdentifier": "InputRadioGroup",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.GenericTyped": "True",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 1343944536014529469,
      "Data2": -5694369823368609398,
      "Data3": -2200377365782445289,
      "Data4": -72805778816656697
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\">\r\n            <summary>\r\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "TValue",
        "TypeName": "System.Type",
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.TValue",
        "Documentation": {
          "Id": 13,
          "Args": [
            "TValue",
            "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "TValue",
          "Components.TypeParameter": "True",
          "Components.TypeParameterIsCascading": "False"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Common.PropertyName": "ChildContent",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Name",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.Name",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.Name\">\r\n            <summary>\r\n            Gets or sets the name of the group.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "Name"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>",
          "Common.PropertyName": "AdditionalAttributes"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Value",
        "TypeName": "TValue",
        "DisplayName": "TValue Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "TValue",
          "Common.PropertyName": "Value",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ValueChanged",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<TValue> Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ValueChanged",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
          "Common.PropertyName": "ValueChanged",
          "Components.EventCallback": "True",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ValueExpression",
        "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
        "DisplayName": "System.Linq.Expressions.Expression<System.Func<TValue>> Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ValueExpression",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
          "Common.PropertyName": "ValueExpression",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "DisplayName",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.DisplayName",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "DisplayName"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
      "Common.TypeNameIdentifier": "InputRadioGroup",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.GenericTyped": "True",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 1317358083689965559,
      "Data2": -4272095063176632685,
      "Data3": 4297138664287640272,
      "Data4": -8394067417849936295
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "InputRadioGroup"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
      "Common.TypeNameIdentifier": "InputRadioGroup",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -4598352409896361649,
      "Data2": -565332510050948402,
      "Data3": -3146681341001094028,
      "Data4": -6420239872112618550
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
      "Common.TypeNameIdentifier": "InputRadioGroup",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 2781946253822678563,
      "Data2": 1738200853640120005,
      "Data3": -7953344209652671421,
      "Data4": -3684910699624766328
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputSelect`1\">\r\n            <summary>\r\n            A dropdown selection component.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "InputSelect"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "TValue",
        "TypeName": "System.Type",
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.TValue",
        "Documentation": {
          "Id": 13,
          "Args": [
            "TValue",
            "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "TValue",
          "Components.TypeParameter": "True",
          "Components.TypeParameterIsCascading": "False"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputSelect`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the select element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Common.PropertyName": "ChildContent",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>",
          "Common.PropertyName": "AdditionalAttributes"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Value",
        "TypeName": "TValue",
        "DisplayName": "TValue Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "TValue",
          "Common.PropertyName": "Value",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ValueChanged",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<TValue> Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ValueChanged",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
          "Common.PropertyName": "ValueChanged",
          "Components.EventCallback": "True",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ValueExpression",
        "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
        "DisplayName": "System.Linq.Expressions.Expression<System.Func<TValue>> Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ValueExpression",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
          "Common.PropertyName": "ValueExpression",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "DisplayName",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.DisplayName",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "DisplayName"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
      "Common.TypeNameIdentifier": "InputSelect",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.GenericTyped": "True",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 2251377545967591838,
      "Data2": 18405769407960497,
      "Data3": -4505800118385142463,
      "Data4": -1561503781308974382
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputSelect`1\">\r\n            <summary>\r\n            A dropdown selection component.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputSelect"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "TValue",
        "TypeName": "System.Type",
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.TValue",
        "Documentation": {
          "Id": 13,
          "Args": [
            "TValue",
            "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "TValue",
          "Components.TypeParameter": "True",
          "Components.TypeParameterIsCascading": "False"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputSelect`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the select element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Common.PropertyName": "ChildContent",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>",
          "Common.PropertyName": "AdditionalAttributes"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Value",
        "TypeName": "TValue",
        "DisplayName": "TValue Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "TValue",
          "Common.PropertyName": "Value",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ValueChanged",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<TValue> Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ValueChanged",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
          "Common.PropertyName": "ValueChanged",
          "Components.EventCallback": "True",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ValueExpression",
        "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
        "DisplayName": "System.Linq.Expressions.Expression<System.Func<TValue>> Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ValueExpression",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
          "Common.PropertyName": "ValueExpression",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "DisplayName",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.DisplayName",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "DisplayName"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
      "Common.TypeNameIdentifier": "InputSelect",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.GenericTyped": "True",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 7569258355189286579,
      "Data2": 3484496473719375006,
      "Data3": 270058766867767607,
      "Data4": 3937157457485765839
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputSelect`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the select element.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "InputSelect"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
      "Common.TypeNameIdentifier": "InputSelect",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 8773928702153100195,
      "Data2": 4399318109313962927,
      "Data3": -4004703774880342141,
      "Data4": -6466560754873454137
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputSelect`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the select element.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "Microsoft.AspNetCore.Components.Forms.InputSelect"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
      "Common.TypeNameIdentifier": "InputSelect",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 5266961133227009334,
      "Data2": 7069408624431995958,
      "Data3": -7904567687459931970,
      "Data4": -4223639896610183728
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputText",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputText\">\r\n            <summary>\r\n            An input component for editing <see cref=\"T:System.String\" /> values.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "InputText"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputText.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>",
          "Common.PropertyName": "AdditionalAttributes"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Value",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputText.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "Value"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ValueChanged",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.String> Microsoft.AspNetCore.Components.Forms.InputText.ValueChanged",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>",
          "Common.PropertyName": "ValueChanged",
          "Components.EventCallback": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ValueExpression",
        "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
        "DisplayName": "System.Linq.Expressions.Expression<System.Func<System.String>> Microsoft.AspNetCore.Components.Forms.InputText.ValueExpression",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>",
          "Common.PropertyName": "ValueExpression"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "DisplayName",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputText.DisplayName",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "DisplayName"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText",
      "Common.TypeNameIdentifier": "InputText",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -3255411392688198602,
      "Data2": 6369426529646532600,
      "Data3": -1880525005011952246,
      "Data4": -2696033573673097348
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputText",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputText\">\r\n            <summary>\r\n            An input component for editing <see cref=\"T:System.String\" /> values.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputText"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputText.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>",
          "Common.PropertyName": "AdditionalAttributes"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Value",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputText.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "Value"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ValueChanged",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.String> Microsoft.AspNetCore.Components.Forms.InputText.ValueChanged",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>",
          "Common.PropertyName": "ValueChanged",
          "Components.EventCallback": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ValueExpression",
        "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
        "DisplayName": "System.Linq.Expressions.Expression<System.Func<System.String>> Microsoft.AspNetCore.Components.Forms.InputText.ValueExpression",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>",
          "Common.PropertyName": "ValueExpression"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "DisplayName",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputText.DisplayName",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "DisplayName"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText",
      "Common.TypeNameIdentifier": "InputText",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -8131600848271715753,
      "Data2": 5352651226290887985,
      "Data3": -963108624152572302,
      "Data4": 2401880409617977689
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputTextArea\">\r\n            <summary>\r\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "InputTextArea"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputTextArea.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>",
          "Common.PropertyName": "AdditionalAttributes"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Value",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputTextArea.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "Value"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ValueChanged",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.String> Microsoft.AspNetCore.Components.Forms.InputTextArea.ValueChanged",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>",
          "Common.PropertyName": "ValueChanged",
          "Components.EventCallback": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ValueExpression",
        "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
        "DisplayName": "System.Linq.Expressions.Expression<System.Func<System.String>> Microsoft.AspNetCore.Components.Forms.InputTextArea.ValueExpression",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>",
          "Common.PropertyName": "ValueExpression"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "DisplayName",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputTextArea.DisplayName",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "DisplayName"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
      "Common.TypeNameIdentifier": "InputTextArea",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -836317901742063985,
      "Data2": 7629847914134898471,
      "Data3": 7906853128765055422,
      "Data4": 8449800879468097797
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputTextArea\">\r\n            <summary>\r\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputTextArea"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputTextArea.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>",
          "Common.PropertyName": "AdditionalAttributes"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Value",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputTextArea.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "Value"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ValueChanged",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.String> Microsoft.AspNetCore.Components.Forms.InputTextArea.ValueChanged",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>",
          "Common.PropertyName": "ValueChanged",
          "Components.EventCallback": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ValueExpression",
        "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
        "DisplayName": "System.Linq.Expressions.Expression<System.Func<System.String>> Microsoft.AspNetCore.Components.Forms.InputTextArea.ValueExpression",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>",
          "Common.PropertyName": "ValueExpression"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "DisplayName",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputTextArea.DisplayName",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "DisplayName"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
      "Common.TypeNameIdentifier": "InputTextArea",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -657523363270798859,
      "Data2": 6006145276722035970,
      "Data3": -5368716738219495178,
      "Data4": 7729072236187588205
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1\">\r\n            <summary>\r\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ValidationMessage"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "TValue",
        "TypeName": "System.Type",
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>.TValue",
        "Documentation": {
          "Id": 13,
          "Args": [
            "TValue",
            "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "TValue",
          "Components.TypeParameter": "True",
          "Components.TypeParameterIsCascading": "False"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>",
          "Common.PropertyName": "AdditionalAttributes"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "For",
        "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
        "DisplayName": "System.Linq.Expressions.Expression<System.Func<TValue>> Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>.For",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1.For\">\r\n            <summary>\r\n            Specifies the field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
          "Common.PropertyName": "For",
          "Components.GenericTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
      "Common.TypeNameIdentifier": "ValidationMessage",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.GenericTyped": "True",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -6969290110093745382,
      "Data2": 4486222785458242217,
      "Data3": -5300838879534075157,
      "Data4": -8244008189902187920
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1\">\r\n            <summary>\r\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "TValue",
        "TypeName": "System.Type",
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>.TValue",
        "Documentation": {
          "Id": 13,
          "Args": [
            "TValue",
            "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "TValue",
          "Components.TypeParameter": "True",
          "Components.TypeParameterIsCascading": "False"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>",
          "Common.PropertyName": "AdditionalAttributes"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "For",
        "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
        "DisplayName": "System.Linq.Expressions.Expression<System.Func<TValue>> Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>.For",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1.For\">\r\n            <summary>\r\n            Specifies the field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
          "Common.PropertyName": "For",
          "Components.GenericTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
      "Common.TypeNameIdentifier": "ValidationMessage",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.GenericTyped": "True",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 2679323449636127492,
      "Data2": 7372491348027668297,
      "Data3": -97011653695442052,
      "Data4": -3017903512336013466
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.ValidationSummary\">\r\n            <summary>\r\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ValidationSummary"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "Model",
        "TypeName": "System.Object",
        "DisplayName": "object Microsoft.AspNetCore.Components.Forms.ValidationSummary.Model",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationSummary.Model\">\r\n            <summary>\r\n            Gets or sets the model to produce the list of validation messages for.\r\n            When specified, this lists all errors that are associated with the model instance.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Object",
          "Common.PropertyName": "Model"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.ValidationSummary.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationSummary.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>",
          "Common.PropertyName": "AdditionalAttributes"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
      "Common.TypeNameIdentifier": "ValidationSummary",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 2728909145337604665,
      "Data2": -2036286347850716288,
      "Data3": -6143115957433341905,
      "Data4": -5929085004096954415
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.ValidationSummary\">\r\n            <summary>\r\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "Model",
        "TypeName": "System.Object",
        "DisplayName": "object Microsoft.AspNetCore.Components.Forms.ValidationSummary.Model",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationSummary.Model\">\r\n            <summary>\r\n            Gets or sets the model to produce the list of validation messages for.\r\n            When specified, this lists all errors that are associated with the model instance.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Object",
          "Common.PropertyName": "Model"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.ValidationSummary.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationSummary.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>",
          "Common.PropertyName": "AdditionalAttributes"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
      "Common.TypeNameIdentifier": "ValidationSummary",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 7682595428045860027,
      "Data2": 3732976448010917183,
      "Data3": -8061381699924970167,
      "Data4": -5315533547263143033
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate\">\r\n            <summary>\r\n            After navigating from one page to another, sets focus to an element\r\n            matching a CSS selector. This can be used to build an accessible\r\n            navigation system compatible with screen readers.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "FocusOnNavigate"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "RouteData",
        "TypeName": "Microsoft.AspNetCore.Components.RouteData",
        "DisplayName": "Microsoft.AspNetCore.Components.RouteData Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.RouteData",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This can be obtained from an enclosing\r\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.Router\" /> component.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RouteData",
          "Common.PropertyName": "RouteData"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Selector",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.Selector",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.Selector\">\r\n            <summary>\r\n            Gets or sets a CSS selector describing the element to be focused after\r\n            navigation between pages.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "Selector"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate",
      "Common.TypeNameIdentifier": "FocusOnNavigate",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -5183413515272351814,
      "Data2": -6012188184945270530,
      "Data3": -3103210565056525924,
      "Data4": 3381279242650094694
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate\">\r\n            <summary>\r\n            After navigating from one page to another, sets focus to an element\r\n            matching a CSS selector. This can be used to build an accessible\r\n            navigation system compatible with screen readers.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "RouteData",
        "TypeName": "Microsoft.AspNetCore.Components.RouteData",
        "DisplayName": "Microsoft.AspNetCore.Components.RouteData Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.RouteData",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This can be obtained from an enclosing\r\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.Router\" /> component.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RouteData",
          "Common.PropertyName": "RouteData"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Selector",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.Selector",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.Selector\">\r\n            <summary>\r\n            Gets or sets a CSS selector describing the element to be focused after\r\n            navigation between pages.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "Selector"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate",
      "Common.TypeNameIdentifier": "FocusOnNavigate",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -6075053072669349455,
      "Data2": 1116981275961837673,
      "Data3": 6701534713590423367,
      "Data4": -9209269012870764728
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Routing.NavLink",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Routing.NavLink",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\">\r\n            <summary>\r\n            A component that renders an anchor tag, automatically toggling its 'active'\r\n            class based on whether its 'href' matches the current URI.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "NavLink"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "ActiveClass",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Routing.NavLink.ActiveClass",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ActiveClass\">\r\n            <summary>\r\n            Gets or sets the CSS class name applied to the NavLink when the\r\n            current route matches the NavLink href.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "ActiveClass"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Routing.NavLink.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be added to the generated\r\n            <c>a</c> element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>",
          "Common.PropertyName": "AdditionalAttributes"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content of the component.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Common.PropertyName": "ChildContent",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Match",
        "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
        "IsEnum": true,
        "DisplayName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch Microsoft.AspNetCore.Components.Routing.NavLink.Match",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.Match\">\r\n            <summary>\r\n            Gets or sets a value representing the URL matching behavior.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
          "Common.PropertyName": "Match"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink",
      "Common.TypeNameIdentifier": "NavLink",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -4425655137957744125,
      "Data2": -1739911580685482942,
      "Data3": 1176393779720623314,
      "Data4": 5866617672483009240
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Routing.NavLink",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Routing.NavLink",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\">\r\n            <summary>\r\n            A component that renders an anchor tag, automatically toggling its 'active'\r\n            class based on whether its 'href' matches the current URI.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Routing.NavLink"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "ActiveClass",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Routing.NavLink.ActiveClass",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ActiveClass\">\r\n            <summary>\r\n            Gets or sets the CSS class name applied to the NavLink when the\r\n            current route matches the NavLink href.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String",
          "Common.PropertyName": "ActiveClass"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Routing.NavLink.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be added to the generated\r\n            <c>a</c> element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>",
          "Common.PropertyName": "AdditionalAttributes"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content of the component.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Common.PropertyName": "ChildContent",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Match",
        "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
        "IsEnum": true,
        "DisplayName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch Microsoft.AspNetCore.Components.Routing.NavLink.Match",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.Match\">\r\n            <summary>\r\n            Gets or sets a value representing the URL matching behavior.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
          "Common.PropertyName": "Match"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink",
      "Common.TypeNameIdentifier": "NavLink",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 729867532328937848,
      "Data2": 8339097499618248485,
      "Data3": 8621832867303836939,
      "Data4": 5452789395714652854
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content of the component.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "NavLink"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
      "Common.TypeNameIdentifier": "NavLink",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -5909677961420804356,
      "Data2": -2703327156936613231,
      "Data3": 3876832106918892441,
      "Data4": 3705545439044636613
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content of the component.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "Microsoft.AspNetCore.Components.Routing.NavLink"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
      "Common.TypeNameIdentifier": "NavLink",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -4338109109745620331,
      "Data2": 1122288490760957248,
      "Data3": 672951010100216705,
      "Data4": -371817035841035436
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Web.HeadContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.HeadContent",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\">\r\n            <summary>\r\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> components.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "HeadContent"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Common.PropertyName": "ChildContent",
          "Components.ChildContent": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadContent",
      "Common.TypeNameIdentifier": "HeadContent",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -8778205530880997027,
      "Data2": 561032384787948903,
      "Data3": 3510161547344710101,
      "Data4": 320285587052186776
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Web.HeadContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.HeadContent",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\">\r\n            <summary>\r\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> components.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Web.HeadContent"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Common.PropertyName": "ChildContent",
          "Components.ChildContent": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadContent",
      "Common.TypeNameIdentifier": "HeadContent",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 2675851088527579445,
      "Data2": -7505334244707772972,
      "Data3": -2573782609309376502,
      "Data4": -8243380520380941219
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "HeadContent"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent",
      "Common.TypeNameIdentifier": "HeadContent",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 7416319073456775495,
      "Data2": 1393370737886465116,
      "Data3": -7604766231301068342,
      "Data4": -1545979927512581241
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "Microsoft.AspNetCore.Components.Web.HeadContent"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent",
      "Common.TypeNameIdentifier": "HeadContent",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 7972003283842483462,
      "Data2": -6111923177918649908,
      "Data3": -7247009272187044843,
      "Data4": 2417857150953154331
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Web.HeadOutlet",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.HeadOutlet",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\">\r\n            <summary>\r\n            Renders content provided by <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\" /> components.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "HeadOutlet"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadOutlet",
      "Common.TypeNameIdentifier": "HeadOutlet",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -7687879641563535454,
      "Data2": -7821991084486909486,
      "Data3": 1638294724949089900,
      "Data4": -8088347289479322154
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Web.HeadOutlet",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.HeadOutlet",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\">\r\n            <summary>\r\n            Renders content provided by <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\" /> components.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Web.HeadOutlet"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadOutlet",
      "Common.TypeNameIdentifier": "HeadOutlet",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -4986704518340286913,
      "Data2": 3941299843850945798,
      "Data3": 8081730510459249779,
      "Data4": 6829746023478172654
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Web.PageTitle",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.PageTitle",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Web.PageTitle\">\r\n            <summary>\r\n            Enables rendering an HTML <c>&lt;title&gt;</c> to a <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> component.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "PageTitle"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered as the document title.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Common.PropertyName": "ChildContent",
          "Components.ChildContent": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.PageTitle",
      "Common.TypeNameIdentifier": "PageTitle",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -1785309280486218875,
      "Data2": 2538793686351442420,
      "Data3": 3487399189204682320,
      "Data4": -3590425704578969524
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Web.PageTitle",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.PageTitle",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Web.PageTitle\">\r\n            <summary>\r\n            Enables rendering an HTML <c>&lt;title&gt;</c> to a <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> component.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Web.PageTitle"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered as the document title.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Common.PropertyName": "ChildContent",
          "Components.ChildContent": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.PageTitle",
      "Common.TypeNameIdentifier": "PageTitle",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -8731522919429182879,
      "Data2": 575071958939308809,
      "Data3": 1048312012943532591,
      "Data4": -7923161595380068690
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered as the document title.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "PageTitle"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent",
      "Common.TypeNameIdentifier": "PageTitle",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 7842577119648765078,
      "Data2": 2821295855866914472,
      "Data3": -1510255526782824792,
      "Data4": -974922538555646258
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered as the document title.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "Microsoft.AspNetCore.Components.Web.PageTitle"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent",
      "Common.TypeNameIdentifier": "PageTitle",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 6915406746208842857,
      "Data2": -6842483676820310163,
      "Data3": -3588240388182261951,
      "Data4": 6590627877874627896
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Web.ErrorBoundary\">\r\n            <summary>\r\n            Captures errors thrown from its child content.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ErrorBoundary"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent\">\r\n            <summary>\r\n            The content to be displayed when there is no error.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Common.PropertyName": "ChildContent",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ErrorContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.Exception>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<System.Exception> Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent\">\r\n            <summary>\r\n            The content to be displayed when there is an error.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Exception>",
          "Common.PropertyName": "ErrorContent",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "MaximumErrorCount",
        "TypeName": "System.Int32",
        "DisplayName": "int Microsoft.AspNetCore.Components.Web.ErrorBoundary.MaximumErrorCount",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.MaximumErrorCount\">\r\n            <summary>\r\n            The maximum number of errors that can be handled. If more errors are received,\r\n            they will be treated as fatal. Calling <see cref=\"M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.Recover\" /> resets the count.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Int32",
          "Common.PropertyName": "MaximumErrorCount"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Context",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.ErrorBoundary.Context",
        "Documentation": {
          "Id": 12
        },
        "Metadata": {
          "Common.PropertyName": "Context",
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary",
      "Common.TypeNameIdentifier": "ErrorBoundary",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -23553981914542077,
      "Data2": 3273965855492279329,
      "Data3": -6810468509776494695,
      "Data4": -2696351285898800655
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Web.ErrorBoundary\">\r\n            <summary>\r\n            Captures errors thrown from its child content.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent\">\r\n            <summary>\r\n            The content to be displayed when there is no error.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Common.PropertyName": "ChildContent",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ErrorContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.Exception>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<System.Exception> Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent\">\r\n            <summary>\r\n            The content to be displayed when there is an error.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Exception>",
          "Common.PropertyName": "ErrorContent",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "MaximumErrorCount",
        "TypeName": "System.Int32",
        "DisplayName": "int Microsoft.AspNetCore.Components.Web.ErrorBoundary.MaximumErrorCount",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.MaximumErrorCount\">\r\n            <summary>\r\n            The maximum number of errors that can be handled. If more errors are received,\r\n            they will be treated as fatal. Calling <see cref=\"M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.Recover\" /> resets the count.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Int32",
          "Common.PropertyName": "MaximumErrorCount"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Context",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.ErrorBoundary.Context",
        "Documentation": {
          "Id": 12
        },
        "Metadata": {
          "Common.PropertyName": "Context",
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary",
      "Common.TypeNameIdentifier": "ErrorBoundary",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 261270750634103872,
      "Data2": -4040289822247437557,
      "Data3": 6581640238067111153,
      "Data4": -2618668067638517728
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent\">\r\n            <summary>\r\n            The content to be displayed when there is no error.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "ErrorBoundary"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent",
      "Common.TypeNameIdentifier": "ErrorBoundary",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 5917622561271015659,
      "Data2": -2730896909733352661,
      "Data3": -3179414723649827394,
      "Data4": 5575495618834739495
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent\">\r\n            <summary>\r\n            The content to be displayed when there is no error.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "Microsoft.AspNetCore.Components.Web.ErrorBoundary"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent",
      "Common.TypeNameIdentifier": "ErrorBoundary",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -1772731680796811281,
      "Data2": -4259965488492657216,
      "Data3": -6182093730501710886,
      "Data4": 5764102814695146909
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent\">\r\n            <summary>\r\n            The content to be displayed when there is an error.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ErrorContent",
        "ParentTag": "ErrorBoundary"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.ChildContent",
        "Name": "Context",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "ErrorContent"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Context",
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent",
      "Common.TypeNameIdentifier": "ErrorBoundary",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -4513947692556941465,
      "Data2": 5506766730592619299,
      "Data3": 58899035330653046,
      "Data4": -4875340000723879674
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent\">\r\n            <summary>\r\n            The content to be displayed when there is an error.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ErrorContent",
        "ParentTag": "Microsoft.AspNetCore.Components.Web.ErrorBoundary"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.ChildContent",
        "Name": "Context",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "ErrorContent"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Context",
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent",
      "Common.TypeNameIdentifier": "ErrorBoundary",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 3681651678190627926,
      "Data2": -8580866191960272727,
      "Data3": 6485903226492823851,
      "Data4": 1341368588767960373
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1\">\r\n            <summary>\r\n            Provides functionality for rendering a virtualized list of items.\r\n            </summary>\r\n            <typeparam name=\"TItem\">The <c>context</c> type for the items being rendered.</typeparam>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Virtualize"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "TItem",
        "TypeName": "System.Type",
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.TItem",
        "Documentation": {
          "Id": 13,
          "Args": [
            "TItem",
            "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "TItem",
          "Components.TypeParameter": "True",
          "Components.TypeParameterIsCascading": "False"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<TItem> Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<TItem>",
          "Common.PropertyName": "ChildContent",
          "Components.ChildContent": "True",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ItemContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<TItem> Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<TItem>",
          "Common.PropertyName": "ItemContent",
          "Components.ChildContent": "True",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Placeholder",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext> Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Placeholder\">\r\n            <summary>\r\n            Gets or sets the template for items that have not yet been loaded in memory.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>",
          "Common.PropertyName": "Placeholder",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ItemSize",
        "TypeName": "System.Single",
        "DisplayName": "float Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemSize",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemSize\">\r\n            <summary>\r\n            Gets the size of each item in pixels. Defaults to 50px.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Single",
          "Common.PropertyName": "ItemSize"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ItemsProvider",
        "TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>",
        "DisplayName": "Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem> Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemsProvider",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemsProvider\">\r\n            <summary>\r\n            Gets or sets the function providing items to the list.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>",
          "Common.PropertyName": "ItemsProvider",
          "Components.DelegateSignature": "True",
          "Components.GenericTyped": "True",
          "Components.IsDelegateAwaitableResult": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Items",
        "TypeName": "System.Collections.Generic.ICollection<TItem>",
        "DisplayName": "System.Collections.Generic.ICollection<TItem> Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Items",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Items\">\r\n            <summary>\r\n            Gets or sets the fixed item source.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.ICollection<TItem>",
          "Common.PropertyName": "Items",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "OverscanCount",
        "TypeName": "System.Int32",
        "DisplayName": "int Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.OverscanCount",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.OverscanCount\">\r\n            <summary>\r\n            Gets or sets a value that determines how many additional items will be rendered\r\n            before and after the visible region. This help to reduce the frequency of rendering\r\n            during scrolling. However, higher values mean that more elements will be present\r\n            in the page.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Int32",
          "Common.PropertyName": "OverscanCount"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Context",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Context",
        "Documentation": {
          "Id": 12
        },
        "Metadata": {
          "Common.PropertyName": "Context",
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>",
      "Common.TypeNameIdentifier": "Virtualize",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
      "Components.GenericTyped": "True",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -2586205075779444869,
      "Data2": -4941152039865785001,
      "Data3": 189869701730070714,
      "Data4": -3522210530396683919
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1\">\r\n            <summary>\r\n            Provides functionality for rendering a virtualized list of items.\r\n            </summary>\r\n            <typeparam name=\"TItem\">The <c>context</c> type for the items being rendered.</typeparam>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Component",
        "Name": "TItem",
        "TypeName": "System.Type",
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.TItem",
        "Documentation": {
          "Id": 13,
          "Args": [
            "TItem",
            "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "TItem",
          "Components.TypeParameter": "True",
          "Components.TypeParameterIsCascading": "False"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<TItem> Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<TItem>",
          "Common.PropertyName": "ChildContent",
          "Components.ChildContent": "True",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ItemContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<TItem> Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<TItem>",
          "Common.PropertyName": "ItemContent",
          "Components.ChildContent": "True",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Placeholder",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext> Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Placeholder\">\r\n            <summary>\r\n            Gets or sets the template for items that have not yet been loaded in memory.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>",
          "Common.PropertyName": "Placeholder",
          "Components.ChildContent": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ItemSize",
        "TypeName": "System.Single",
        "DisplayName": "float Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemSize",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemSize\">\r\n            <summary>\r\n            Gets the size of each item in pixels. Defaults to 50px.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Single",
          "Common.PropertyName": "ItemSize"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "ItemsProvider",
        "TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>",
        "DisplayName": "Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem> Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemsProvider",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemsProvider\">\r\n            <summary>\r\n            Gets or sets the function providing items to the list.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>",
          "Common.PropertyName": "ItemsProvider",
          "Components.DelegateSignature": "True",
          "Components.GenericTyped": "True",
          "Components.IsDelegateAwaitableResult": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Items",
        "TypeName": "System.Collections.Generic.ICollection<TItem>",
        "DisplayName": "System.Collections.Generic.ICollection<TItem> Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Items",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Items\">\r\n            <summary>\r\n            Gets or sets the fixed item source.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.ICollection<TItem>",
          "Common.PropertyName": "Items",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "OverscanCount",
        "TypeName": "System.Int32",
        "DisplayName": "int Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.OverscanCount",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.OverscanCount\">\r\n            <summary>\r\n            Gets or sets a value that determines how many additional items will be rendered\r\n            before and after the visible region. This help to reduce the frequency of rendering\r\n            during scrolling. However, higher values mean that more elements will be present\r\n            in the page.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Int32",
          "Common.PropertyName": "OverscanCount"
        }
      },
      {
        "Kind": "Components.Component",
        "Name": "Context",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Context",
        "Documentation": {
          "Id": 12
        },
        "Metadata": {
          "Common.PropertyName": "Context",
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>",
      "Common.TypeNameIdentifier": "Virtualize",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
      "Components.GenericTyped": "True",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -4027964292680823987,
      "Data2": 3974005073829405726,
      "Data3": -7657880675495470420,
      "Data4": -956985580441269397
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "Virtualize"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.ChildContent",
        "Name": "Context",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "ChildContent"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Context",
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
      "Common.TypeNameIdentifier": "Virtualize",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 6871186772144139341,
      "Data2": -8601975393708269847,
      "Data3": -2713930677707310714,
      "Data4": -4070839205329473916
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.ChildContent",
        "Name": "Context",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "ChildContent"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Context",
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
      "Common.TypeNameIdentifier": "Virtualize",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 4142771421165254483,
      "Data2": 8761630999637721741,
      "Data3": -4101865705450619985,
      "Data4": -1734775619149773112
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ItemContent",
        "ParentTag": "Virtualize"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.ChildContent",
        "Name": "Context",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "ItemContent"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Context",
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
      "Common.TypeNameIdentifier": "Virtualize",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 8332850925818767768,
      "Data2": -6134036516721835209,
      "Data3": -2474637664612969283,
      "Data4": 1818530609925179876
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ItemContent",
        "ParentTag": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.ChildContent",
        "Name": "Context",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "ItemContent"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Context",
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
      "Common.TypeNameIdentifier": "Virtualize",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 225841614895279300,
      "Data2": -536324825955586340,
      "Data3": 3217746200518935606,
      "Data4": -5047897611996435442
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Placeholder\">\r\n            <summary>\r\n            Gets or sets the template for items that have not yet been loaded in memory.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Placeholder",
        "ParentTag": "Virtualize"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.ChildContent",
        "Name": "Context",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "Placeholder"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Context",
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
      "Common.TypeNameIdentifier": "Virtualize",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 652657129004374084,
      "Data2": 3384095448265786142,
      "Data3": 815342030637094586,
      "Data4": 1446427640863059907
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Placeholder\">\r\n            <summary>\r\n            Gets or sets the template for items that have not yet been loaded in memory.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Placeholder",
        "ParentTag": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.ChildContent",
        "Name": "Context",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "Placeholder"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Context",
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
      "Common.TypeNameIdentifier": "Virtualize",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 500541897763460105,
      "Data2": -3904160715621637890,
      "Data3": 6762557291463073251,
      "Data4": -5996836073700211021
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
    "AssemblyName": "Microsoft.AspNetCore.Components.Forms",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator\">\r\n            <summary>\r\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "DataAnnotationsValidator"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
      "Common.TypeNameIdentifier": "DataAnnotationsValidator",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 2065598637635591165,
      "Data2": -8291259146149664641,
      "Data3": 9219671010491672983,
      "Data4": 6550648898376690199
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
    "AssemblyName": "Microsoft.AspNetCore.Components.Forms",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator\">\r\n            <summary>\r\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
      "Common.TypeNameIdentifier": "DataAnnotationsValidator",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 583907890532244921,
      "Data2": 376807234608358166,
      "Data3": 9110592368892109655,
      "Data4": -5294220599934144652
    },
    "Kind": "Components.EventHandler",
    "Name": "onfocus",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onfocus",
        "Microsoft.AspNetCore.Components.Web.FocusEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onfocus",
            "DisplayName": "@onfocus"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onfocus:preventDefault",
            "DisplayName": "@onfocus:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onfocus:stopPropagation",
            "DisplayName": "@onfocus:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onfocus",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onfocus",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onfocus",
            "Microsoft.AspNetCore.Components.Web.FocusEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onfocus"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onfocus"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onfocus",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 5464993910561472893,
      "Data2": 7470385775399197651,
      "Data3": 2597250161392862374,
      "Data4": 2018491029249995225
    },
    "Kind": "Components.EventHandler",
    "Name": "onblur",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onblur",
        "Microsoft.AspNetCore.Components.Web.FocusEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onblur",
            "DisplayName": "@onblur"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onblur:preventDefault",
            "DisplayName": "@onblur:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onblur:stopPropagation",
            "DisplayName": "@onblur:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onblur",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onblur",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onblur",
            "Microsoft.AspNetCore.Components.Web.FocusEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onblur"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onblur"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onblur",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -5958748907045185228,
      "Data2": -5904042101072979246,
      "Data3": 1748794984658598531,
      "Data4": 2276602083721040765
    },
    "Kind": "Components.EventHandler",
    "Name": "onfocusin",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onfocusin",
        "Microsoft.AspNetCore.Components.Web.FocusEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onfocusin",
            "DisplayName": "@onfocusin"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onfocusin:preventDefault",
            "DisplayName": "@onfocusin:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onfocusin:stopPropagation",
            "DisplayName": "@onfocusin:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onfocusin",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onfocusin",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onfocusin",
            "Microsoft.AspNetCore.Components.Web.FocusEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onfocusin"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onfocusin"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onfocusin",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 6149150266788221239,
      "Data2": -4689835514768061018,
      "Data3": -3668524463046992237,
      "Data4": -9088354555412208133
    },
    "Kind": "Components.EventHandler",
    "Name": "onfocusout",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onfocusout",
        "Microsoft.AspNetCore.Components.Web.FocusEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onfocusout",
            "DisplayName": "@onfocusout"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onfocusout:preventDefault",
            "DisplayName": "@onfocusout:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onfocusout:stopPropagation",
            "DisplayName": "@onfocusout:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onfocusout",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onfocusout",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onfocusout",
            "Microsoft.AspNetCore.Components.Web.FocusEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onfocusout"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onfocusout"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onfocusout",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -3745111538831184898,
      "Data2": -8223078644923635376,
      "Data3": 2831922058807028577,
      "Data4": -4259928168220564989
    },
    "Kind": "Components.EventHandler",
    "Name": "onmouseover",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onmouseover",
        "Microsoft.AspNetCore.Components.Web.MouseEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onmouseover",
            "DisplayName": "@onmouseover"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onmouseover:preventDefault",
            "DisplayName": "@onmouseover:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onmouseover:stopPropagation",
            "DisplayName": "@onmouseover:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onmouseover",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onmouseover",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onmouseover",
            "Microsoft.AspNetCore.Components.Web.MouseEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onmouseover"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onmouseover"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onmouseover",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -8032574876683050892,
      "Data2": -5165066440018340414,
      "Data3": 8991790193993786038,
      "Data4": 3749753524921658733
    },
    "Kind": "Components.EventHandler",
    "Name": "onmouseout",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onmouseout",
        "Microsoft.AspNetCore.Components.Web.MouseEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onmouseout",
            "DisplayName": "@onmouseout"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onmouseout:preventDefault",
            "DisplayName": "@onmouseout:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onmouseout:stopPropagation",
            "DisplayName": "@onmouseout:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onmouseout",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onmouseout",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onmouseout",
            "Microsoft.AspNetCore.Components.Web.MouseEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onmouseout"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onmouseout"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onmouseout",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -5276122027992396060,
      "Data2": 408221299394215394,
      "Data3": 8254883525266767166,
      "Data4": -2939006756718937093
    },
    "Kind": "Components.EventHandler",
    "Name": "onmousemove",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onmousemove",
        "Microsoft.AspNetCore.Components.Web.MouseEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onmousemove",
            "DisplayName": "@onmousemove"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onmousemove:preventDefault",
            "DisplayName": "@onmousemove:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onmousemove:stopPropagation",
            "DisplayName": "@onmousemove:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onmousemove",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onmousemove",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onmousemove",
            "Microsoft.AspNetCore.Components.Web.MouseEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onmousemove"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onmousemove"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onmousemove",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -5918482760187106714,
      "Data2": -8797809423625969248,
      "Data3": 1376318876550520354,
      "Data4": 825808040971980300
    },
    "Kind": "Components.EventHandler",
    "Name": "onmousedown",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onmousedown",
        "Microsoft.AspNetCore.Components.Web.MouseEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onmousedown",
            "DisplayName": "@onmousedown"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onmousedown:preventDefault",
            "DisplayName": "@onmousedown:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onmousedown:stopPropagation",
            "DisplayName": "@onmousedown:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onmousedown",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onmousedown",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onmousedown",
            "Microsoft.AspNetCore.Components.Web.MouseEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onmousedown"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onmousedown"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onmousedown",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -592952351244748526,
      "Data2": -7949615365732364405,
      "Data3": 5075428283947037509,
      "Data4": -1134547182353609823
    },
    "Kind": "Components.EventHandler",
    "Name": "onmouseup",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onmouseup",
        "Microsoft.AspNetCore.Components.Web.MouseEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onmouseup",
            "DisplayName": "@onmouseup"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onmouseup:preventDefault",
            "DisplayName": "@onmouseup:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onmouseup:stopPropagation",
            "DisplayName": "@onmouseup:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onmouseup",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onmouseup",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onmouseup",
            "Microsoft.AspNetCore.Components.Web.MouseEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onmouseup"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onmouseup"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onmouseup",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -4099237131042837116,
      "Data2": 7065253358239743281,
      "Data3": -8084306683169105172,
      "Data4": 3226152778663964501
    },
    "Kind": "Components.EventHandler",
    "Name": "onclick",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onclick",
        "Microsoft.AspNetCore.Components.Web.MouseEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onclick",
            "DisplayName": "@onclick"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onclick:preventDefault",
            "DisplayName": "@onclick:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onclick:stopPropagation",
            "DisplayName": "@onclick:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onclick",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onclick",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onclick",
            "Microsoft.AspNetCore.Components.Web.MouseEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onclick"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onclick"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onclick",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -8439538730120002268,
      "Data2": -6079111985310676105,
      "Data3": -5703167614089699059,
      "Data4": -7907471424265346033
    },
    "Kind": "Components.EventHandler",
    "Name": "ondblclick",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ondblclick",
        "Microsoft.AspNetCore.Components.Web.MouseEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ondblclick",
            "DisplayName": "@ondblclick"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ondblclick:preventDefault",
            "DisplayName": "@ondblclick:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ondblclick:stopPropagation",
            "DisplayName": "@ondblclick:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@ondblclick",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ondblclick",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ondblclick",
            "Microsoft.AspNetCore.Components.Web.MouseEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ondblclick"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ondblclick"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "ondblclick",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 2392022878683159964,
      "Data2": -6984938028457315383,
      "Data3": -4291215489283441568,
      "Data4": 8962589836915876717
    },
    "Kind": "Components.EventHandler",
    "Name": "onwheel",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onwheel",
        "Microsoft.AspNetCore.Components.Web.WheelEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onwheel",
            "DisplayName": "@onwheel"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onwheel:preventDefault",
            "DisplayName": "@onwheel:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onwheel:stopPropagation",
            "DisplayName": "@onwheel:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onwheel",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onwheel",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onwheel",
            "Microsoft.AspNetCore.Components.Web.WheelEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onwheel"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onwheel"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onwheel",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.WheelEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -2102023780760942052,
      "Data2": 6465936631176586965,
      "Data3": 2739171843765868714,
      "Data4": -7558122961994944120
    },
    "Kind": "Components.EventHandler",
    "Name": "onmousewheel",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onmousewheel",
        "Microsoft.AspNetCore.Components.Web.WheelEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onmousewheel",
            "DisplayName": "@onmousewheel"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onmousewheel:preventDefault",
            "DisplayName": "@onmousewheel:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onmousewheel:stopPropagation",
            "DisplayName": "@onmousewheel:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onmousewheel",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onmousewheel",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onmousewheel",
            "Microsoft.AspNetCore.Components.Web.WheelEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onmousewheel"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onmousewheel"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onmousewheel",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.WheelEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 4708176958493123563,
      "Data2": -5884340131490313929,
      "Data3": -4250998201565482166,
      "Data4": -387117319199650941
    },
    "Kind": "Components.EventHandler",
    "Name": "oncontextmenu",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@oncontextmenu",
        "Microsoft.AspNetCore.Components.Web.MouseEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@oncontextmenu",
            "DisplayName": "@oncontextmenu"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@oncontextmenu:preventDefault",
            "DisplayName": "@oncontextmenu:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@oncontextmenu:stopPropagation",
            "DisplayName": "@oncontextmenu:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@oncontextmenu",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.oncontextmenu",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@oncontextmenu",
            "Microsoft.AspNetCore.Components.Web.MouseEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@oncontextmenu"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@oncontextmenu"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "oncontextmenu",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -4226619283530147370,
      "Data2": -4575770746989930610,
      "Data3": 3201250857626075749,
      "Data4": -2605621617834949897
    },
    "Kind": "Components.EventHandler",
    "Name": "ondrag",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ondrag",
        "Microsoft.AspNetCore.Components.Web.DragEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ondrag",
            "DisplayName": "@ondrag"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ondrag:preventDefault",
            "DisplayName": "@ondrag:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ondrag:stopPropagation",
            "DisplayName": "@ondrag:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@ondrag",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ondrag",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ondrag",
            "Microsoft.AspNetCore.Components.Web.DragEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ondrag"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ondrag"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "ondrag",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -6451738149349828858,
      "Data2": 6640058896143875865,
      "Data3": -4532787049283856200,
      "Data4": -7749200711780828191
    },
    "Kind": "Components.EventHandler",
    "Name": "ondragend",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ondragend",
        "Microsoft.AspNetCore.Components.Web.DragEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ondragend",
            "DisplayName": "@ondragend"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ondragend:preventDefault",
            "DisplayName": "@ondragend:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ondragend:stopPropagation",
            "DisplayName": "@ondragend:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@ondragend",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ondragend",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ondragend",
            "Microsoft.AspNetCore.Components.Web.DragEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ondragend"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ondragend"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "ondragend",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -3451216852580323000,
      "Data2": -8074312398325573497,
      "Data3": -2491404439886244704,
      "Data4": 5917384512985968772
    },
    "Kind": "Components.EventHandler",
    "Name": "ondragenter",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ondragenter",
        "Microsoft.AspNetCore.Components.Web.DragEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ondragenter",
            "DisplayName": "@ondragenter"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ondragenter:preventDefault",
            "DisplayName": "@ondragenter:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ondragenter:stopPropagation",
            "DisplayName": "@ondragenter:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@ondragenter",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ondragenter",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ondragenter",
            "Microsoft.AspNetCore.Components.Web.DragEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ondragenter"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ondragenter"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "ondragenter",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 3143651297934413559,
      "Data2": -5990417441574042207,
      "Data3": 3699594081689094183,
      "Data4": 2739489669165963886
    },
    "Kind": "Components.EventHandler",
    "Name": "ondragleave",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ondragleave",
        "Microsoft.AspNetCore.Components.Web.DragEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ondragleave",
            "DisplayName": "@ondragleave"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ondragleave:preventDefault",
            "DisplayName": "@ondragleave:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ondragleave:stopPropagation",
            "DisplayName": "@ondragleave:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@ondragleave",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ondragleave",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ondragleave",
            "Microsoft.AspNetCore.Components.Web.DragEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ondragleave"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ondragleave"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "ondragleave",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -5329548818104674333,
      "Data2": -411933974222320834,
      "Data3": 5896719154313077575,
      "Data4": -2921239876079291113
    },
    "Kind": "Components.EventHandler",
    "Name": "ondragover",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ondragover",
        "Microsoft.AspNetCore.Components.Web.DragEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ondragover",
            "DisplayName": "@ondragover"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ondragover:preventDefault",
            "DisplayName": "@ondragover:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ondragover:stopPropagation",
            "DisplayName": "@ondragover:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@ondragover",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ondragover",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ondragover",
            "Microsoft.AspNetCore.Components.Web.DragEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ondragover"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ondragover"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "ondragover",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 6090440787800932187,
      "Data2": 3318579467048015593,
      "Data3": 5942512213457978295,
      "Data4": 149407510166272145
    },
    "Kind": "Components.EventHandler",
    "Name": "ondragstart",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ondragstart",
        "Microsoft.AspNetCore.Components.Web.DragEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ondragstart",
            "DisplayName": "@ondragstart"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ondragstart:preventDefault",
            "DisplayName": "@ondragstart:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ondragstart:stopPropagation",
            "DisplayName": "@ondragstart:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@ondragstart",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ondragstart",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ondragstart",
            "Microsoft.AspNetCore.Components.Web.DragEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ondragstart"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ondragstart"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "ondragstart",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 4845467493053938554,
      "Data2": -3809101175954721548,
      "Data3": 7063205704191740322,
      "Data4": -650154446846181296
    },
    "Kind": "Components.EventHandler",
    "Name": "ondrop",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ondrop",
        "Microsoft.AspNetCore.Components.Web.DragEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ondrop",
            "DisplayName": "@ondrop"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ondrop:preventDefault",
            "DisplayName": "@ondrop:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ondrop:stopPropagation",
            "DisplayName": "@ondrop:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@ondrop",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ondrop",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ondrop",
            "Microsoft.AspNetCore.Components.Web.DragEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ondrop"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ondrop"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "ondrop",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -1136436855548246561,
      "Data2": 6106287469188195633,
      "Data3": -1423776776156604736,
      "Data4": -1532177986099610799
    },
    "Kind": "Components.EventHandler",
    "Name": "onkeydown",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onkeydown",
        "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onkeydown",
            "DisplayName": "@onkeydown"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onkeydown:preventDefault",
            "DisplayName": "@onkeydown:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onkeydown:stopPropagation",
            "DisplayName": "@onkeydown:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onkeydown",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onkeydown",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onkeydown",
            "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onkeydown"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onkeydown"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onkeydown",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 204012646869549978,
      "Data2": -871946655567239002,
      "Data3": -9192867223232826590,
      "Data4": -6935861023071307644
    },
    "Kind": "Components.EventHandler",
    "Name": "onkeyup",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onkeyup",
        "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onkeyup",
            "DisplayName": "@onkeyup"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onkeyup:preventDefault",
            "DisplayName": "@onkeyup:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onkeyup:stopPropagation",
            "DisplayName": "@onkeyup:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onkeyup",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onkeyup",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onkeyup",
            "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onkeyup"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onkeyup"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onkeyup",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 7737541355563302297,
      "Data2": 7616891965460889068,
      "Data3": -7080157281288207961,
      "Data4": 7079628895297110263
    },
    "Kind": "Components.EventHandler",
    "Name": "onkeypress",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onkeypress",
        "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onkeypress",
            "DisplayName": "@onkeypress"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onkeypress:preventDefault",
            "DisplayName": "@onkeypress:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onkeypress:stopPropagation",
            "DisplayName": "@onkeypress:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onkeypress",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onkeypress",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onkeypress",
            "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onkeypress"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onkeypress"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onkeypress",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -7519293913169106987,
      "Data2": -6260297975398074330,
      "Data3": 4771478443019297050,
      "Data4": 8623204354275513025
    },
    "Kind": "Components.EventHandler",
    "Name": "onchange",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onchange",
        "Microsoft.AspNetCore.Components.ChangeEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onchange",
            "DisplayName": "@onchange"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onchange:preventDefault",
            "DisplayName": "@onchange:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onchange:stopPropagation",
            "DisplayName": "@onchange:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onchange",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onchange",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onchange",
            "Microsoft.AspNetCore.Components.ChangeEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onchange"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onchange"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onchange",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.ChangeEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -5236154947514213320,
      "Data2": -9188092748333030724,
      "Data3": 5257602367303497983,
      "Data4": 8294724231851236143
    },
    "Kind": "Components.EventHandler",
    "Name": "oninput",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@oninput",
        "Microsoft.AspNetCore.Components.ChangeEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@oninput",
            "DisplayName": "@oninput"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@oninput:preventDefault",
            "DisplayName": "@oninput:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@oninput:stopPropagation",
            "DisplayName": "@oninput:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@oninput",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.oninput",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@oninput",
            "Microsoft.AspNetCore.Components.ChangeEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@oninput"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@oninput"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "oninput",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.ChangeEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 746455618189765724,
      "Data2": -2894652057608016599,
      "Data3": 6964502898708978966,
      "Data4": -2800281591068637635
    },
    "Kind": "Components.EventHandler",
    "Name": "oninvalid",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@oninvalid",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@oninvalid",
            "DisplayName": "@oninvalid"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@oninvalid:preventDefault",
            "DisplayName": "@oninvalid:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@oninvalid:stopPropagation",
            "DisplayName": "@oninvalid:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@oninvalid",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.oninvalid",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@oninvalid",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@oninvalid"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@oninvalid"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "oninvalid",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 3162871388613534467,
      "Data2": -1382089420084038716,
      "Data3": -4757957921654377668,
      "Data4": -2549226655983435575
    },
    "Kind": "Components.EventHandler",
    "Name": "onreset",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onreset",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onreset",
            "DisplayName": "@onreset"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onreset:preventDefault",
            "DisplayName": "@onreset:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onreset:stopPropagation",
            "DisplayName": "@onreset:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onreset",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onreset",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onreset",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onreset"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onreset"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onreset",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -5714783693948147826,
      "Data2": 4169068072315985265,
      "Data3": 7969387872679059175,
      "Data4": 8604823198460679668
    },
    "Kind": "Components.EventHandler",
    "Name": "onselect",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onselect",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onselect",
            "DisplayName": "@onselect"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onselect:preventDefault",
            "DisplayName": "@onselect:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onselect:stopPropagation",
            "DisplayName": "@onselect:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onselect",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onselect",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onselect",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onselect"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onselect"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onselect",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 2699804455661354564,
      "Data2": 5813900484816754942,
      "Data3": -330700908375566209,
      "Data4": 175301563798755277
    },
    "Kind": "Components.EventHandler",
    "Name": "onselectstart",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onselectstart",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onselectstart",
            "DisplayName": "@onselectstart"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onselectstart:preventDefault",
            "DisplayName": "@onselectstart:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onselectstart:stopPropagation",
            "DisplayName": "@onselectstart:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onselectstart",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onselectstart",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onselectstart",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onselectstart"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onselectstart"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onselectstart",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 7715709254969062924,
      "Data2": 9120305890604802668,
      "Data3": -6228565391345828230,
      "Data4": -9039838466679088380
    },
    "Kind": "Components.EventHandler",
    "Name": "onselectionchange",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onselectionchange",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onselectionchange",
            "DisplayName": "@onselectionchange"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onselectionchange:preventDefault",
            "DisplayName": "@onselectionchange:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onselectionchange:stopPropagation",
            "DisplayName": "@onselectionchange:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onselectionchange",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onselectionchange",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onselectionchange",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onselectionchange"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onselectionchange"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onselectionchange",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 2772680603932019808,
      "Data2": 5826270515111671206,
      "Data3": 4068116043212532701,
      "Data4": 7110023844276685567
    },
    "Kind": "Components.EventHandler",
    "Name": "onsubmit",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onsubmit",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onsubmit",
            "DisplayName": "@onsubmit"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onsubmit:preventDefault",
            "DisplayName": "@onsubmit:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onsubmit:stopPropagation",
            "DisplayName": "@onsubmit:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onsubmit",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onsubmit",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onsubmit",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onsubmit"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onsubmit"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onsubmit",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 767670533551704931,
      "Data2": -2060957258546153170,
      "Data3": -4226752543768767118,
      "Data4": -6731604394676707643
    },
    "Kind": "Components.EventHandler",
    "Name": "onbeforecopy",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onbeforecopy",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onbeforecopy",
            "DisplayName": "@onbeforecopy"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onbeforecopy:preventDefault",
            "DisplayName": "@onbeforecopy:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onbeforecopy:stopPropagation",
            "DisplayName": "@onbeforecopy:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onbeforecopy",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onbeforecopy",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onbeforecopy",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onbeforecopy"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onbeforecopy"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onbeforecopy",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 5587252531761597778,
      "Data2": -898118297303467094,
      "Data3": 5683779328479699993,
      "Data4": -6186578974457118459
    },
    "Kind": "Components.EventHandler",
    "Name": "onbeforecut",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onbeforecut",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onbeforecut",
            "DisplayName": "@onbeforecut"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onbeforecut:preventDefault",
            "DisplayName": "@onbeforecut:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onbeforecut:stopPropagation",
            "DisplayName": "@onbeforecut:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onbeforecut",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onbeforecut",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onbeforecut",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onbeforecut"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onbeforecut"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onbeforecut",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -5256383056960018646,
      "Data2": -4608805114614939984,
      "Data3": 2030909829159535624,
      "Data4": 3093767671142905338
    },
    "Kind": "Components.EventHandler",
    "Name": "onbeforepaste",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onbeforepaste",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onbeforepaste",
            "DisplayName": "@onbeforepaste"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onbeforepaste:preventDefault",
            "DisplayName": "@onbeforepaste:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onbeforepaste:stopPropagation",
            "DisplayName": "@onbeforepaste:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onbeforepaste",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onbeforepaste",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onbeforepaste",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onbeforepaste"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onbeforepaste"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onbeforepaste",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -4807982175461499005,
      "Data2": -1727047161276400234,
      "Data3": 9044467678014787738,
      "Data4": 146277911847576020
    },
    "Kind": "Components.EventHandler",
    "Name": "oncopy",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@oncopy",
        "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@oncopy",
            "DisplayName": "@oncopy"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@oncopy:preventDefault",
            "DisplayName": "@oncopy:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@oncopy:stopPropagation",
            "DisplayName": "@oncopy:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@oncopy",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.oncopy",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@oncopy",
            "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@oncopy"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@oncopy"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "oncopy",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -5288830375049672758,
      "Data2": -2126827994274812412,
      "Data3": -5173591812808514428,
      "Data4": 4347767753573126715
    },
    "Kind": "Components.EventHandler",
    "Name": "oncut",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@oncut",
        "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@oncut",
            "DisplayName": "@oncut"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@oncut:preventDefault",
            "DisplayName": "@oncut:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@oncut:stopPropagation",
            "DisplayName": "@oncut:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@oncut",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.oncut",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@oncut",
            "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@oncut"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@oncut"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "oncut",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 4634767434017420474,
      "Data2": -4515708892182261062,
      "Data3": 6227768036012513513,
      "Data4": -3843048019428757757
    },
    "Kind": "Components.EventHandler",
    "Name": "onpaste",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onpaste",
        "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpaste",
            "DisplayName": "@onpaste"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpaste:preventDefault",
            "DisplayName": "@onpaste:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpaste:stopPropagation",
            "DisplayName": "@onpaste:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onpaste",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onpaste",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onpaste",
            "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onpaste"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onpaste"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onpaste",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 1338942216414955766,
      "Data2": -2743885775479287336,
      "Data3": -3643750465624980573,
      "Data4": 1902440778053914309
    },
    "Kind": "Components.EventHandler",
    "Name": "ontouchcancel",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ontouchcancel",
        "Microsoft.AspNetCore.Components.Web.TouchEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ontouchcancel",
            "DisplayName": "@ontouchcancel"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ontouchcancel:preventDefault",
            "DisplayName": "@ontouchcancel:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ontouchcancel:stopPropagation",
            "DisplayName": "@ontouchcancel:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@ontouchcancel",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ontouchcancel",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ontouchcancel",
            "Microsoft.AspNetCore.Components.Web.TouchEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ontouchcancel"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ontouchcancel"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "ontouchcancel",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 8226901871805545200,
      "Data2": 7511988555760138991,
      "Data3": -6935780093866696394,
      "Data4": -1537412783031430167
    },
    "Kind": "Components.EventHandler",
    "Name": "ontouchend",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ontouchend",
        "Microsoft.AspNetCore.Components.Web.TouchEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ontouchend",
            "DisplayName": "@ontouchend"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ontouchend:preventDefault",
            "DisplayName": "@ontouchend:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ontouchend:stopPropagation",
            "DisplayName": "@ontouchend:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@ontouchend",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ontouchend",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ontouchend",
            "Microsoft.AspNetCore.Components.Web.TouchEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ontouchend"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ontouchend"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "ontouchend",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -7121770767066083047,
      "Data2": 5145627590861398178,
      "Data3": -5165579256445206299,
      "Data4": 7621248313662094228
    },
    "Kind": "Components.EventHandler",
    "Name": "ontouchmove",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ontouchmove",
        "Microsoft.AspNetCore.Components.Web.TouchEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ontouchmove",
            "DisplayName": "@ontouchmove"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ontouchmove:preventDefault",
            "DisplayName": "@ontouchmove:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ontouchmove:stopPropagation",
            "DisplayName": "@ontouchmove:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@ontouchmove",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ontouchmove",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ontouchmove",
            "Microsoft.AspNetCore.Components.Web.TouchEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ontouchmove"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ontouchmove"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "ontouchmove",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -3711664302264373572,
      "Data2": 7109298063163337004,
      "Data3": 1496505232160561563,
      "Data4": 8138801149580951946
    },
    "Kind": "Components.EventHandler",
    "Name": "ontouchstart",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ontouchstart",
        "Microsoft.AspNetCore.Components.Web.TouchEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ontouchstart",
            "DisplayName": "@ontouchstart"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ontouchstart:preventDefault",
            "DisplayName": "@ontouchstart:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ontouchstart:stopPropagation",
            "DisplayName": "@ontouchstart:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@ontouchstart",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ontouchstart",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ontouchstart",
            "Microsoft.AspNetCore.Components.Web.TouchEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ontouchstart"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ontouchstart"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "ontouchstart",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 5416895103884042262,
      "Data2": 3686124176284062036,
      "Data3": -7551903506483140713,
      "Data4": 3787174834578687317
    },
    "Kind": "Components.EventHandler",
    "Name": "ontouchenter",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ontouchenter",
        "Microsoft.AspNetCore.Components.Web.TouchEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ontouchenter",
            "DisplayName": "@ontouchenter"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ontouchenter:preventDefault",
            "DisplayName": "@ontouchenter:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ontouchenter:stopPropagation",
            "DisplayName": "@ontouchenter:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@ontouchenter",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ontouchenter",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ontouchenter",
            "Microsoft.AspNetCore.Components.Web.TouchEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ontouchenter"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ontouchenter"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "ontouchenter",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -5261765685419160457,
      "Data2": -4807922954915354618,
      "Data3": 6657449093262840403,
      "Data4": 1247789349875096054
    },
    "Kind": "Components.EventHandler",
    "Name": "ontouchleave",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ontouchleave",
        "Microsoft.AspNetCore.Components.Web.TouchEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ontouchleave",
            "DisplayName": "@ontouchleave"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ontouchleave:preventDefault",
            "DisplayName": "@ontouchleave:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ontouchleave:stopPropagation",
            "DisplayName": "@ontouchleave:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@ontouchleave",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ontouchleave",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ontouchleave",
            "Microsoft.AspNetCore.Components.Web.TouchEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ontouchleave"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ontouchleave"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "ontouchleave",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 6541981321472360262,
      "Data2": -8185732689419679299,
      "Data3": -9130868862550065986,
      "Data4": -8164476930090774534
    },
    "Kind": "Components.EventHandler",
    "Name": "ongotpointercapture",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ongotpointercapture",
        "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ongotpointercapture",
            "DisplayName": "@ongotpointercapture"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ongotpointercapture:preventDefault",
            "DisplayName": "@ongotpointercapture:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ongotpointercapture:stopPropagation",
            "DisplayName": "@ongotpointercapture:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@ongotpointercapture",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ongotpointercapture",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ongotpointercapture",
            "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ongotpointercapture"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ongotpointercapture"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "ongotpointercapture",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 1912278237009615350,
      "Data2": 919295178175098544,
      "Data3": 6501198451067205100,
      "Data4": -4751382499262928946
    },
    "Kind": "Components.EventHandler",
    "Name": "onlostpointercapture",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onlostpointercapture",
        "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onlostpointercapture",
            "DisplayName": "@onlostpointercapture"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onlostpointercapture:preventDefault",
            "DisplayName": "@onlostpointercapture:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onlostpointercapture:stopPropagation",
            "DisplayName": "@onlostpointercapture:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onlostpointercapture",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onlostpointercapture",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onlostpointercapture",
            "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onlostpointercapture"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onlostpointercapture"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onlostpointercapture",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -1266290787323237927,
      "Data2": -4028311878809641478,
      "Data3": 3466078976705306983,
      "Data4": 2640950820602007695
    },
    "Kind": "Components.EventHandler",
    "Name": "onpointercancel",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onpointercancel",
        "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpointercancel",
            "DisplayName": "@onpointercancel"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpointercancel:preventDefault",
            "DisplayName": "@onpointercancel:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpointercancel:stopPropagation",
            "DisplayName": "@onpointercancel:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onpointercancel",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onpointercancel",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onpointercancel",
            "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onpointercancel"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onpointercancel"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onpointercancel",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 5288411797794486379,
      "Data2": -6726572091474786304,
      "Data3": -8638422302529572584,
      "Data4": -5220801481844397738
    },
    "Kind": "Components.EventHandler",
    "Name": "onpointerdown",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onpointerdown",
        "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpointerdown",
            "DisplayName": "@onpointerdown"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpointerdown:preventDefault",
            "DisplayName": "@onpointerdown:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpointerdown:stopPropagation",
            "DisplayName": "@onpointerdown:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onpointerdown",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onpointerdown",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onpointerdown",
            "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onpointerdown"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onpointerdown"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onpointerdown",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 885491702222773551,
      "Data2": 1692874399596544014,
      "Data3": 7380589941205996787,
      "Data4": 2800991297428525071
    },
    "Kind": "Components.EventHandler",
    "Name": "onpointerenter",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onpointerenter",
        "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpointerenter",
            "DisplayName": "@onpointerenter"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpointerenter:preventDefault",
            "DisplayName": "@onpointerenter:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpointerenter:stopPropagation",
            "DisplayName": "@onpointerenter:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onpointerenter",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onpointerenter",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onpointerenter",
            "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onpointerenter"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onpointerenter"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onpointerenter",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 2555620753049717444,
      "Data2": -5517486148530591937,
      "Data3": -9220227372811419807,
      "Data4": -3327190924246772201
    },
    "Kind": "Components.EventHandler",
    "Name": "onpointerleave",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onpointerleave",
        "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpointerleave",
            "DisplayName": "@onpointerleave"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpointerleave:preventDefault",
            "DisplayName": "@onpointerleave:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpointerleave:stopPropagation",
            "DisplayName": "@onpointerleave:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onpointerleave",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onpointerleave",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onpointerleave",
            "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onpointerleave"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onpointerleave"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onpointerleave",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 2918161477065306509,
      "Data2": 6212518357929336533,
      "Data3": 3962530124045683726,
      "Data4": -6466377699241876763
    },
    "Kind": "Components.EventHandler",
    "Name": "onpointermove",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onpointermove",
        "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpointermove",
            "DisplayName": "@onpointermove"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpointermove:preventDefault",
            "DisplayName": "@onpointermove:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpointermove:stopPropagation",
            "DisplayName": "@onpointermove:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onpointermove",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onpointermove",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onpointermove",
            "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onpointermove"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onpointermove"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onpointermove",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -6934542181709828841,
      "Data2": -6990180355396577152,
      "Data3": -7395681763183425379,
      "Data4": -609571054595529648
    },
    "Kind": "Components.EventHandler",
    "Name": "onpointerout",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onpointerout",
        "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpointerout",
            "DisplayName": "@onpointerout"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpointerout:preventDefault",
            "DisplayName": "@onpointerout:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpointerout:stopPropagation",
            "DisplayName": "@onpointerout:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onpointerout",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onpointerout",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onpointerout",
            "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onpointerout"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onpointerout"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onpointerout",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 6666364389184450605,
      "Data2": -4029651726250901909,
      "Data3": 3839832928774091279,
      "Data4": 259672364582468007
    },
    "Kind": "Components.EventHandler",
    "Name": "onpointerover",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onpointerover",
        "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpointerover",
            "DisplayName": "@onpointerover"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpointerover:preventDefault",
            "DisplayName": "@onpointerover:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpointerover:stopPropagation",
            "DisplayName": "@onpointerover:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onpointerover",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onpointerover",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onpointerover",
            "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onpointerover"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onpointerover"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onpointerover",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -548050248092329364,
      "Data2": -3103914518541024446,
      "Data3": -366567954710137044,
      "Data4": 4473483578686522205
    },
    "Kind": "Components.EventHandler",
    "Name": "onpointerup",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onpointerup",
        "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpointerup",
            "DisplayName": "@onpointerup"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpointerup:preventDefault",
            "DisplayName": "@onpointerup:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpointerup:stopPropagation",
            "DisplayName": "@onpointerup:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onpointerup",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onpointerup",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onpointerup",
            "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onpointerup"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onpointerup"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onpointerup",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 9028864742406142626,
      "Data2": -3339718367297511737,
      "Data3": -4126318054624084682,
      "Data4": -6924025586069700865
    },
    "Kind": "Components.EventHandler",
    "Name": "oncanplay",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@oncanplay",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@oncanplay",
            "DisplayName": "@oncanplay"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@oncanplay:preventDefault",
            "DisplayName": "@oncanplay:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@oncanplay:stopPropagation",
            "DisplayName": "@oncanplay:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@oncanplay",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.oncanplay",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@oncanplay",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@oncanplay"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@oncanplay"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "oncanplay",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 4492574851110285444,
      "Data2": 2544718768023594089,
      "Data3": -875139827296256672,
      "Data4": 1132540978748989916
    },
    "Kind": "Components.EventHandler",
    "Name": "oncanplaythrough",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@oncanplaythrough",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@oncanplaythrough",
            "DisplayName": "@oncanplaythrough"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@oncanplaythrough:preventDefault",
            "DisplayName": "@oncanplaythrough:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@oncanplaythrough:stopPropagation",
            "DisplayName": "@oncanplaythrough:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@oncanplaythrough",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.oncanplaythrough",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@oncanplaythrough",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@oncanplaythrough"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@oncanplaythrough"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "oncanplaythrough",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -4858189822626017421,
      "Data2": -6989089015120793666,
      "Data3": 1702530082693429190,
      "Data4": -4530851656151411702
    },
    "Kind": "Components.EventHandler",
    "Name": "oncuechange",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@oncuechange",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@oncuechange",
            "DisplayName": "@oncuechange"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@oncuechange:preventDefault",
            "DisplayName": "@oncuechange:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@oncuechange:stopPropagation",
            "DisplayName": "@oncuechange:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@oncuechange",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.oncuechange",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@oncuechange",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@oncuechange"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@oncuechange"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "oncuechange",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -2742654085681360892,
      "Data2": 5532483283291771197,
      "Data3": -35523471803319190,
      "Data4": -6237081046345636831
    },
    "Kind": "Components.EventHandler",
    "Name": "ondurationchange",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ondurationchange",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ondurationchange",
            "DisplayName": "@ondurationchange"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ondurationchange:preventDefault",
            "DisplayName": "@ondurationchange:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ondurationchange:stopPropagation",
            "DisplayName": "@ondurationchange:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@ondurationchange",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ondurationchange",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ondurationchange",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ondurationchange"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ondurationchange"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "ondurationchange",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 5374489098912757265,
      "Data2": -730746391126002042,
      "Data3": 5834736305184526977,
      "Data4": -5220773623673008144
    },
    "Kind": "Components.EventHandler",
    "Name": "onemptied",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onemptied",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onemptied",
            "DisplayName": "@onemptied"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onemptied:preventDefault",
            "DisplayName": "@onemptied:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onemptied:stopPropagation",
            "DisplayName": "@onemptied:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onemptied",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onemptied",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onemptied",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onemptied"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onemptied"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onemptied",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -2844761543287423352,
      "Data2": -5000257536285895593,
      "Data3": 6443232783129069356,
      "Data4": 1524672744380002023
    },
    "Kind": "Components.EventHandler",
    "Name": "onpause",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onpause",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpause",
            "DisplayName": "@onpause"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpause:preventDefault",
            "DisplayName": "@onpause:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpause:stopPropagation",
            "DisplayName": "@onpause:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onpause",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onpause",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onpause",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onpause"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onpause"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onpause",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 6879449115982062143,
      "Data2": -8813093898984328496,
      "Data3": -6752780369435407865,
      "Data4": 6262915694573121925
    },
    "Kind": "Components.EventHandler",
    "Name": "onplay",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onplay",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onplay",
            "DisplayName": "@onplay"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onplay:preventDefault",
            "DisplayName": "@onplay:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onplay:stopPropagation",
            "DisplayName": "@onplay:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onplay",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onplay",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onplay",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onplay"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onplay"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onplay",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 5058268562222261299,
      "Data2": -6616116756861227946,
      "Data3": 3152506364273584670,
      "Data4": -7925848332652676091
    },
    "Kind": "Components.EventHandler",
    "Name": "onplaying",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onplaying",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onplaying",
            "DisplayName": "@onplaying"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onplaying:preventDefault",
            "DisplayName": "@onplaying:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onplaying:stopPropagation",
            "DisplayName": "@onplaying:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onplaying",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onplaying",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onplaying",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onplaying"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onplaying"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onplaying",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 9208865562867360710,
      "Data2": -1688681314489865806,
      "Data3": -476845973298425278,
      "Data4": 3572954905997012862
    },
    "Kind": "Components.EventHandler",
    "Name": "onratechange",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onratechange",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onratechange",
            "DisplayName": "@onratechange"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onratechange:preventDefault",
            "DisplayName": "@onratechange:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onratechange:stopPropagation",
            "DisplayName": "@onratechange:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onratechange",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onratechange",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onratechange",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onratechange"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onratechange"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onratechange",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 7737759463211174286,
      "Data2": -5305377306593165754,
      "Data3": 6501976664779050312,
      "Data4": 4318155623408709353
    },
    "Kind": "Components.EventHandler",
    "Name": "onseeked",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onseeked",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onseeked",
            "DisplayName": "@onseeked"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onseeked:preventDefault",
            "DisplayName": "@onseeked:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onseeked:stopPropagation",
            "DisplayName": "@onseeked:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onseeked",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onseeked",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onseeked",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onseeked"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onseeked"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onseeked",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 2302943156035458702,
      "Data2": 7469702742401251437,
      "Data3": -7611278659327017503,
      "Data4": -3378460546092444067
    },
    "Kind": "Components.EventHandler",
    "Name": "onseeking",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onseeking",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onseeking",
            "DisplayName": "@onseeking"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onseeking:preventDefault",
            "DisplayName": "@onseeking:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onseeking:stopPropagation",
            "DisplayName": "@onseeking:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onseeking",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onseeking",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onseeking",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onseeking"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onseeking"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onseeking",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -6062919778831282000,
      "Data2": -954552903685022741,
      "Data3": -7531339964375101402,
      "Data4": 6891577674947565553
    },
    "Kind": "Components.EventHandler",
    "Name": "onstalled",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onstalled",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onstalled",
            "DisplayName": "@onstalled"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onstalled:preventDefault",
            "DisplayName": "@onstalled:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onstalled:stopPropagation",
            "DisplayName": "@onstalled:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onstalled",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onstalled",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onstalled",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onstalled"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onstalled"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onstalled",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 5386606341993938891,
      "Data2": 8629178915740870398,
      "Data3": 8339476878873241758,
      "Data4": -7335715006498637084
    },
    "Kind": "Components.EventHandler",
    "Name": "onstop",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onstop",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onstop",
            "DisplayName": "@onstop"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onstop:preventDefault",
            "DisplayName": "@onstop:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onstop:stopPropagation",
            "DisplayName": "@onstop:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onstop",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onstop",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onstop",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onstop"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onstop"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onstop",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 7780982678450699199,
      "Data2": -1670276545099620844,
      "Data3": -7518697956467857796,
      "Data4": -252137265280025992
    },
    "Kind": "Components.EventHandler",
    "Name": "onsuspend",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onsuspend",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onsuspend",
            "DisplayName": "@onsuspend"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onsuspend:preventDefault",
            "DisplayName": "@onsuspend:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onsuspend:stopPropagation",
            "DisplayName": "@onsuspend:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onsuspend",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onsuspend",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onsuspend",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onsuspend"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onsuspend"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onsuspend",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -5553464171784175158,
      "Data2": -7652241402932312523,
      "Data3": -4192732781844493542,
      "Data4": -3929734257870630646
    },
    "Kind": "Components.EventHandler",
    "Name": "ontimeupdate",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ontimeupdate",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ontimeupdate",
            "DisplayName": "@ontimeupdate"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ontimeupdate:preventDefault",
            "DisplayName": "@ontimeupdate:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ontimeupdate:stopPropagation",
            "DisplayName": "@ontimeupdate:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@ontimeupdate",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ontimeupdate",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ontimeupdate",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ontimeupdate"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ontimeupdate"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "ontimeupdate",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -5587058918465900765,
      "Data2": -8072941218472046782,
      "Data3": -798676896275174348,
      "Data4": 8558374794777540140
    },
    "Kind": "Components.EventHandler",
    "Name": "onvolumechange",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onvolumechange",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onvolumechange",
            "DisplayName": "@onvolumechange"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onvolumechange:preventDefault",
            "DisplayName": "@onvolumechange:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onvolumechange:stopPropagation",
            "DisplayName": "@onvolumechange:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onvolumechange",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onvolumechange",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onvolumechange",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onvolumechange"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onvolumechange"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onvolumechange",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -7821352228628452466,
      "Data2": 5397770139638303748,
      "Data3": -3008730972637969273,
      "Data4": 390269950271115381
    },
    "Kind": "Components.EventHandler",
    "Name": "onwaiting",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onwaiting",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onwaiting",
            "DisplayName": "@onwaiting"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onwaiting:preventDefault",
            "DisplayName": "@onwaiting:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onwaiting:stopPropagation",
            "DisplayName": "@onwaiting:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onwaiting",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onwaiting",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onwaiting",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onwaiting"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onwaiting"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onwaiting",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 551790655177394708,
      "Data2": 3658460232016014224,
      "Data3": 5988532098539314996,
      "Data4": 4392146986811006597
    },
    "Kind": "Components.EventHandler",
    "Name": "onloadstart",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onloadstart",
        "Microsoft.AspNetCore.Components.Web.ProgressEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onloadstart",
            "DisplayName": "@onloadstart"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onloadstart:preventDefault",
            "DisplayName": "@onloadstart:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onloadstart:stopPropagation",
            "DisplayName": "@onloadstart:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onloadstart",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onloadstart",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onloadstart",
            "Microsoft.AspNetCore.Components.Web.ProgressEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onloadstart"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onloadstart"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onloadstart",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -3858674501567958565,
      "Data2": 4979407004606356762,
      "Data3": 343151319227683661,
      "Data4": -8632136984602907195
    },
    "Kind": "Components.EventHandler",
    "Name": "ontimeout",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ontimeout",
        "Microsoft.AspNetCore.Components.Web.ProgressEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ontimeout",
            "DisplayName": "@ontimeout"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ontimeout:preventDefault",
            "DisplayName": "@ontimeout:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ontimeout:stopPropagation",
            "DisplayName": "@ontimeout:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@ontimeout",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ontimeout",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ontimeout",
            "Microsoft.AspNetCore.Components.Web.ProgressEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ontimeout"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ontimeout"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "ontimeout",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -5569705842948318366,
      "Data2": 6551972035054091884,
      "Data3": -5045095550121760833,
      "Data4": -4680406870999403174
    },
    "Kind": "Components.EventHandler",
    "Name": "onabort",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onabort",
        "Microsoft.AspNetCore.Components.Web.ProgressEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onabort",
            "DisplayName": "@onabort"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onabort:preventDefault",
            "DisplayName": "@onabort:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onabort:stopPropagation",
            "DisplayName": "@onabort:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onabort",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onabort",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onabort",
            "Microsoft.AspNetCore.Components.Web.ProgressEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onabort"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onabort"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onabort",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -2889612979712233277,
      "Data2": 6890076838526652315,
      "Data3": -3552956321369899782,
      "Data4": 7589753417210463327
    },
    "Kind": "Components.EventHandler",
    "Name": "onload",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onload",
        "Microsoft.AspNetCore.Components.Web.ProgressEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onload",
            "DisplayName": "@onload"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onload:preventDefault",
            "DisplayName": "@onload:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onload:stopPropagation",
            "DisplayName": "@onload:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onload",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onload",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onload",
            "Microsoft.AspNetCore.Components.Web.ProgressEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onload"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onload"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onload",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 6072195690683750848,
      "Data2": -3323033198727480523,
      "Data3": 3670356611746832027,
      "Data4": 4454910049461024913
    },
    "Kind": "Components.EventHandler",
    "Name": "onloadend",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onloadend",
        "Microsoft.AspNetCore.Components.Web.ProgressEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onloadend",
            "DisplayName": "@onloadend"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onloadend:preventDefault",
            "DisplayName": "@onloadend:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onloadend:stopPropagation",
            "DisplayName": "@onloadend:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onloadend",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onloadend",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onloadend",
            "Microsoft.AspNetCore.Components.Web.ProgressEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onloadend"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onloadend"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onloadend",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 2960298292673486362,
      "Data2": 7589668300952188998,
      "Data3": -6094834021078261364,
      "Data4": 2008796749046181554
    },
    "Kind": "Components.EventHandler",
    "Name": "onprogress",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onprogress",
        "Microsoft.AspNetCore.Components.Web.ProgressEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onprogress",
            "DisplayName": "@onprogress"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onprogress:preventDefault",
            "DisplayName": "@onprogress:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onprogress:stopPropagation",
            "DisplayName": "@onprogress:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onprogress",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onprogress",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onprogress",
            "Microsoft.AspNetCore.Components.Web.ProgressEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onprogress"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onprogress"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onprogress",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 1973600045147447929,
      "Data2": -481074144565720744,
      "Data3": -8096944141246308866,
      "Data4": 4285437085414010817
    },
    "Kind": "Components.EventHandler",
    "Name": "onerror",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onerror",
        "Microsoft.AspNetCore.Components.Web.ErrorEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onerror",
            "DisplayName": "@onerror"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onerror:preventDefault",
            "DisplayName": "@onerror:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onerror:stopPropagation",
            "DisplayName": "@onerror:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onerror",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ErrorEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ErrorEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onerror",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onerror",
            "Microsoft.AspNetCore.Components.Web.ErrorEventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onerror"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onerror"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onerror",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ErrorEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 7772553650204396422,
      "Data2": 1959605487673775757,
      "Data3": -469402236429579082,
      "Data4": 7232660960813397674
    },
    "Kind": "Components.EventHandler",
    "Name": "onactivate",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onactivate",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onactivate",
            "DisplayName": "@onactivate"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onactivate:preventDefault",
            "DisplayName": "@onactivate:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onactivate:stopPropagation",
            "DisplayName": "@onactivate:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onactivate",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onactivate",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onactivate",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onactivate"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onactivate"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onactivate",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -5636100933335244406,
      "Data2": 955443750502834753,
      "Data3": 6114598179852835290,
      "Data4": 321185115709455729
    },
    "Kind": "Components.EventHandler",
    "Name": "onbeforeactivate",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onbeforeactivate",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onbeforeactivate",
            "DisplayName": "@onbeforeactivate"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onbeforeactivate:preventDefault",
            "DisplayName": "@onbeforeactivate:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onbeforeactivate:stopPropagation",
            "DisplayName": "@onbeforeactivate:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onbeforeactivate",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onbeforeactivate",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onbeforeactivate",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onbeforeactivate"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onbeforeactivate"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onbeforeactivate",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -2282256725917510567,
      "Data2": -5124426551070205792,
      "Data3": 4028897869018388446,
      "Data4": -1642263936022555741
    },
    "Kind": "Components.EventHandler",
    "Name": "onbeforedeactivate",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onbeforedeactivate",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onbeforedeactivate",
            "DisplayName": "@onbeforedeactivate"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onbeforedeactivate:preventDefault",
            "DisplayName": "@onbeforedeactivate:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onbeforedeactivate:stopPropagation",
            "DisplayName": "@onbeforedeactivate:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onbeforedeactivate",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onbeforedeactivate",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onbeforedeactivate",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onbeforedeactivate"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onbeforedeactivate"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onbeforedeactivate",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 2692799674742584601,
      "Data2": 1391186858448158742,
      "Data3": -7232244756209761437,
      "Data4": -3369393243430049033
    },
    "Kind": "Components.EventHandler",
    "Name": "ondeactivate",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ondeactivate",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ondeactivate",
            "DisplayName": "@ondeactivate"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ondeactivate:preventDefault",
            "DisplayName": "@ondeactivate:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ondeactivate:stopPropagation",
            "DisplayName": "@ondeactivate:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@ondeactivate",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ondeactivate",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ondeactivate",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ondeactivate"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ondeactivate"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "ondeactivate",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 3163954500329509429,
      "Data2": 5735930523487243031,
      "Data3": 3033505940296122352,
      "Data4": -8365927944724861908
    },
    "Kind": "Components.EventHandler",
    "Name": "onended",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onended",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onended",
            "DisplayName": "@onended"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onended:preventDefault",
            "DisplayName": "@onended:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onended:stopPropagation",
            "DisplayName": "@onended:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onended",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onended",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onended",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onended"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onended"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onended",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 5057577456503753188,
      "Data2": 4921292074137289052,
      "Data3": -1299737796093120951,
      "Data4": 252613322506747205
    },
    "Kind": "Components.EventHandler",
    "Name": "onfullscreenchange",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onfullscreenchange",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onfullscreenchange",
            "DisplayName": "@onfullscreenchange"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onfullscreenchange:preventDefault",
            "DisplayName": "@onfullscreenchange:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onfullscreenchange:stopPropagation",
            "DisplayName": "@onfullscreenchange:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onfullscreenchange",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onfullscreenchange",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onfullscreenchange",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onfullscreenchange"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onfullscreenchange"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onfullscreenchange",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 1466784227855758492,
      "Data2": 6623653818616606789,
      "Data3": 6437830830128869464,
      "Data4": 5720239986578054997
    },
    "Kind": "Components.EventHandler",
    "Name": "onfullscreenerror",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onfullscreenerror",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onfullscreenerror",
            "DisplayName": "@onfullscreenerror"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onfullscreenerror:preventDefault",
            "DisplayName": "@onfullscreenerror:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onfullscreenerror:stopPropagation",
            "DisplayName": "@onfullscreenerror:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onfullscreenerror",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onfullscreenerror",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onfullscreenerror",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onfullscreenerror"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onfullscreenerror"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onfullscreenerror",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 1346751088365295893,
      "Data2": 2645696614816198410,
      "Data3": -5816990456915577129,
      "Data4": 7583776841533603813
    },
    "Kind": "Components.EventHandler",
    "Name": "onloadeddata",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onloadeddata",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onloadeddata",
            "DisplayName": "@onloadeddata"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onloadeddata:preventDefault",
            "DisplayName": "@onloadeddata:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onloadeddata:stopPropagation",
            "DisplayName": "@onloadeddata:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onloadeddata",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onloadeddata",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onloadeddata",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onloadeddata"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onloadeddata"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onloadeddata",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -234584980470999595,
      "Data2": 205945846396525636,
      "Data3": -469389426633723311,
      "Data4": -1205368012839776087
    },
    "Kind": "Components.EventHandler",
    "Name": "onloadedmetadata",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onloadedmetadata",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onloadedmetadata",
            "DisplayName": "@onloadedmetadata"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onloadedmetadata:preventDefault",
            "DisplayName": "@onloadedmetadata:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onloadedmetadata:stopPropagation",
            "DisplayName": "@onloadedmetadata:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onloadedmetadata",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onloadedmetadata",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onloadedmetadata",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onloadedmetadata"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onloadedmetadata"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onloadedmetadata",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 8827831369171150187,
      "Data2": -3069585943073376678,
      "Data3": 2527820039425969864,
      "Data4": -7747999080417957177
    },
    "Kind": "Components.EventHandler",
    "Name": "onpointerlockchange",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onpointerlockchange",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpointerlockchange",
            "DisplayName": "@onpointerlockchange"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpointerlockchange:preventDefault",
            "DisplayName": "@onpointerlockchange:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpointerlockchange:stopPropagation",
            "DisplayName": "@onpointerlockchange:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onpointerlockchange",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onpointerlockchange",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onpointerlockchange",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onpointerlockchange"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onpointerlockchange"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onpointerlockchange",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 6641167708223542328,
      "Data2": -6896687253528891423,
      "Data3": -2048867951166405376,
      "Data4": -7713245719233149363
    },
    "Kind": "Components.EventHandler",
    "Name": "onpointerlockerror",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onpointerlockerror",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpointerlockerror",
            "DisplayName": "@onpointerlockerror"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpointerlockerror:preventDefault",
            "DisplayName": "@onpointerlockerror:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onpointerlockerror:stopPropagation",
            "DisplayName": "@onpointerlockerror:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onpointerlockerror",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onpointerlockerror",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onpointerlockerror",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onpointerlockerror"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onpointerlockerror"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onpointerlockerror",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 3005717561629037497,
      "Data2": -1370124322767014230,
      "Data3": 2373798302557577562,
      "Data4": 3517270650180085558
    },
    "Kind": "Components.EventHandler",
    "Name": "onreadystatechange",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onreadystatechange",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onreadystatechange",
            "DisplayName": "@onreadystatechange"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onreadystatechange:preventDefault",
            "DisplayName": "@onreadystatechange:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onreadystatechange:stopPropagation",
            "DisplayName": "@onreadystatechange:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onreadystatechange",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onreadystatechange",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onreadystatechange",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onreadystatechange"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onreadystatechange"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onreadystatechange",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 8334827996766805980,
      "Data2": -5591591132435067904,
      "Data3": 8296574350685705594,
      "Data4": 2704358888159338690
    },
    "Kind": "Components.EventHandler",
    "Name": "onscroll",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onscroll",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onscroll",
            "DisplayName": "@onscroll"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onscroll:preventDefault",
            "DisplayName": "@onscroll:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@onscroll:stopPropagation",
            "DisplayName": "@onscroll:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@onscroll",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onscroll",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onscroll",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onscroll"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onscroll"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "onscroll",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 9110738093101546841,
      "Data2": -5770480085024983773,
      "Data3": 4210535540475836654,
      "Data4": 4625894537207217791
    },
    "Kind": "Components.EventHandler",
    "Name": "ontoggle",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ontoggle",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ontoggle",
            "DisplayName": "@ontoggle"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ontoggle:preventDefault",
            "DisplayName": "@ontoggle:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ontoggle:stopPropagation",
            "DisplayName": "@ontoggle:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.EventHandler",
        "Name": "@ontoggle",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ontoggle",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ontoggle",
            "System.EventArgs"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.EventHandler",
            "Name": "preventDefault",
            "TypeName": "System.Boolean",
            "DisplayName": ":preventDefault",
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ontoggle"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "PreventDefault"
            }
          },
          {
            "Kind": "Components.EventHandler",
            "Name": "stopPropagation",
            "TypeName": "System.Boolean",
            "DisplayName": ":stopPropagation",
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ontoggle"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "StopPropagation"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "ontoggle",
          "Components.IsWeaklyTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 1505111583633182965,
      "Data2": 3084237957549253099,
      "Data3": 111967488500686581,
      "Data4": 1458104422605157084
    },
    "Kind": "Components.Splat",
    "Name": "Attributes",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Attributes",
    "Documentation": {
      "Id": 19
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@attributes",
            "DisplayName": "@attributes"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Splat",
        "Name": "@attributes",
        "TypeName": "System.Object",
        "DisplayName": "object Microsoft.AspNetCore.Components.Attributes.Attributes",
        "Documentation": {
          "Id": 19
        },
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Attributes"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Attributes",
      "Components.IsSpecialKind": "Components.Splat",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 6493496670793149942,
      "Data2": -4469704755650679837,
      "Data3": 1670002422860309273,
      "Data4": -467725619431491157
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;a&gt; elements.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "a",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-action",
            "DisplayName": "asp-action"
          }
        ]
      },
      {
        "TagName": "a",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-controller",
            "DisplayName": "asp-controller"
          }
        ]
      },
      {
        "TagName": "a",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-area",
            "DisplayName": "asp-area"
          }
        ]
      },
      {
        "TagName": "a",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-page",
            "DisplayName": "asp-page"
          }
        ]
      },
      {
        "TagName": "a",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-page-handler",
            "DisplayName": "asp-page-handler"
          }
        ]
      },
      {
        "TagName": "a",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-fragment",
            "DisplayName": "asp-fragment"
          }
        ]
      },
      {
        "TagName": "a",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-host",
            "DisplayName": "asp-host"
          }
        ]
      },
      {
        "TagName": "a",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-protocol",
            "DisplayName": "asp-protocol"
          }
        ]
      },
      {
        "TagName": "a",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-route",
            "DisplayName": "asp-route"
          }
        ]
      },
      {
        "TagName": "a",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-all-route-data",
            "DisplayName": "asp-all-route-data"
          }
        ]
      },
      {
        "TagName": "a",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 4,
            "Name": "asp-route-",
            "DisplayName": "asp-route-..."
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "ITagHelper",
        "Name": "asp-action",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\">\r\n            <summary>\r\n            The name of the action method.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\r\n            </remarks>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Action"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-controller",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\">\r\n            <summary>\r\n            The name of the controller.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\r\n            </remarks>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Controller"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-area",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Area",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Area\">\r\n            <summary>\r\n            The name of the area.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> is non-<c>null</c>.\r\n            </remarks>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Area"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-page",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\">\r\n            <summary>\r\n            The name of the page.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />\r\n            is non-<c>null</c>.\r\n            </remarks>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Page"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-page-handler",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.PageHandler",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.PageHandler\">\r\n            <summary>\r\n            The name of the page handler.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />\r\n            is non-<c>null</c>.\r\n            </remarks>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "PageHandler"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-protocol",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Protocol",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Protocol\">\r\n            <summary>\r\n            The protocol for the URL, such as \"http\" or \"https\".\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Protocol"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-host",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Host",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Host\">\r\n            <summary>\r\n            The host name.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Host"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-fragment",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Fragment",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Fragment\">\r\n            <summary>\r\n            The URL fragment name.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Fragment"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-route",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\">\r\n            <summary>\r\n            Name of the route.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if one of <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Area\" />\r\n            or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\r\n            </remarks>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Route"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-all-route-data",
        "TypeName": "System.Collections.Generic.IDictionary<System.String, System.String>",
        "HasIndexer": true,
        "IndexerNamePrefix": "asp-route-",
        "IndexerTypeName": "System.String",
        "DisplayName": "System.Collections.Generic.IDictionary<System.String, System.String> Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.RouteValues",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.RouteValues\">\r\n            <summary>\r\n            Additional parameters for the route.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "RouteValues"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper",
      "Common.TypeNameIdentifier": "AnchorTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": 8944030050369493903,
      "Data2": -9050866697568121472,
      "Data3": -2760021334495985468,
      "Data4": -8867623003191737256
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> implementation targeting &lt;cache&gt; elements.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "cache",
        "CaseSensitive": false
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "ITagHelper",
        "Name": "priority",
        "TypeName": "Microsoft.Extensions.Caching.Memory.CacheItemPriority?",
        "DisplayName": "Microsoft.Extensions.Caching.Memory.CacheItemPriority? Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper.Priority",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper.Priority\">\r\n            <summary>\r\n            Gets or sets the <see cref=\"T:Microsoft.Extensions.Caching.Memory.CacheItemPriority\" /> policy for the cache entry.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Priority"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "vary-by",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper.VaryBy",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryBy\">\r\n            <summary>\r\n            Gets or sets a <see cref=\"T:System.String\" /> to vary the cached result by.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "VaryBy"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "vary-by-header",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper.VaryByHeader",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByHeader\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of HTTP request headers to vary the cached result by.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "VaryByHeader"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "vary-by-query",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper.VaryByQuery",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByQuery\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of query parameters to vary the cached result by.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "VaryByQuery"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "vary-by-route",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper.VaryByRoute",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByRoute\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of route data parameters to vary the cached result by.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "VaryByRoute"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "vary-by-cookie",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper.VaryByCookie",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByCookie\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of cookie names to vary the cached result by.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "VaryByCookie"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "vary-by-user",
        "TypeName": "System.Boolean",
        "DisplayName": "bool Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper.VaryByUser",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByUser\">\r\n            <summary>\r\n            Gets or sets a value that determines if the cached result is to be varied by the Identity for the logged in\r\n            <see cref=\"P:Microsoft.AspNetCore.Http.HttpContext.User\" />.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "VaryByUser"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "vary-by-culture",
        "TypeName": "System.Boolean",
        "DisplayName": "bool Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper.VaryByCulture",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByCulture\">\r\n            <summary>\r\n            Gets or sets a value that determines if the cached result is to be varied by request culture.\r\n            <para>\r\n            Setting this to <c>true</c> would result in the result to be varied by <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />\r\n            and <see cref=\"P:System.Globalization.CultureInfo.CurrentUICulture\" />.\r\n            </para>\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "VaryByCulture"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "expires-on",
        "TypeName": "System.DateTimeOffset?",
        "DisplayName": "System.DateTimeOffset? Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper.ExpiresOn",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresOn\">\r\n            <summary>\r\n            Gets or sets the exact <see cref=\"T:System.DateTimeOffset\" /> the cache entry should be evicted.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "ExpiresOn"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "expires-after",
        "TypeName": "System.TimeSpan?",
        "DisplayName": "System.TimeSpan? Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper.ExpiresAfter",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresAfter\">\r\n            <summary>\r\n            Gets or sets the duration, from the time the cache entry was added, when it should be evicted.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "ExpiresAfter"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "expires-sliding",
        "TypeName": "System.TimeSpan?",
        "DisplayName": "System.TimeSpan? Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper.ExpiresSliding",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresSliding\">\r\n            <summary>\r\n            Gets or sets the duration from last access that the cache entry should be evicted.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "ExpiresSliding"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "enabled",
        "TypeName": "System.Boolean",
        "DisplayName": "bool Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper.Enabled",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.Enabled\">\r\n            <summary>\r\n            Gets or sets the value which determines if the tag helper is enabled or not.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Enabled"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper",
      "Common.TypeNameIdentifier": "CacheTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": 7576727009154276294,
      "Data2": -7566347570797028262,
      "Data3": -3010864006296096656,
      "Data4": 2553539875523554918
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper\">\r\n            <summary>\r\n            A <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> that renders a Razor component.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "component",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "type",
            "DisplayName": "type"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "ITagHelper",
        "Name": "params",
        "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
        "HasIndexer": true,
        "IndexerNamePrefix": "param-",
        "IndexerTypeName": "System.Object",
        "DisplayName": "System.Collections.Generic.IDictionary<System.String, System.Object> Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper.Parameters",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper.Parameters\">\r\n            <summary>\r\n            Gets or sets values for component parameters.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Parameters"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "type",
        "TypeName": "System.Type",
        "DisplayName": "System.Type Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper.ComponentType",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper.ComponentType\">\r\n            <summary>\r\n            Gets or sets the component type. This value is required.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "ComponentType"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "render-mode",
        "TypeName": "Microsoft.AspNetCore.Mvc.Rendering.RenderMode",
        "IsEnum": true,
        "DisplayName": "Microsoft.AspNetCore.Mvc.Rendering.RenderMode Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper.RenderMode",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper.RenderMode\">\r\n            <summary>\r\n            Gets or sets the <see cref=\"T:Microsoft.AspNetCore.Mvc.Rendering.RenderMode\" />\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "RenderMode"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper",
      "Common.TypeNameIdentifier": "ComponentTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": -6169773249597268380,
      "Data2": 4071589428224497862,
      "Data3": -5327763563557492666,
      "Data4": 3828036225363215932
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> implementation targeting &lt;distributed-cache&gt; elements.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "distributed-cache",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "name",
            "DisplayName": "name"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "ITagHelper",
        "Name": "name",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper.Name",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper.Name\">\r\n            <summary>\r\n            Gets or sets a unique name to discriminate cached entries.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Name"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "vary-by",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper.VaryBy",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryBy\">\r\n            <summary>\r\n            Gets or sets a <see cref=\"T:System.String\" /> to vary the cached result by.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "VaryBy"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "vary-by-header",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper.VaryByHeader",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByHeader\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of HTTP request headers to vary the cached result by.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "VaryByHeader"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "vary-by-query",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper.VaryByQuery",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByQuery\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of query parameters to vary the cached result by.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "VaryByQuery"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "vary-by-route",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper.VaryByRoute",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByRoute\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of route data parameters to vary the cached result by.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "VaryByRoute"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "vary-by-cookie",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper.VaryByCookie",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByCookie\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of cookie names to vary the cached result by.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "VaryByCookie"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "vary-by-user",
        "TypeName": "System.Boolean",
        "DisplayName": "bool Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper.VaryByUser",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByUser\">\r\n            <summary>\r\n            Gets or sets a value that determines if the cached result is to be varied by the Identity for the logged in\r\n            <see cref=\"P:Microsoft.AspNetCore.Http.HttpContext.User\" />.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "VaryByUser"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "vary-by-culture",
        "TypeName": "System.Boolean",
        "DisplayName": "bool Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper.VaryByCulture",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByCulture\">\r\n            <summary>\r\n            Gets or sets a value that determines if the cached result is to be varied by request culture.\r\n            <para>\r\n            Setting this to <c>true</c> would result in the result to be varied by <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />\r\n            and <see cref=\"P:System.Globalization.CultureInfo.CurrentUICulture\" />.\r\n            </para>\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "VaryByCulture"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "expires-on",
        "TypeName": "System.DateTimeOffset?",
        "DisplayName": "System.DateTimeOffset? Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper.ExpiresOn",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresOn\">\r\n            <summary>\r\n            Gets or sets the exact <see cref=\"T:System.DateTimeOffset\" /> the cache entry should be evicted.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "ExpiresOn"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "expires-after",
        "TypeName": "System.TimeSpan?",
        "DisplayName": "System.TimeSpan? Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper.ExpiresAfter",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresAfter\">\r\n            <summary>\r\n            Gets or sets the duration, from the time the cache entry was added, when it should be evicted.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "ExpiresAfter"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "expires-sliding",
        "TypeName": "System.TimeSpan?",
        "DisplayName": "System.TimeSpan? Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper.ExpiresSliding",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresSliding\">\r\n            <summary>\r\n            Gets or sets the duration from last access that the cache entry should be evicted.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "ExpiresSliding"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "enabled",
        "TypeName": "System.Boolean",
        "DisplayName": "bool Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper.Enabled",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.Enabled\">\r\n            <summary>\r\n            Gets or sets the value which determines if the tag helper is enabled or not.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Enabled"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper",
      "Common.TypeNameIdentifier": "DistributedCacheTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": 2985505521954061261,
      "Data2": 7366372136387448031,
      "Data3": 6552904402725855330,
      "Data4": -7218595895374958838
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;environment&gt; elements that conditionally renders\r\n            content based on the current value of <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\r\n            If the environment is not listed in the specified <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Names\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Include\" />,\r\n            or if it is in <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" />, the content will not be rendered.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "environment",
        "CaseSensitive": false
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "ITagHelper",
        "Name": "names",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Names",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Names\">\r\n            <summary>\r\n            A comma separated list of environment names in which the content should be rendered.\r\n            If the current environment is also in the <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" /> list, the content will not be rendered.\r\n            </summary>\r\n            <remarks>\r\n            The specified environment names are compared case insensitively to the current value of\r\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\r\n            </remarks>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Names"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "include",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Include",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Include\">\r\n            <summary>\r\n            A comma separated list of environment names in which the content should be rendered.\r\n            If the current environment is also in the <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" /> list, the content will not be rendered.\r\n            </summary>\r\n            <remarks>\r\n            The specified environment names are compared case insensitively to the current value of\r\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\r\n            </remarks>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Include"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "exclude",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\">\r\n            <summary>\r\n            A comma separated list of environment names in which the content will not be rendered.\r\n            </summary>\r\n            <remarks>\r\n            The specified environment names are compared case insensitively to the current value of\r\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\r\n            </remarks>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Exclude"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper",
      "Common.TypeNameIdentifier": "EnvironmentTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": 5348238147467664539,
      "Data2": 1526700542156310410,
      "Data3": 7833526019496906342,
      "Data4": -5963039319809403331
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;button&gt; elements and &lt;input&gt; elements with\r\n            their <c>type</c> attribute set to <c>image</c> or <c>submit</c>.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "button",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-action",
            "DisplayName": "asp-action"
          }
        ]
      },
      {
        "TagName": "button",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-controller",
            "DisplayName": "asp-controller"
          }
        ]
      },
      {
        "TagName": "button",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-area",
            "DisplayName": "asp-area"
          }
        ]
      },
      {
        "TagName": "button",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-page",
            "DisplayName": "asp-page"
          }
        ]
      },
      {
        "TagName": "button",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-page-handler",
            "DisplayName": "asp-page-handler"
          }
        ]
      },
      {
        "TagName": "button",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-fragment",
            "DisplayName": "asp-fragment"
          }
        ]
      },
      {
        "TagName": "button",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-route",
            "DisplayName": "asp-route"
          }
        ]
      },
      {
        "TagName": "button",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-all-route-data",
            "DisplayName": "asp-all-route-data"
          }
        ]
      },
      {
        "TagName": "button",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 4,
            "Name": "asp-route-",
            "DisplayName": "asp-route-..."
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 8,
            "Name": "type",
            "Value": "image",
            "DisplayName": "type"
          },
          {
            "Flags": 0,
            "Name": "asp-action",
            "DisplayName": "asp-action"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 8,
            "Name": "type",
            "Value": "image",
            "DisplayName": "type"
          },
          {
            "Flags": 0,
            "Name": "asp-controller",
            "DisplayName": "asp-controller"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 8,
            "Name": "type",
            "Value": "image",
            "DisplayName": "type"
          },
          {
            "Flags": 0,
            "Name": "asp-area",
            "DisplayName": "asp-area"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 8,
            "Name": "type",
            "Value": "image",
            "DisplayName": "type"
          },
          {
            "Flags": 0,
            "Name": "asp-page",
            "DisplayName": "asp-page"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 8,
            "Name": "type",
            "Value": "image",
            "DisplayName": "type"
          },
          {
            "Flags": 0,
            "Name": "asp-page-handler",
            "DisplayName": "asp-page-handler"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 8,
            "Name": "type",
            "Value": "image",
            "DisplayName": "type"
          },
          {
            "Flags": 0,
            "Name": "asp-fragment",
            "DisplayName": "asp-fragment"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 8,
            "Name": "type",
            "Value": "image",
            "DisplayName": "type"
          },
          {
            "Flags": 0,
            "Name": "asp-route",
            "DisplayName": "asp-route"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 8,
            "Name": "type",
            "Value": "image",
            "DisplayName": "type"
          },
          {
            "Flags": 0,
            "Name": "asp-all-route-data",
            "DisplayName": "asp-all-route-data"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 8,
            "Name": "type",
            "Value": "image",
            "DisplayName": "type"
          },
          {
            "Flags": 4,
            "Name": "asp-route-",
            "DisplayName": "asp-route-..."
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 8,
            "Name": "type",
            "Value": "submit",
            "DisplayName": "type"
          },
          {
            "Flags": 0,
            "Name": "asp-action",
            "DisplayName": "asp-action"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 8,
            "Name": "type",
            "Value": "submit",
            "DisplayName": "type"
          },
          {
            "Flags": 0,
            "Name": "asp-controller",
            "DisplayName": "asp-controller"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 8,
            "Name": "type",
            "Value": "submit",
            "DisplayName": "type"
          },
          {
            "Flags": 0,
            "Name": "asp-area",
            "DisplayName": "asp-area"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 8,
            "Name": "type",
            "Value": "submit",
            "DisplayName": "type"
          },
          {
            "Flags": 0,
            "Name": "asp-page",
            "DisplayName": "asp-page"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 8,
            "Name": "type",
            "Value": "submit",
            "DisplayName": "type"
          },
          {
            "Flags": 0,
            "Name": "asp-page-handler",
            "DisplayName": "asp-page-handler"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 8,
            "Name": "type",
            "Value": "submit",
            "DisplayName": "type"
          },
          {
            "Flags": 0,
            "Name": "asp-fragment",
            "DisplayName": "asp-fragment"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 8,
            "Name": "type",
            "Value": "submit",
            "DisplayName": "type"
          },
          {
            "Flags": 0,
            "Name": "asp-route",
            "DisplayName": "asp-route"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 8,
            "Name": "type",
            "Value": "submit",
            "DisplayName": "type"
          },
          {
            "Flags": 0,
            "Name": "asp-all-route-data",
            "DisplayName": "asp-all-route-data"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 8,
            "Name": "type",
            "Value": "submit",
            "DisplayName": "type"
          },
          {
            "Flags": 4,
            "Name": "asp-route-",
            "DisplayName": "asp-route-..."
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "ITagHelper",
        "Name": "asp-action",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Action",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Action\">\r\n            <summary>\r\n            The name of the action method.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Action"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-controller",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Controller",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Controller\">\r\n            <summary>\r\n            The name of the controller.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Controller"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-area",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Area",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Area\">\r\n            <summary>\r\n            The name of the area.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Area"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-page",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Page",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Page\">\r\n            <summary>\r\n            The name of the page.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Page"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-page-handler",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.PageHandler",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.PageHandler\">\r\n            <summary>\r\n            The name of the page handler.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "PageHandler"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-fragment",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Fragment",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Fragment\">\r\n            <summary>\r\n            Gets or sets the URL fragment.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Fragment"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-route",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Route",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Route\">\r\n            <summary>\r\n            Name of the route.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Action\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Controller\" /> is non-<c>null</c>.\r\n            </remarks>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Route"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-all-route-data",
        "TypeName": "System.Collections.Generic.IDictionary<System.String, System.String>",
        "HasIndexer": true,
        "IndexerNamePrefix": "asp-route-",
        "IndexerTypeName": "System.String",
        "DisplayName": "System.Collections.Generic.IDictionary<System.String, System.String> Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.RouteValues",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.RouteValues\">\r\n            <summary>\r\n            Additional parameters for the route.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "RouteValues"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper",
      "Common.TypeNameIdentifier": "FormActionTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": 3116505489740348477,
      "Data2": 8450533897857285909,
      "Data3": -2734342042192694058,
      "Data4": -382232429141822516
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;form&gt; elements.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "form",
        "CaseSensitive": false
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "ITagHelper",
        "Name": "asp-action",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Action",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Action\">\r\n            <summary>\r\n            The name of the action method.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Action"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-controller",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Controller",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Controller\">\r\n            <summary>\r\n            The name of the controller.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Controller"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-area",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Area",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Area\">\r\n            <summary>\r\n            The name of the area.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Area"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-page",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Page",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Page\">\r\n            <summary>\r\n            The name of the page.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Page"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-page-handler",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.PageHandler",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.PageHandler\">\r\n            <summary>\r\n            The name of the page handler.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "PageHandler"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-antiforgery",
        "TypeName": "System.Boolean?",
        "DisplayName": "System.Boolean? Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Antiforgery",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Antiforgery\">\r\n            <summary>\r\n            Whether the antiforgery token should be generated.\r\n            </summary>\r\n            <value>Defaults to <c>false</c> if user provides an <c>action</c> attribute\r\n            or if the <c>method</c> is <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.FormMethod.Get\" />; <c>true</c> otherwise.</value>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Antiforgery"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-fragment",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Fragment",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Fragment\">\r\n            <summary>\r\n            Gets or sets the URL fragment.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Fragment"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-route",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Route",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Route\">\r\n            <summary>\r\n            Name of the route.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Action\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Controller\" /> is non-<c>null</c>.\r\n            </remarks>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Route"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-all-route-data",
        "TypeName": "System.Collections.Generic.IDictionary<System.String, System.String>",
        "HasIndexer": true,
        "IndexerNamePrefix": "asp-route-",
        "IndexerTypeName": "System.String",
        "DisplayName": "System.Collections.Generic.IDictionary<System.String, System.String> Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.RouteValues",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.RouteValues\">\r\n            <summary>\r\n            Additional parameters for the route.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "RouteValues"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper",
      "Common.TypeNameIdentifier": "FormTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": -6929621948756490144,
      "Data2": 8270426219563557756,
      "Data3": 2565761404919370870,
      "Data4": 9142716369251685011
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;img&gt; elements that supports file versioning.\r\n            </summary>\r\n            <remarks>\r\n            The tag helper won't process for cases with just the 'src' attribute.\r\n            </remarks>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "img",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-append-version",
            "DisplayName": "asp-append-version"
          },
          {
            "Flags": 0,
            "Name": "src",
            "DisplayName": "src"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "ITagHelper",
        "Name": "src",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper.Src",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper.Src\">\r\n            <summary>\r\n            Source of the image.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases.\r\n            </remarks>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Src"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-append-version",
        "TypeName": "System.Boolean",
        "DisplayName": "bool Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper.AppendVersion",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper.AppendVersion\">\r\n            <summary>\r\n            Value indicating if file version should be appended to the src urls.\r\n            </summary>\r\n            <remarks>\r\n            If <c>true</c> then a query string \"v\" with the encoded content of the file is added.\r\n            </remarks>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "AppendVersion"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper",
      "Common.TypeNameIdentifier": "ImageTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": 4233854193804636366,
      "Data2": 6596594844770404010,
      "Data3": 7554964544244394985,
      "Data4": 6491856637253340287
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;input&gt; elements with an <c>asp-for</c> attribute.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-for",
            "DisplayName": "asp-for"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "ITagHelper",
        "Name": "asp-for",
        "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression",
        "DisplayName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For\">\r\n            <summary>\r\n            An expression to be evaluated against the current model.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "For"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-format",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\">\r\n            <summary>\r\n            The format string (see https://msdn.microsoft.com/en-us/library/txafckwd.aspx) used to format the\r\n            <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For\" /> result. Sets the generated \"value\" attribute to that formatted string.\r\n            </summary>\r\n            <remarks>\r\n            Not used if the provided (see <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" />) or calculated \"type\" attribute value is\r\n            <c>checkbox</c>, <c>password</c>, or <c>radio</c>. That is, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> is used when calling\r\n            <see cref=\"M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GenerateTextBox(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Object,System.String,System.Object)\" />.\r\n            </remarks>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Format"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "type",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\">\r\n            <summary>\r\n            The type of the &lt;input&gt; element.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases. Also used to determine the <see cref=\"T:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator\" />\r\n            helper to call and the default <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> value. A default <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> is not calculated\r\n            if the provided (see <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" />) or calculated \"type\" attribute value is <c>checkbox</c>,\r\n            <c>hidden</c>, <c>password</c>, or <c>radio</c>.\r\n            </remarks>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "InputTypeName"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "name",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Name",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Name\">\r\n            <summary>\r\n            The name of the &lt;input&gt; element.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For\" /> is\r\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\r\n            </remarks>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Name"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "value",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Value\">\r\n            <summary>\r\n            The value of the &lt;input&gt; element.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases. Also used to determine the generated \"checked\" attribute\r\n            if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" /> is \"radio\". Must not be <c>null</c> in that case.\r\n            </remarks>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Value"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper",
      "Common.TypeNameIdentifier": "InputTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": 1887497238083385185,
      "Data2": 295611655098548630,
      "Data3": -7836140279513856415,
      "Data4": 4419399387559051151
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;label&gt; elements with an <c>asp-for</c> attribute.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "label",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-for",
            "DisplayName": "asp-for"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "ITagHelper",
        "Name": "asp-for",
        "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression",
        "DisplayName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper.For",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper.For\">\r\n            <summary>\r\n            An expression to be evaluated against the current model.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "For"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper",
      "Common.TypeNameIdentifier": "LabelTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": -1624137369404442060,
      "Data2": -9156582252790133808,
      "Data3": 8837923760938476492,
      "Data4": -3772719989939911864
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;link&gt; elements that supports fallback href paths.\r\n            </summary>\r\n            <remarks>\r\n            The tag helper won't process for cases with just the 'href' attribute.\r\n            </remarks>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "link",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-href-include",
            "DisplayName": "asp-href-include"
          }
        ]
      },
      {
        "TagName": "link",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-href-exclude",
            "DisplayName": "asp-href-exclude"
          }
        ]
      },
      {
        "TagName": "link",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-fallback-href",
            "DisplayName": "asp-fallback-href"
          }
        ]
      },
      {
        "TagName": "link",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-fallback-href-include",
            "DisplayName": "asp-fallback-href-include"
          }
        ]
      },
      {
        "TagName": "link",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-fallback-href-exclude",
            "DisplayName": "asp-fallback-href-exclude"
          }
        ]
      },
      {
        "TagName": "link",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-fallback-test-class",
            "DisplayName": "asp-fallback-test-class"
          }
        ]
      },
      {
        "TagName": "link",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-fallback-test-property",
            "DisplayName": "asp-fallback-test-property"
          }
        ]
      },
      {
        "TagName": "link",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-fallback-test-value",
            "DisplayName": "asp-fallback-test-value"
          }
        ]
      },
      {
        "TagName": "link",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-append-version",
            "DisplayName": "asp-append-version"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "ITagHelper",
        "Name": "href",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.Href",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.Href\">\r\n            <summary>\r\n            Address of the linked resource.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases.\r\n            </remarks>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Href"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-href-include",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.HrefInclude",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.HrefInclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of CSS stylesheets to load.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "HrefInclude"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-href-exclude",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.HrefExclude",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.HrefExclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of CSS stylesheets to exclude from loading.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.HrefInclude\" />.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "HrefExclude"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-fallback-href",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\">\r\n            <summary>\r\n            The URL of a CSS stylesheet to fallback to in the case the primary one fails.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "FallbackHref"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-suppress-fallback-integrity",
        "TypeName": "System.Boolean",
        "DisplayName": "bool Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.SuppressFallbackIntegrity",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.SuppressFallbackIntegrity\">\r\n            <summary>\r\n            Boolean value that determines if an integrity hash will be compared with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> value.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "SuppressFallbackIntegrity"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-append-version",
        "TypeName": "System.Boolean?",
        "DisplayName": "System.Boolean? Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.AppendVersion",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.AppendVersion\">\r\n            <summary>\r\n            Value indicating if file version should be appended to the href urls.\r\n            </summary>\r\n            <remarks>\r\n            If <c>true</c> then a query string \"v\" with the encoded content of the file is added.\r\n            </remarks>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "AppendVersion"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-fallback-href-include",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of CSS stylesheets to fallback to in the case the primary\r\n            one fails.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "FallbackHrefInclude"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-fallback-href-exclude",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefExclude",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefExclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of CSS stylesheets to exclude from the fallback list, in\r\n            the case the primary one fails.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "FallbackHrefExclude"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-fallback-test-class",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestClass",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestClass\">\r\n            <summary>\r\n            The class name defined in the stylesheet to use for the fallback test.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestProperty\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestValue\" />,\r\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "FallbackTestClass"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-fallback-test-property",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestProperty",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestProperty\">\r\n            <summary>\r\n            The CSS property name to use for the fallback test.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestClass\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestValue\" />,\r\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "FallbackTestProperty"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-fallback-test-value",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestValue",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestValue\">\r\n            <summary>\r\n            The CSS property value to use for the fallback test.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestClass\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestProperty\" />,\r\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "FallbackTestValue"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper",
      "Common.TypeNameIdentifier": "LinkTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": -1548567717904225779,
      "Data2": -5138065978056833963,
      "Data3": 3016893068060650774,
      "Data4": 3395222620686008424
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;option&gt; elements.\r\n            </summary>\r\n            <remarks>\r\n            This <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> works in conjunction with <see cref=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper\" />. It reads elements\r\n            content but does not modify that content. The only modification it makes is to add a <c>selected</c> attribute\r\n            in some cases.\r\n            </remarks>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "option",
        "CaseSensitive": false
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "ITagHelper",
        "Name": "value",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper.Value\">\r\n            <summary>\r\n            Specifies a value for the &lt;option&gt; element.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases.\r\n            </remarks>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Value"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper",
      "Common.TypeNameIdentifier": "OptionTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": 3455502430048625550,
      "Data2": -8421053937918974129,
      "Data3": 6068483199024634924,
      "Data4": 9157500575399770259
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper\">\r\n            <summary>\r\n            Renders a partial view.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "partial",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "name",
            "DisplayName": "name"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "ITagHelper",
        "Name": "name",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Name",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Name\">\r\n            <summary>\r\n            The name or path of the partial view that is rendered to the response.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Name"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "for",
        "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression",
        "DisplayName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.For",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.For\">\r\n            <summary>\r\n            An expression to be evaluated against the current model. Cannot be used together with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Model\" />.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "For"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "model",
        "TypeName": "System.Object",
        "DisplayName": "object Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Model",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Model\">\r\n            <summary>\r\n            The model to pass into the partial view. Cannot be used together with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.For\" />.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Model"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "optional",
        "TypeName": "System.Boolean",
        "DisplayName": "bool Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Optional",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Optional\">\r\n            <summary>\r\n            When optional, executing the tag helper will no-op if the view cannot be located.\r\n            Otherwise will throw stating the view could not be found.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Optional"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "fallback-name",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.FallbackName",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.FallbackName\">\r\n            <summary>\r\n            View to lookup if the view specified by <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Name\" /> cannot be located.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "FallbackName"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "view-data",
        "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary",
        "HasIndexer": true,
        "IndexerNamePrefix": "view-data-",
        "IndexerTypeName": "System.Object",
        "DisplayName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.ViewData",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.ViewData\">\r\n            <summary>\r\n            A <see cref=\"T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary\" /> to pass into the partial view.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "ViewData"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper",
      "Common.TypeNameIdentifier": "PartialTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": 7015744733003198603,
      "Data2": 3394077066165693914,
      "Data3": 5295649563369853739,
      "Data4": 8567139667125272586
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper\">\r\n            <summary>\r\n            A <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> that saves the state of Razor components rendered on the page up to that point.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "persist-component-state",
        "TagStructure": 2,
        "CaseSensitive": false
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "ITagHelper",
        "Name": "persist-mode",
        "TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.PersistenceMode?",
        "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.PersistenceMode? Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper.PersistenceMode",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper.PersistenceMode\">\r\n            <summary>\r\n            Gets or sets the <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper.PersistenceMode\" /> for the state to persist.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "PersistenceMode"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper",
      "Common.TypeNameIdentifier": "PersistComponentStateTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": 6478302059401420011,
      "Data2": 3983313380671095168,
      "Data3": -4817530530158012933,
      "Data4": 7172063437035834514
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;script&gt; elements that supports fallback src paths.\r\n            </summary>\r\n            <remarks>\r\n            The tag helper won't process for cases with just the 'src' attribute.\r\n            </remarks>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "script",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-src-include",
            "DisplayName": "asp-src-include"
          }
        ]
      },
      {
        "TagName": "script",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-src-exclude",
            "DisplayName": "asp-src-exclude"
          }
        ]
      },
      {
        "TagName": "script",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-fallback-src",
            "DisplayName": "asp-fallback-src"
          }
        ]
      },
      {
        "TagName": "script",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-fallback-src-include",
            "DisplayName": "asp-fallback-src-include"
          }
        ]
      },
      {
        "TagName": "script",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-fallback-src-exclude",
            "DisplayName": "asp-fallback-src-exclude"
          }
        ]
      },
      {
        "TagName": "script",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-fallback-test",
            "DisplayName": "asp-fallback-test"
          }
        ]
      },
      {
        "TagName": "script",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-append-version",
            "DisplayName": "asp-append-version"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "ITagHelper",
        "Name": "src",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.Src",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.Src\">\r\n            <summary>\r\n            Address of the external script to use.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases.\r\n            </remarks>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Src"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-src-include",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.SrcInclude",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.SrcInclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of JavaScript scripts to load.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "SrcInclude"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-src-exclude",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.SrcExclude",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.SrcExclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of JavaScript scripts to exclude from loading.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.SrcInclude\" />.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "SrcExclude"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-fallback-src",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrc",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrc\">\r\n            <summary>\r\n            The URL of a Script tag to fallback to in the case the primary one fails.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "FallbackSrc"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-suppress-fallback-integrity",
        "TypeName": "System.Boolean",
        "DisplayName": "bool Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.SuppressFallbackIntegrity",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.SuppressFallbackIntegrity\">\r\n            <summary>\r\n            Boolean value that determines if an integrity hash will be compared with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrc\" /> value.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "SuppressFallbackIntegrity"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-append-version",
        "TypeName": "System.Boolean?",
        "DisplayName": "System.Boolean? Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.AppendVersion",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.AppendVersion\">\r\n            <summary>\r\n            Value indicating if file version should be appended to src urls.\r\n            </summary>\r\n            <remarks>\r\n            A query string \"v\" with the encoded content of the file is added.\r\n            </remarks>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "AppendVersion"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-fallback-src-include",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrcInclude",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrcInclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of JavaScript scripts to fallback to in the case the\r\n            primary one fails.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "FallbackSrcInclude"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-fallback-src-exclude",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrcExclude",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrcExclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of JavaScript scripts to exclude from the fallback list, in\r\n            the case the primary one fails.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrcInclude\" />.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "FallbackSrcExclude"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-fallback-test",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackTestExpression",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackTestExpression\">\r\n            <summary>\r\n            The script method defined in the primary script to use for the fallback test.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "FallbackTestExpression"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper",
      "Common.TypeNameIdentifier": "ScriptTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": 1313924010673080130,
      "Data2": -3468467854617892279,
      "Data3": 7366165212795684127,
      "Data4": 415767734401498527
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;select&gt; elements with <c>asp-for</c> and/or\r\n            <c>asp-items</c> attribute(s).\r\n            </summary>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "select",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-for",
            "DisplayName": "asp-for"
          }
        ]
      },
      {
        "TagName": "select",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-items",
            "DisplayName": "asp-items"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "ITagHelper",
        "Name": "asp-for",
        "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression",
        "DisplayName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper.For",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper.For\">\r\n            <summary>\r\n            An expression to be evaluated against the current model.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "For"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "asp-items",
        "TypeName": "System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem>",
        "DisplayName": "System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem> Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper.Items",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper.Items\">\r\n            <summary>\r\n            A collection of <see cref=\"T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem\" /> objects used to populate the &lt;select&gt; element with\r\n            &lt;optgroup&gt; and &lt;option&gt; elements.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Items"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "name",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper.Name",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper.Name\">\r\n            <summary>\r\n            The name of the &lt;input&gt; element.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper.For\" /> is\r\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\r\n            </remarks>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Name"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper",
      "Common.TypeNameIdentifier": "SelectTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": 2697612516638481609,
      "Data2": 6971680485026187205,
      "Data3": -847513943978377870,
      "Data4": -8088840287696243264
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;textarea&gt; elements with an <c>asp-for</c> attribute.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "textarea",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-for",
            "DisplayName": "asp-for"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "ITagHelper",
        "Name": "asp-for",
        "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression",
        "DisplayName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper.For",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper.For\">\r\n            <summary>\r\n            An expression to be evaluated against the current model.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "For"
        }
      },
      {
        "Kind": "ITagHelper",
        "Name": "name",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper.Name",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper.Name\">\r\n            <summary>\r\n            The name of the &lt;input&gt; element.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper.For\" /> is\r\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\r\n            </remarks>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "Name"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper",
      "Common.TypeNameIdentifier": "TextAreaTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": 833314098404990876,
      "Data2": 508810436558701255,
      "Data3": -6180250706772092637,
      "Data4": -6202994166827862274
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting any HTML element with an <c>asp-validation-for</c>\r\n            attribute.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "span",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-validation-for",
            "DisplayName": "asp-validation-for"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "ITagHelper",
        "Name": "asp-validation-for",
        "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression",
        "DisplayName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper.For",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper.For\">\r\n            <summary>\r\n            Gets an expression to be evaluated against the current model.\r\n            </summary>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "For"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper",
      "Common.TypeNameIdentifier": "ValidationMessageTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": -5725973189427669920,
      "Data2": -8824681836644157707,
      "Data3": -1428655201600491224,
      "Data4": 1461666493320916719
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting any HTML element with an <c>asp-validation-summary</c>\r\n            attribute.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "div",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-validation-summary",
            "DisplayName": "asp-validation-summary"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "ITagHelper",
        "Name": "asp-validation-summary",
        "TypeName": "Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary",
        "IsEnum": true,
        "DisplayName": "Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper.ValidationSummary",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper.ValidationSummary\">\r\n            <summary>\r\n            If <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.All\" /> or <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.ModelOnly\" />, appends a validation\r\n            summary. Otherwise (<see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.None\" />, the default), this tag helper does nothing.\r\n            </summary>\r\n            <exception cref=\"T:System.ArgumentException\">\r\n            Thrown if setter is called with an undefined <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper.ValidationSummary\" /> value e.g.\r\n            <c>(ValidationSummary)23</c>.\r\n            </exception>\r\n        </member>",
        "CaseSensitive": false,
        "Metadata": {
          "Common.PropertyName": "ValidationSummary"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper",
      "Common.TypeNameIdentifier": "ValidationSummaryTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": -7183956746840367365,
      "Data2": 3483685066146799759,
      "Data3": -6960875889481256700,
      "Data4": -281280908176130954
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.Razor",
    "DisplayName": "Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting elements containing attributes with URL expected values.\r\n            </summary>\r\n            <remarks>Resolves URLs starting with '~/' (relative to the application's 'webroot' setting) that are not\r\n            targeted by other <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" />s. Runs prior to other <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" />s to ensure\r\n            application-relative URLs are resolved.</remarks>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 16,
            "Name": "itemid",
            "Value": "~/",
            "DisplayName": "itemid"
          }
        ]
      },
      {
        "TagName": "a",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 16,
            "Name": "href",
            "Value": "~/",
            "DisplayName": "href"
          }
        ]
      },
      {
        "TagName": "applet",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 16,
            "Name": "archive",
            "Value": "~/",
            "DisplayName": "archive"
          }
        ]
      },
      {
        "TagName": "area",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 16,
            "Name": "href",
            "Value": "~/",
            "DisplayName": "href"
          }
        ]
      },
      {
        "TagName": "audio",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 16,
            "Name": "src",
            "Value": "~/",
            "DisplayName": "src"
          }
        ]
      },
      {
        "TagName": "base",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 16,
            "Name": "href",
            "Value": "~/",
            "DisplayName": "href"
          }
        ]
      },
      {
        "TagName": "blockquote",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 16,
            "Name": "cite",
            "Value": "~/",
            "DisplayName": "cite"
          }
        ]
      },
      {
        "TagName": "button",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 16,
            "Name": "formaction",
            "Value": "~/",
            "DisplayName": "formaction"
          }
        ]
      },
      {
        "TagName": "del",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 16,
            "Name": "cite",
            "Value": "~/",
            "DisplayName": "cite"
          }
        ]
      },
      {
        "TagName": "embed",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 16,
            "Name": "src",
            "Value": "~/",
            "DisplayName": "src"
          }
        ]
      },
      {
        "TagName": "form",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 16,
            "Name": "action",
            "Value": "~/",
            "DisplayName": "action"
          }
        ]
      },
      {
        "TagName": "html",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 16,
            "Name": "manifest",
            "Value": "~/",
            "DisplayName": "manifest"
          }
        ]
      },
      {
        "TagName": "iframe",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 16,
            "Name": "src",
            "Value": "~/",
            "DisplayName": "src"
          }
        ]
      },
      {
        "TagName": "img",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 16,
            "Name": "src",
            "Value": "~/",
            "DisplayName": "src"
          }
        ]
      },
      {
        "TagName": "img",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 16,
            "Name": "srcset",
            "Value": "~/",
            "DisplayName": "srcset"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 16,
            "Name": "src",
            "Value": "~/",
            "DisplayName": "src"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 16,
            "Name": "formaction",
            "Value": "~/",
            "DisplayName": "formaction"
          }
        ]
      },
      {
        "TagName": "ins",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 16,
            "Name": "cite",
            "Value": "~/",
            "DisplayName": "cite"
          }
        ]
      },
      {
        "TagName": "link",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 16,
            "Name": "href",
            "Value": "~/",
            "DisplayName": "href"
          }
        ]
      },
      {
        "TagName": "menuitem",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 16,
            "Name": "icon",
            "Value": "~/",
            "DisplayName": "icon"
          }
        ]
      },
      {
        "TagName": "object",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 16,
            "Name": "archive",
            "Value": "~/",
            "DisplayName": "archive"
          }
        ]
      },
      {
        "TagName": "object",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 16,
            "Name": "data",
            "Value": "~/",
            "DisplayName": "data"
          }
        ]
      },
      {
        "TagName": "q",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 16,
            "Name": "cite",
            "Value": "~/",
            "DisplayName": "cite"
          }
        ]
      },
      {
        "TagName": "script",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 16,
            "Name": "src",
            "Value": "~/",
            "DisplayName": "src"
          }
        ]
      },
      {
        "TagName": "source",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 16,
            "Name": "src",
            "Value": "~/",
            "DisplayName": "src"
          }
        ]
      },
      {
        "TagName": "source",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 16,
            "Name": "srcset",
            "Value": "~/",
            "DisplayName": "srcset"
          }
        ]
      },
      {
        "TagName": "track",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 16,
            "Name": "src",
            "Value": "~/",
            "DisplayName": "src"
          }
        ]
      },
      {
        "TagName": "video",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 16,
            "Name": "src",
            "Value": "~/",
            "DisplayName": "src"
          }
        ]
      },
      {
        "TagName": "video",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 16,
            "Name": "poster",
            "Value": "~/",
            "DisplayName": "poster"
          }
        ]
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper",
      "Common.TypeNameIdentifier": "UrlResolutionTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.Razor.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": 1996544833337117931,
      "Data2": -5002740071339651894,
      "Data3": -5514182832792698164,
      "Data4": -8151118230042918680
    },
    "Kind": "Components.Bind",
    "Name": "Bind",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Bind",
    "Documentation": {
      "Id": 0
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 5,
            "Name": "@bind-",
            "DisplayName": "@bind-..."
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Bind",
        "Name": "@bind-...",
        "TypeName": "System.Collections.Generic.Dictionary<string, object>",
        "HasIndexer": true,
        "IndexerNamePrefix": "@bind-",
        "IndexerTypeName": "System.Object",
        "DisplayName": "System.Collections.Generic.Dictionary<string, object> Microsoft.AspNetCore.Components.Bind.Bind",
        "Documentation": {
          "Id": 0
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.Bind",
            "Name": "format",
            "TypeName": "System.String",
            "DisplayName": ":format",
            "Documentation": {
              "Id": 2
            },
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "event",
            "TypeName": "System.String",
            "DisplayName": ":event",
            "Documentation": {
              "Id": 1,
              "Args": [
                "@bind-..."
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Event"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "culture",
            "TypeName": "System.Globalization.CultureInfo",
            "DisplayName": ":culture",
            "Documentation": {
              "Id": 5
            },
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "get",
            "TypeName": "System.Object",
            "DisplayName": ":get",
            "Documentation": {
              "Id": 8
            },
            "Metadata": {
              "Common.PropertyName": "Get",
              "Components.Bind.AlternativeNotation": "True"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "set",
            "TypeName": "System.Delegate",
            "DisplayName": ":set",
            "Documentation": {
              "Id": 9
            },
            "Metadata": {
              "Common.PropertyName": "Set"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "after",
            "TypeName": "System.Delegate",
            "DisplayName": ":after",
            "Documentation": {
              "Id": 4
            },
            "Metadata": {
              "Common.PropertyName": "After"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Bind"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Bind",
      "Common.TypeNameIdentifier": "Bind",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
      "Components.Bind.Fallback": "True",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 7831883623100504721,
      "Data2": 6401567557962328946,
      "Data3": 39083122879607656,
      "Data4": -393246367825570461
    },
    "Kind": "Components.Bind",
    "Name": "Bind",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
    "Documentation": {
      "Id": 3,
      "Args": [
        "value",
        "onchange"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind",
            "DisplayName": "@bind"
          }
        ]
      },
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind:get",
            "DisplayName": "@bind:get"
          },
          {
            "Flags": 1,
            "Name": "@bind:set",
            "DisplayName": "@bind:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Bind",
        "Name": "@bind",
        "TypeName": "System.Object",
        "DisplayName": "object Microsoft.AspNetCore.Components.Web.BindAttributes.Bind",
        "Documentation": {
          "Id": 3,
          "Args": [
            "value",
            "onchange"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.Bind",
            "Name": "format",
            "TypeName": "System.String",
            "DisplayName": ":format",
            "Documentation": {
              "Id": 7,
              "Args": [
                "@bind"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "event",
            "TypeName": "System.String",
            "DisplayName": ":event",
            "Documentation": {
              "Id": 6,
              "Args": [
                "@bind"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Event_value"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "culture",
            "TypeName": "System.Globalization.CultureInfo",
            "DisplayName": ":culture",
            "Documentation": {
              "Id": 5
            },
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "get",
            "TypeName": "System.Object",
            "DisplayName": ":get",
            "Documentation": {
              "Id": 8
            },
            "Metadata": {
              "Common.PropertyName": "Get",
              "Components.Bind.AlternativeNotation": "True"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "set",
            "TypeName": "System.Delegate",
            "DisplayName": ":set",
            "Documentation": {
              "Id": 9
            },
            "Metadata": {
              "Common.PropertyName": "Set"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "after",
            "TypeName": "System.Delegate",
            "DisplayName": ":after",
            "Documentation": {
              "Id": 4
            },
            "Metadata": {
              "Common.PropertyName": "After"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Bind"
        }
      },
      {
        "Kind": "Components.Bind",
        "Name": "format-value",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.BindAttributes.Format_value",
        "Documentation": {
          "Id": 7,
          "Args": [
            "@bind"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Format_value"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
      "Common.TypeNameIdentifier": "BindAttributes",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.Bind.ChangeAttribute": "onchange",
      "Components.Bind.Format": null,
      "Components.Bind.IsInvariantCulture": "False",
      "Components.Bind.ValueAttribute": "value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 8590072084144063483,
      "Data2": -4395546825401128239,
      "Data3": 1562019271343453386,
      "Data4": -4428881203229259881
    },
    "Kind": "Components.Bind",
    "Name": "Bind_value",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
    "Documentation": {
      "Id": 3,
      "Args": [
        "value",
        "onchange"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind-value",
            "DisplayName": "@bind-value"
          }
        ]
      },
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind-value:get",
            "DisplayName": "@bind-value:get"
          },
          {
            "Flags": 1,
            "Name": "@bind-value:set",
            "DisplayName": "@bind-value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Bind",
        "Name": "@bind-value",
        "TypeName": "System.Object",
        "DisplayName": "object Microsoft.AspNetCore.Components.Web.BindAttributes.Bind_value",
        "Documentation": {
          "Id": 3,
          "Args": [
            "value",
            "onchange"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.Bind",
            "Name": "format",
            "TypeName": "System.String",
            "DisplayName": ":format",
            "Documentation": {
              "Id": 7,
              "Args": [
                "@bind-value"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "event",
            "TypeName": "System.String",
            "DisplayName": ":event",
            "Documentation": {
              "Id": 6,
              "Args": [
                "@bind-value"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Event_value"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "culture",
            "TypeName": "System.Globalization.CultureInfo",
            "DisplayName": ":culture",
            "Documentation": {
              "Id": 5
            },
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "get",
            "TypeName": "System.Object",
            "DisplayName": ":get",
            "Documentation": {
              "Id": 8
            },
            "Metadata": {
              "Common.PropertyName": "Get",
              "Components.Bind.AlternativeNotation": "True"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "set",
            "TypeName": "System.Delegate",
            "DisplayName": ":set",
            "Documentation": {
              "Id": 9
            },
            "Metadata": {
              "Common.PropertyName": "Set"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "after",
            "TypeName": "System.Delegate",
            "DisplayName": ":after",
            "Documentation": {
              "Id": 4
            },
            "Metadata": {
              "Common.PropertyName": "After"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Bind_value"
        }
      },
      {
        "Kind": "Components.Bind",
        "Name": "format-value",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.BindAttributes.Format_value",
        "Documentation": {
          "Id": 7,
          "Args": [
            "@bind-value"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Format_value"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
      "Common.TypeNameIdentifier": "BindAttributes",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.Bind.ChangeAttribute": "onchange",
      "Components.Bind.Format": null,
      "Components.Bind.IsInvariantCulture": "False",
      "Components.Bind.ValueAttribute": "value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -7668045461527481537,
      "Data2": 3893740420131720641,
      "Data3": -5315021421464622317,
      "Data4": -6171436493349593809
    },
    "Kind": "Components.Bind",
    "Name": "Bind",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
    "Documentation": {
      "Id": 3,
      "Args": [
        "checked",
        "onchange"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 9,
            "Name": "type",
            "Value": "checkbox",
            "DisplayName": "type"
          },
          {
            "Flags": 1,
            "Name": "@bind",
            "DisplayName": "@bind"
          }
        ]
      },
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 9,
            "Name": "type",
            "Value": "checkbox",
            "DisplayName": "type"
          },
          {
            "Flags": 1,
            "Name": "@bind:get",
            "DisplayName": "@bind:get"
          },
          {
            "Flags": 1,
            "Name": "@bind:set",
            "DisplayName": "@bind:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Bind",
        "Name": "@bind",
        "TypeName": "System.Object",
        "DisplayName": "object Microsoft.AspNetCore.Components.Web.BindAttributes.Bind",
        "Documentation": {
          "Id": 3,
          "Args": [
            "checked",
            "onchange"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.Bind",
            "Name": "format",
            "TypeName": "System.String",
            "DisplayName": ":format",
            "Documentation": {
              "Id": 7,
              "Args": [
                "@bind"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Format_checked"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "event",
            "TypeName": "System.String",
            "DisplayName": ":event",
            "Documentation": {
              "Id": 6,
              "Args": [
                "@bind"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Event_checked"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "culture",
            "TypeName": "System.Globalization.CultureInfo",
            "DisplayName": ":culture",
            "Documentation": {
              "Id": 5
            },
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "get",
            "TypeName": "System.Object",
            "DisplayName": ":get",
            "Documentation": {
              "Id": 8
            },
            "Metadata": {
              "Common.PropertyName": "Get",
              "Components.Bind.AlternativeNotation": "True"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "set",
            "TypeName": "System.Delegate",
            "DisplayName": ":set",
            "Documentation": {
              "Id": 9
            },
            "Metadata": {
              "Common.PropertyName": "Set"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "after",
            "TypeName": "System.Delegate",
            "DisplayName": ":after",
            "Documentation": {
              "Id": 4
            },
            "Metadata": {
              "Common.PropertyName": "After"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Bind"
        }
      },
      {
        "Kind": "Components.Bind",
        "Name": "format-checked",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.BindAttributes.Format_checked",
        "Documentation": {
          "Id": 7,
          "Args": [
            "@bind"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Format_checked"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
      "Common.TypeNameIdentifier": "BindAttributes",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.Bind.ChangeAttribute": "onchange",
      "Components.Bind.Format": null,
      "Components.Bind.IsInvariantCulture": "False",
      "Components.Bind.TypeAttribute": "checkbox",
      "Components.Bind.ValueAttribute": "checked",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 5613374251332037455,
      "Data2": 7539201483085732081,
      "Data3": -9177015219095145345,
      "Data4": 7068186179431136270
    },
    "Kind": "Components.Bind",
    "Name": "Bind",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
    "Documentation": {
      "Id": 3,
      "Args": [
        "value",
        "onchange"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 9,
            "Name": "type",
            "Value": "text",
            "DisplayName": "type"
          },
          {
            "Flags": 1,
            "Name": "@bind",
            "DisplayName": "@bind"
          }
        ]
      },
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 9,
            "Name": "type",
            "Value": "text",
            "DisplayName": "type"
          },
          {
            "Flags": 1,
            "Name": "@bind:get",
            "DisplayName": "@bind:get"
          },
          {
            "Flags": 1,
            "Name": "@bind:set",
            "DisplayName": "@bind:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Bind",
        "Name": "@bind",
        "TypeName": "System.Object",
        "DisplayName": "object Microsoft.AspNetCore.Components.Web.BindAttributes.Bind",
        "Documentation": {
          "Id": 3,
          "Args": [
            "value",
            "onchange"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.Bind",
            "Name": "format",
            "TypeName": "System.String",
            "DisplayName": ":format",
            "Documentation": {
              "Id": 7,
              "Args": [
                "@bind"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "event",
            "TypeName": "System.String",
            "DisplayName": ":event",
            "Documentation": {
              "Id": 6,
              "Args": [
                "@bind"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Event_value"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "culture",
            "TypeName": "System.Globalization.CultureInfo",
            "DisplayName": ":culture",
            "Documentation": {
              "Id": 5
            },
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "get",
            "TypeName": "System.Object",
            "DisplayName": ":get",
            "Documentation": {
              "Id": 8
            },
            "Metadata": {
              "Common.PropertyName": "Get",
              "Components.Bind.AlternativeNotation": "True"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "set",
            "TypeName": "System.Delegate",
            "DisplayName": ":set",
            "Documentation": {
              "Id": 9
            },
            "Metadata": {
              "Common.PropertyName": "Set"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "after",
            "TypeName": "System.Delegate",
            "DisplayName": ":after",
            "Documentation": {
              "Id": 4
            },
            "Metadata": {
              "Common.PropertyName": "After"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Bind"
        }
      },
      {
        "Kind": "Components.Bind",
        "Name": "format-value",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.BindAttributes.Format_value",
        "Documentation": {
          "Id": 7,
          "Args": [
            "@bind"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Format_value"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
      "Common.TypeNameIdentifier": "BindAttributes",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.Bind.ChangeAttribute": "onchange",
      "Components.Bind.Format": null,
      "Components.Bind.IsInvariantCulture": "False",
      "Components.Bind.TypeAttribute": "text",
      "Components.Bind.ValueAttribute": "value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 1968910051984607124,
      "Data2": -5276633537167901351,
      "Data3": -6125907827153706901,
      "Data4": -8497957774191210886
    },
    "Kind": "Components.Bind",
    "Name": "Bind",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
    "Documentation": {
      "Id": 3,
      "Args": [
        "value",
        "onchange"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 9,
            "Name": "type",
            "Value": "number",
            "DisplayName": "type"
          },
          {
            "Flags": 1,
            "Name": "@bind",
            "DisplayName": "@bind"
          }
        ]
      },
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 9,
            "Name": "type",
            "Value": "number",
            "DisplayName": "type"
          },
          {
            "Flags": 1,
            "Name": "@bind:get",
            "DisplayName": "@bind:get"
          },
          {
            "Flags": 1,
            "Name": "@bind:set",
            "DisplayName": "@bind:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Bind",
        "Name": "@bind",
        "TypeName": "System.Object",
        "DisplayName": "object Microsoft.AspNetCore.Components.Web.BindAttributes.Bind",
        "Documentation": {
          "Id": 3,
          "Args": [
            "value",
            "onchange"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.Bind",
            "Name": "format",
            "TypeName": "System.String",
            "DisplayName": ":format",
            "Documentation": {
              "Id": 7,
              "Args": [
                "@bind"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "event",
            "TypeName": "System.String",
            "DisplayName": ":event",
            "Documentation": {
              "Id": 6,
              "Args": [
                "@bind"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Event_value"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "culture",
            "TypeName": "System.Globalization.CultureInfo",
            "DisplayName": ":culture",
            "Documentation": {
              "Id": 5
            },
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "get",
            "TypeName": "System.Object",
            "DisplayName": ":get",
            "Documentation": {
              "Id": 8
            },
            "Metadata": {
              "Common.PropertyName": "Get",
              "Components.Bind.AlternativeNotation": "True"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "set",
            "TypeName": "System.Delegate",
            "DisplayName": ":set",
            "Documentation": {
              "Id": 9
            },
            "Metadata": {
              "Common.PropertyName": "Set"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "after",
            "TypeName": "System.Delegate",
            "DisplayName": ":after",
            "Documentation": {
              "Id": 4
            },
            "Metadata": {
              "Common.PropertyName": "After"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Bind"
        }
      },
      {
        "Kind": "Components.Bind",
        "Name": "format-value",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.BindAttributes.Format_value",
        "Documentation": {
          "Id": 7,
          "Args": [
            "@bind"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Format_value"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
      "Common.TypeNameIdentifier": "BindAttributes",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.Bind.ChangeAttribute": "onchange",
      "Components.Bind.Format": null,
      "Components.Bind.IsInvariantCulture": "True",
      "Components.Bind.TypeAttribute": "number",
      "Components.Bind.ValueAttribute": "value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 7496845414737837373,
      "Data2": -5339491262384823154,
      "Data3": -3958396520233424102,
      "Data4": -7720213567488625630
    },
    "Kind": "Components.Bind",
    "Name": "Bind_value",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
    "Documentation": {
      "Id": 3,
      "Args": [
        "value",
        "onchange"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 9,
            "Name": "type",
            "Value": "number",
            "DisplayName": "type"
          },
          {
            "Flags": 1,
            "Name": "@bind-value",
            "DisplayName": "@bind-value"
          }
        ]
      },
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 9,
            "Name": "type",
            "Value": "number",
            "DisplayName": "type"
          },
          {
            "Flags": 1,
            "Name": "@bind-value:get",
            "DisplayName": "@bind-value:get"
          },
          {
            "Flags": 1,
            "Name": "@bind-value:set",
            "DisplayName": "@bind-value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Bind",
        "Name": "@bind-value",
        "TypeName": "System.Object",
        "DisplayName": "object Microsoft.AspNetCore.Components.Web.BindAttributes.Bind_value",
        "Documentation": {
          "Id": 3,
          "Args": [
            "value",
            "onchange"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.Bind",
            "Name": "format",
            "TypeName": "System.String",
            "DisplayName": ":format",
            "Documentation": {
              "Id": 7,
              "Args": [
                "@bind-value"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "event",
            "TypeName": "System.String",
            "DisplayName": ":event",
            "Documentation": {
              "Id": 6,
              "Args": [
                "@bind-value"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Event_value"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "culture",
            "TypeName": "System.Globalization.CultureInfo",
            "DisplayName": ":culture",
            "Documentation": {
              "Id": 5
            },
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "get",
            "TypeName": "System.Object",
            "DisplayName": ":get",
            "Documentation": {
              "Id": 8
            },
            "Metadata": {
              "Common.PropertyName": "Get",
              "Components.Bind.AlternativeNotation": "True"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "set",
            "TypeName": "System.Delegate",
            "DisplayName": ":set",
            "Documentation": {
              "Id": 9
            },
            "Metadata": {
              "Common.PropertyName": "Set"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "after",
            "TypeName": "System.Delegate",
            "DisplayName": ":after",
            "Documentation": {
              "Id": 4
            },
            "Metadata": {
              "Common.PropertyName": "After"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Bind_value"
        }
      },
      {
        "Kind": "Components.Bind",
        "Name": "format-value",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.BindAttributes.Format_value",
        "Documentation": {
          "Id": 7,
          "Args": [
            "@bind-value"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Format_value"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
      "Common.TypeNameIdentifier": "BindAttributes",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.Bind.ChangeAttribute": "onchange",
      "Components.Bind.Format": null,
      "Components.Bind.IsInvariantCulture": "True",
      "Components.Bind.TypeAttribute": "number",
      "Components.Bind.ValueAttribute": "value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 3958743182273472539,
      "Data2": -6978295896847258913,
      "Data3": -3085801997685565105,
      "Data4": 4415043789575746249
    },
    "Kind": "Components.Bind",
    "Name": "Bind",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
    "Documentation": {
      "Id": 3,
      "Args": [
        "value",
        "onchange"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 9,
            "Name": "type",
            "Value": "date",
            "DisplayName": "type"
          },
          {
            "Flags": 1,
            "Name": "@bind",
            "DisplayName": "@bind"
          }
        ]
      },
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 9,
            "Name": "type",
            "Value": "date",
            "DisplayName": "type"
          },
          {
            "Flags": 1,
            "Name": "@bind:get",
            "DisplayName": "@bind:get"
          },
          {
            "Flags": 1,
            "Name": "@bind:set",
            "DisplayName": "@bind:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Bind",
        "Name": "@bind",
        "TypeName": "System.Object",
        "DisplayName": "object Microsoft.AspNetCore.Components.Web.BindAttributes.Bind",
        "Documentation": {
          "Id": 3,
          "Args": [
            "value",
            "onchange"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.Bind",
            "Name": "format",
            "TypeName": "System.String",
            "DisplayName": ":format",
            "Documentation": {
              "Id": 7,
              "Args": [
                "@bind"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "event",
            "TypeName": "System.String",
            "DisplayName": ":event",
            "Documentation": {
              "Id": 6,
              "Args": [
                "@bind"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Event_value"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "culture",
            "TypeName": "System.Globalization.CultureInfo",
            "DisplayName": ":culture",
            "Documentation": {
              "Id": 5
            },
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "get",
            "TypeName": "System.Object",
            "DisplayName": ":get",
            "Documentation": {
              "Id": 8
            },
            "Metadata": {
              "Common.PropertyName": "Get",
              "Components.Bind.AlternativeNotation": "True"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "set",
            "TypeName": "System.Delegate",
            "DisplayName": ":set",
            "Documentation": {
              "Id": 9
            },
            "Metadata": {
              "Common.PropertyName": "Set"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "after",
            "TypeName": "System.Delegate",
            "DisplayName": ":after",
            "Documentation": {
              "Id": 4
            },
            "Metadata": {
              "Common.PropertyName": "After"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Bind"
        }
      },
      {
        "Kind": "Components.Bind",
        "Name": "format-value",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.BindAttributes.Format_value",
        "Documentation": {
          "Id": 7,
          "Args": [
            "@bind"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Format_value"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
      "Common.TypeNameIdentifier": "BindAttributes",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.Bind.ChangeAttribute": "onchange",
      "Components.Bind.Format": "yyyy-MM-dd",
      "Components.Bind.IsInvariantCulture": "True",
      "Components.Bind.TypeAttribute": "date",
      "Components.Bind.ValueAttribute": "value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 452115402445292070,
      "Data2": -3681481524794944742,
      "Data3": -9054022598855581619,
      "Data4": 2245145118615804875
    },
    "Kind": "Components.Bind",
    "Name": "Bind_value",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
    "Documentation": {
      "Id": 3,
      "Args": [
        "value",
        "onchange"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 9,
            "Name": "type",
            "Value": "date",
            "DisplayName": "type"
          },
          {
            "Flags": 1,
            "Name": "@bind-value",
            "DisplayName": "@bind-value"
          }
        ]
      },
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 9,
            "Name": "type",
            "Value": "date",
            "DisplayName": "type"
          },
          {
            "Flags": 1,
            "Name": "@bind-value:get",
            "DisplayName": "@bind-value:get"
          },
          {
            "Flags": 1,
            "Name": "@bind-value:set",
            "DisplayName": "@bind-value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Bind",
        "Name": "@bind-value",
        "TypeName": "System.Object",
        "DisplayName": "object Microsoft.AspNetCore.Components.Web.BindAttributes.Bind_value",
        "Documentation": {
          "Id": 3,
          "Args": [
            "value",
            "onchange"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.Bind",
            "Name": "format",
            "TypeName": "System.String",
            "DisplayName": ":format",
            "Documentation": {
              "Id": 7,
              "Args": [
                "@bind-value"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "event",
            "TypeName": "System.String",
            "DisplayName": ":event",
            "Documentation": {
              "Id": 6,
              "Args": [
                "@bind-value"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Event_value"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "culture",
            "TypeName": "System.Globalization.CultureInfo",
            "DisplayName": ":culture",
            "Documentation": {
              "Id": 5
            },
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "get",
            "TypeName": "System.Object",
            "DisplayName": ":get",
            "Documentation": {
              "Id": 8
            },
            "Metadata": {
              "Common.PropertyName": "Get",
              "Components.Bind.AlternativeNotation": "True"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "set",
            "TypeName": "System.Delegate",
            "DisplayName": ":set",
            "Documentation": {
              "Id": 9
            },
            "Metadata": {
              "Common.PropertyName": "Set"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "after",
            "TypeName": "System.Delegate",
            "DisplayName": ":after",
            "Documentation": {
              "Id": 4
            },
            "Metadata": {
              "Common.PropertyName": "After"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Bind_value"
        }
      },
      {
        "Kind": "Components.Bind",
        "Name": "format-value",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.BindAttributes.Format_value",
        "Documentation": {
          "Id": 7,
          "Args": [
            "@bind-value"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Format_value"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
      "Common.TypeNameIdentifier": "BindAttributes",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.Bind.ChangeAttribute": "onchange",
      "Components.Bind.Format": "yyyy-MM-dd",
      "Components.Bind.IsInvariantCulture": "True",
      "Components.Bind.TypeAttribute": "date",
      "Components.Bind.ValueAttribute": "value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -3624075944794236511,
      "Data2": 7324969985659844375,
      "Data3": -1723684801396393977,
      "Data4": 2339138764559275733
    },
    "Kind": "Components.Bind",
    "Name": "Bind",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
    "Documentation": {
      "Id": 3,
      "Args": [
        "value",
        "onchange"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 9,
            "Name": "type",
            "Value": "datetime-local",
            "DisplayName": "type"
          },
          {
            "Flags": 1,
            "Name": "@bind",
            "DisplayName": "@bind"
          }
        ]
      },
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 9,
            "Name": "type",
            "Value": "datetime-local",
            "DisplayName": "type"
          },
          {
            "Flags": 1,
            "Name": "@bind:get",
            "DisplayName": "@bind:get"
          },
          {
            "Flags": 1,
            "Name": "@bind:set",
            "DisplayName": "@bind:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Bind",
        "Name": "@bind",
        "TypeName": "System.Object",
        "DisplayName": "object Microsoft.AspNetCore.Components.Web.BindAttributes.Bind",
        "Documentation": {
          "Id": 3,
          "Args": [
            "value",
            "onchange"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.Bind",
            "Name": "format",
            "TypeName": "System.String",
            "DisplayName": ":format",
            "Documentation": {
              "Id": 7,
              "Args": [
                "@bind"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "event",
            "TypeName": "System.String",
            "DisplayName": ":event",
            "Documentation": {
              "Id": 6,
              "Args": [
                "@bind"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Event_value"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "culture",
            "TypeName": "System.Globalization.CultureInfo",
            "DisplayName": ":culture",
            "Documentation": {
              "Id": 5
            },
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "get",
            "TypeName": "System.Object",
            "DisplayName": ":get",
            "Documentation": {
              "Id": 8
            },
            "Metadata": {
              "Common.PropertyName": "Get",
              "Components.Bind.AlternativeNotation": "True"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "set",
            "TypeName": "System.Delegate",
            "DisplayName": ":set",
            "Documentation": {
              "Id": 9
            },
            "Metadata": {
              "Common.PropertyName": "Set"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "after",
            "TypeName": "System.Delegate",
            "DisplayName": ":after",
            "Documentation": {
              "Id": 4
            },
            "Metadata": {
              "Common.PropertyName": "After"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Bind"
        }
      },
      {
        "Kind": "Components.Bind",
        "Name": "format-value",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.BindAttributes.Format_value",
        "Documentation": {
          "Id": 7,
          "Args": [
            "@bind"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Format_value"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
      "Common.TypeNameIdentifier": "BindAttributes",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.Bind.ChangeAttribute": "onchange",
      "Components.Bind.Format": "yyyy-MM-ddTHH:mm:ss",
      "Components.Bind.IsInvariantCulture": "True",
      "Components.Bind.TypeAttribute": "datetime-local",
      "Components.Bind.ValueAttribute": "value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 4911690981722323634,
      "Data2": -6439288485775488661,
      "Data3": -8900883349693182644,
      "Data4": 1426241216410812471
    },
    "Kind": "Components.Bind",
    "Name": "Bind_value",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
    "Documentation": {
      "Id": 3,
      "Args": [
        "value",
        "onchange"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 9,
            "Name": "type",
            "Value": "datetime-local",
            "DisplayName": "type"
          },
          {
            "Flags": 1,
            "Name": "@bind-value",
            "DisplayName": "@bind-value"
          }
        ]
      },
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 9,
            "Name": "type",
            "Value": "datetime-local",
            "DisplayName": "type"
          },
          {
            "Flags": 1,
            "Name": "@bind-value:get",
            "DisplayName": "@bind-value:get"
          },
          {
            "Flags": 1,
            "Name": "@bind-value:set",
            "DisplayName": "@bind-value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Bind",
        "Name": "@bind-value",
        "TypeName": "System.Object",
        "DisplayName": "object Microsoft.AspNetCore.Components.Web.BindAttributes.Bind_value",
        "Documentation": {
          "Id": 3,
          "Args": [
            "value",
            "onchange"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.Bind",
            "Name": "format",
            "TypeName": "System.String",
            "DisplayName": ":format",
            "Documentation": {
              "Id": 7,
              "Args": [
                "@bind-value"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "event",
            "TypeName": "System.String",
            "DisplayName": ":event",
            "Documentation": {
              "Id": 6,
              "Args": [
                "@bind-value"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Event_value"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "culture",
            "TypeName": "System.Globalization.CultureInfo",
            "DisplayName": ":culture",
            "Documentation": {
              "Id": 5
            },
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "get",
            "TypeName": "System.Object",
            "DisplayName": ":get",
            "Documentation": {
              "Id": 8
            },
            "Metadata": {
              "Common.PropertyName": "Get",
              "Components.Bind.AlternativeNotation": "True"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "set",
            "TypeName": "System.Delegate",
            "DisplayName": ":set",
            "Documentation": {
              "Id": 9
            },
            "Metadata": {
              "Common.PropertyName": "Set"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "after",
            "TypeName": "System.Delegate",
            "DisplayName": ":after",
            "Documentation": {
              "Id": 4
            },
            "Metadata": {
              "Common.PropertyName": "After"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Bind_value"
        }
      },
      {
        "Kind": "Components.Bind",
        "Name": "format-value",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.BindAttributes.Format_value",
        "Documentation": {
          "Id": 7,
          "Args": [
            "@bind-value"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Format_value"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
      "Common.TypeNameIdentifier": "BindAttributes",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.Bind.ChangeAttribute": "onchange",
      "Components.Bind.Format": "yyyy-MM-ddTHH:mm:ss",
      "Components.Bind.IsInvariantCulture": "True",
      "Components.Bind.TypeAttribute": "datetime-local",
      "Components.Bind.ValueAttribute": "value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 2529163845876679191,
      "Data2": 6989928123320796186,
      "Data3": 105274632384725082,
      "Data4": 8893982591166546339
    },
    "Kind": "Components.Bind",
    "Name": "Bind",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
    "Documentation": {
      "Id": 3,
      "Args": [
        "value",
        "onchange"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 9,
            "Name": "type",
            "Value": "month",
            "DisplayName": "type"
          },
          {
            "Flags": 1,
            "Name": "@bind",
            "DisplayName": "@bind"
          }
        ]
      },
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 9,
            "Name": "type",
            "Value": "month",
            "DisplayName": "type"
          },
          {
            "Flags": 1,
            "Name": "@bind:get",
            "DisplayName": "@bind:get"
          },
          {
            "Flags": 1,
            "Name": "@bind:set",
            "DisplayName": "@bind:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Bind",
        "Name": "@bind",
        "TypeName": "System.Object",
        "DisplayName": "object Microsoft.AspNetCore.Components.Web.BindAttributes.Bind",
        "Documentation": {
          "Id": 3,
          "Args": [
            "value",
            "onchange"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.Bind",
            "Name": "format",
            "TypeName": "System.String",
            "DisplayName": ":format",
            "Documentation": {
              "Id": 7,
              "Args": [
                "@bind"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "event",
            "TypeName": "System.String",
            "DisplayName": ":event",
            "Documentation": {
              "Id": 6,
              "Args": [
                "@bind"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Event_value"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "culture",
            "TypeName": "System.Globalization.CultureInfo",
            "DisplayName": ":culture",
            "Documentation": {
              "Id": 5
            },
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "get",
            "TypeName": "System.Object",
            "DisplayName": ":get",
            "Documentation": {
              "Id": 8
            },
            "Metadata": {
              "Common.PropertyName": "Get",
              "Components.Bind.AlternativeNotation": "True"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "set",
            "TypeName": "System.Delegate",
            "DisplayName": ":set",
            "Documentation": {
              "Id": 9
            },
            "Metadata": {
              "Common.PropertyName": "Set"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "after",
            "TypeName": "System.Delegate",
            "DisplayName": ":after",
            "Documentation": {
              "Id": 4
            },
            "Metadata": {
              "Common.PropertyName": "After"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Bind"
        }
      },
      {
        "Kind": "Components.Bind",
        "Name": "format-value",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.BindAttributes.Format_value",
        "Documentation": {
          "Id": 7,
          "Args": [
            "@bind"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Format_value"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
      "Common.TypeNameIdentifier": "BindAttributes",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.Bind.ChangeAttribute": "onchange",
      "Components.Bind.Format": "yyyy-MM",
      "Components.Bind.IsInvariantCulture": "True",
      "Components.Bind.TypeAttribute": "month",
      "Components.Bind.ValueAttribute": "value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 808551849535610417,
      "Data2": 4576129702624463758,
      "Data3": -3769836476298783460,
      "Data4": -7412231842343230048
    },
    "Kind": "Components.Bind",
    "Name": "Bind_value",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
    "Documentation": {
      "Id": 3,
      "Args": [
        "value",
        "onchange"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 9,
            "Name": "type",
            "Value": "month",
            "DisplayName": "type"
          },
          {
            "Flags": 1,
            "Name": "@bind-value",
            "DisplayName": "@bind-value"
          }
        ]
      },
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 9,
            "Name": "type",
            "Value": "month",
            "DisplayName": "type"
          },
          {
            "Flags": 1,
            "Name": "@bind-value:get",
            "DisplayName": "@bind-value:get"
          },
          {
            "Flags": 1,
            "Name": "@bind-value:set",
            "DisplayName": "@bind-value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Bind",
        "Name": "@bind-value",
        "TypeName": "System.Object",
        "DisplayName": "object Microsoft.AspNetCore.Components.Web.BindAttributes.Bind_value",
        "Documentation": {
          "Id": 3,
          "Args": [
            "value",
            "onchange"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.Bind",
            "Name": "format",
            "TypeName": "System.String",
            "DisplayName": ":format",
            "Documentation": {
              "Id": 7,
              "Args": [
                "@bind-value"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "event",
            "TypeName": "System.String",
            "DisplayName": ":event",
            "Documentation": {
              "Id": 6,
              "Args": [
                "@bind-value"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Event_value"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "culture",
            "TypeName": "System.Globalization.CultureInfo",
            "DisplayName": ":culture",
            "Documentation": {
              "Id": 5
            },
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "get",
            "TypeName": "System.Object",
            "DisplayName": ":get",
            "Documentation": {
              "Id": 8
            },
            "Metadata": {
              "Common.PropertyName": "Get",
              "Components.Bind.AlternativeNotation": "True"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "set",
            "TypeName": "System.Delegate",
            "DisplayName": ":set",
            "Documentation": {
              "Id": 9
            },
            "Metadata": {
              "Common.PropertyName": "Set"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "after",
            "TypeName": "System.Delegate",
            "DisplayName": ":after",
            "Documentation": {
              "Id": 4
            },
            "Metadata": {
              "Common.PropertyName": "After"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Bind_value"
        }
      },
      {
        "Kind": "Components.Bind",
        "Name": "format-value",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.BindAttributes.Format_value",
        "Documentation": {
          "Id": 7,
          "Args": [
            "@bind-value"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Format_value"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
      "Common.TypeNameIdentifier": "BindAttributes",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.Bind.ChangeAttribute": "onchange",
      "Components.Bind.Format": "yyyy-MM",
      "Components.Bind.IsInvariantCulture": "True",
      "Components.Bind.TypeAttribute": "month",
      "Components.Bind.ValueAttribute": "value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 8903257323656539963,
      "Data2": -4935637336409434935,
      "Data3": -1504195529768744218,
      "Data4": -1845788673087820777
    },
    "Kind": "Components.Bind",
    "Name": "Bind",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
    "Documentation": {
      "Id": 3,
      "Args": [
        "value",
        "onchange"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 9,
            "Name": "type",
            "Value": "time",
            "DisplayName": "type"
          },
          {
            "Flags": 1,
            "Name": "@bind",
            "DisplayName": "@bind"
          }
        ]
      },
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 9,
            "Name": "type",
            "Value": "time",
            "DisplayName": "type"
          },
          {
            "Flags": 1,
            "Name": "@bind:get",
            "DisplayName": "@bind:get"
          },
          {
            "Flags": 1,
            "Name": "@bind:set",
            "DisplayName": "@bind:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Bind",
        "Name": "@bind",
        "TypeName": "System.Object",
        "DisplayName": "object Microsoft.AspNetCore.Components.Web.BindAttributes.Bind",
        "Documentation": {
          "Id": 3,
          "Args": [
            "value",
            "onchange"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.Bind",
            "Name": "format",
            "TypeName": "System.String",
            "DisplayName": ":format",
            "Documentation": {
              "Id": 7,
              "Args": [
                "@bind"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "event",
            "TypeName": "System.String",
            "DisplayName": ":event",
            "Documentation": {
              "Id": 6,
              "Args": [
                "@bind"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Event_value"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "culture",
            "TypeName": "System.Globalization.CultureInfo",
            "DisplayName": ":culture",
            "Documentation": {
              "Id": 5
            },
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "get",
            "TypeName": "System.Object",
            "DisplayName": ":get",
            "Documentation": {
              "Id": 8
            },
            "Metadata": {
              "Common.PropertyName": "Get",
              "Components.Bind.AlternativeNotation": "True"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "set",
            "TypeName": "System.Delegate",
            "DisplayName": ":set",
            "Documentation": {
              "Id": 9
            },
            "Metadata": {
              "Common.PropertyName": "Set"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "after",
            "TypeName": "System.Delegate",
            "DisplayName": ":after",
            "Documentation": {
              "Id": 4
            },
            "Metadata": {
              "Common.PropertyName": "After"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Bind"
        }
      },
      {
        "Kind": "Components.Bind",
        "Name": "format-value",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.BindAttributes.Format_value",
        "Documentation": {
          "Id": 7,
          "Args": [
            "@bind"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Format_value"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
      "Common.TypeNameIdentifier": "BindAttributes",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.Bind.ChangeAttribute": "onchange",
      "Components.Bind.Format": "HH:mm:ss",
      "Components.Bind.IsInvariantCulture": "True",
      "Components.Bind.TypeAttribute": "time",
      "Components.Bind.ValueAttribute": "value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -2146100910229730960,
      "Data2": -5661476343165608975,
      "Data3": -4048099322827368133,
      "Data4": -6035812573854712663
    },
    "Kind": "Components.Bind",
    "Name": "Bind_value",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
    "Documentation": {
      "Id": 3,
      "Args": [
        "value",
        "onchange"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 9,
            "Name": "type",
            "Value": "time",
            "DisplayName": "type"
          },
          {
            "Flags": 1,
            "Name": "@bind-value",
            "DisplayName": "@bind-value"
          }
        ]
      },
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 9,
            "Name": "type",
            "Value": "time",
            "DisplayName": "type"
          },
          {
            "Flags": 1,
            "Name": "@bind-value:get",
            "DisplayName": "@bind-value:get"
          },
          {
            "Flags": 1,
            "Name": "@bind-value:set",
            "DisplayName": "@bind-value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Bind",
        "Name": "@bind-value",
        "TypeName": "System.Object",
        "DisplayName": "object Microsoft.AspNetCore.Components.Web.BindAttributes.Bind_value",
        "Documentation": {
          "Id": 3,
          "Args": [
            "value",
            "onchange"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.Bind",
            "Name": "format",
            "TypeName": "System.String",
            "DisplayName": ":format",
            "Documentation": {
              "Id": 7,
              "Args": [
                "@bind-value"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "event",
            "TypeName": "System.String",
            "DisplayName": ":event",
            "Documentation": {
              "Id": 6,
              "Args": [
                "@bind-value"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Event_value"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "culture",
            "TypeName": "System.Globalization.CultureInfo",
            "DisplayName": ":culture",
            "Documentation": {
              "Id": 5
            },
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "get",
            "TypeName": "System.Object",
            "DisplayName": ":get",
            "Documentation": {
              "Id": 8
            },
            "Metadata": {
              "Common.PropertyName": "Get",
              "Components.Bind.AlternativeNotation": "True"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "set",
            "TypeName": "System.Delegate",
            "DisplayName": ":set",
            "Documentation": {
              "Id": 9
            },
            "Metadata": {
              "Common.PropertyName": "Set"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "after",
            "TypeName": "System.Delegate",
            "DisplayName": ":after",
            "Documentation": {
              "Id": 4
            },
            "Metadata": {
              "Common.PropertyName": "After"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Bind_value"
        }
      },
      {
        "Kind": "Components.Bind",
        "Name": "format-value",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.BindAttributes.Format_value",
        "Documentation": {
          "Id": 7,
          "Args": [
            "@bind-value"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Format_value"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
      "Common.TypeNameIdentifier": "BindAttributes",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.Bind.ChangeAttribute": "onchange",
      "Components.Bind.Format": "HH:mm:ss",
      "Components.Bind.IsInvariantCulture": "True",
      "Components.Bind.TypeAttribute": "time",
      "Components.Bind.ValueAttribute": "value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -5205009472278280818,
      "Data2": -5291523271395867327,
      "Data3": -1136660344342316101,
      "Data4": 6177562201681005058
    },
    "Kind": "Components.Bind",
    "Name": "Bind",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
    "Documentation": {
      "Id": 3,
      "Args": [
        "value",
        "onchange"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "select",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind",
            "DisplayName": "@bind"
          }
        ]
      },
      {
        "TagName": "select",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind:get",
            "DisplayName": "@bind:get"
          },
          {
            "Flags": 1,
            "Name": "@bind:set",
            "DisplayName": "@bind:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Bind",
        "Name": "@bind",
        "TypeName": "System.Object",
        "DisplayName": "object Microsoft.AspNetCore.Components.Web.BindAttributes.Bind",
        "Documentation": {
          "Id": 3,
          "Args": [
            "value",
            "onchange"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.Bind",
            "Name": "format",
            "TypeName": "System.String",
            "DisplayName": ":format",
            "Documentation": {
              "Id": 7,
              "Args": [
                "@bind"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "event",
            "TypeName": "System.String",
            "DisplayName": ":event",
            "Documentation": {
              "Id": 6,
              "Args": [
                "@bind"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Event_value"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "culture",
            "TypeName": "System.Globalization.CultureInfo",
            "DisplayName": ":culture",
            "Documentation": {
              "Id": 5
            },
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "get",
            "TypeName": "System.Object",
            "DisplayName": ":get",
            "Documentation": {
              "Id": 8
            },
            "Metadata": {
              "Common.PropertyName": "Get",
              "Components.Bind.AlternativeNotation": "True"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "set",
            "TypeName": "System.Delegate",
            "DisplayName": ":set",
            "Documentation": {
              "Id": 9
            },
            "Metadata": {
              "Common.PropertyName": "Set"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "after",
            "TypeName": "System.Delegate",
            "DisplayName": ":after",
            "Documentation": {
              "Id": 4
            },
            "Metadata": {
              "Common.PropertyName": "After"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Bind"
        }
      },
      {
        "Kind": "Components.Bind",
        "Name": "format-value",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.BindAttributes.Format_value",
        "Documentation": {
          "Id": 7,
          "Args": [
            "@bind"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Format_value"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
      "Common.TypeNameIdentifier": "BindAttributes",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.Bind.ChangeAttribute": "onchange",
      "Components.Bind.Format": null,
      "Components.Bind.IsInvariantCulture": "False",
      "Components.Bind.ValueAttribute": "value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 8831486479168082724,
      "Data2": 64916773228583694,
      "Data3": -1642589348396880710,
      "Data4": -5775407846311155239
    },
    "Kind": "Components.Bind",
    "Name": "Bind",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
    "Documentation": {
      "Id": 3,
      "Args": [
        "value",
        "onchange"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "textarea",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind",
            "DisplayName": "@bind"
          }
        ]
      },
      {
        "TagName": "textarea",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind:get",
            "DisplayName": "@bind:get"
          },
          {
            "Flags": 1,
            "Name": "@bind:set",
            "DisplayName": "@bind:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Bind",
        "Name": "@bind",
        "TypeName": "System.Object",
        "DisplayName": "object Microsoft.AspNetCore.Components.Web.BindAttributes.Bind",
        "Documentation": {
          "Id": 3,
          "Args": [
            "value",
            "onchange"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.Bind",
            "Name": "format",
            "TypeName": "System.String",
            "DisplayName": ":format",
            "Documentation": {
              "Id": 7,
              "Args": [
                "@bind"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "event",
            "TypeName": "System.String",
            "DisplayName": ":event",
            "Documentation": {
              "Id": 6,
              "Args": [
                "@bind"
              ]
            },
            "Metadata": {
              "Common.PropertyName": "Event_value"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "culture",
            "TypeName": "System.Globalization.CultureInfo",
            "DisplayName": ":culture",
            "Documentation": {
              "Id": 5
            },
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "get",
            "TypeName": "System.Object",
            "DisplayName": ":get",
            "Documentation": {
              "Id": 8
            },
            "Metadata": {
              "Common.PropertyName": "Get",
              "Components.Bind.AlternativeNotation": "True"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "set",
            "TypeName": "System.Delegate",
            "DisplayName": ":set",
            "Documentation": {
              "Id": 9
            },
            "Metadata": {
              "Common.PropertyName": "Set"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "after",
            "TypeName": "System.Delegate",
            "DisplayName": ":after",
            "Documentation": {
              "Id": 4
            },
            "Metadata": {
              "Common.PropertyName": "After"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Bind"
        }
      },
      {
        "Kind": "Components.Bind",
        "Name": "format-value",
        "TypeName": "System.String",
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.BindAttributes.Format_value",
        "Documentation": {
          "Id": 7,
          "Args": [
            "@bind"
          ]
        },
        "Metadata": {
          "Common.PropertyName": "Format_value"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
      "Common.TypeNameIdentifier": "BindAttributes",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.Bind.ChangeAttribute": "onchange",
      "Components.Bind.Format": null,
      "Components.Bind.IsInvariantCulture": "False",
      "Components.Bind.ValueAttribute": "value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -416006830058448950,
      "Data2": -6826059727419394030,
      "Data3": 5326657100313968639,
      "Data4": -2596130403113172801
    },
    "Kind": "Components.Bind",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
    "Documentation": {
      "Id": 10,
      "Args": [
        "Value",
        "ValueChanged"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "InputCheckbox",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind-Value",
            "DisplayName": "@bind-Value"
          }
        ]
      },
      {
        "TagName": "InputCheckbox",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind-Value:get",
            "DisplayName": "@bind-Value:get"
          },
          {
            "Flags": 1,
            "Name": "@bind-Value:set",
            "DisplayName": "@bind-Value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Bind",
        "Name": "@bind-Value",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean> Microsoft.AspNetCore.Components.Forms.InputCheckbox.Value",
        "Documentation": {
          "Id": 10,
          "Args": [
            "Value",
            "ValueChanged"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.Bind",
            "Name": "get",
            "TypeName": "System.Object",
            "DisplayName": ":get",
            "Documentation": {
              "Id": 8
            },
            "Metadata": {
              "Common.PropertyName": "Get",
              "Components.Bind.AlternativeNotation": "True"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "set",
            "TypeName": "System.Delegate",
            "DisplayName": ":set",
            "Documentation": {
              "Id": 9
            },
            "Metadata": {
              "Common.PropertyName": "Set"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "after",
            "TypeName": "System.Delegate",
            "DisplayName": ":after",
            "Documentation": {
              "Id": 4
            },
            "Metadata": {
              "Common.PropertyName": "After"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Value"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
      "Common.TypeNameIdentifier": "InputCheckbox",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.Bind.ChangeAttribute": "ValueChanged",
      "Components.Bind.ExpressionAttribute": "ValueExpression",
      "Components.Bind.ValueAttribute": "Value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 6005530595124440396,
      "Data2": 9206569109550953394,
      "Data3": -7404867392568879028,
      "Data4": -1423551962281829884
    },
    "Kind": "Components.Bind",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
    "Documentation": {
      "Id": 10,
      "Args": [
        "Value",
        "ValueChanged"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind-Value",
            "DisplayName": "@bind-Value"
          }
        ]
      },
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind-Value:get",
            "DisplayName": "@bind-Value:get"
          },
          {
            "Flags": 1,
            "Name": "@bind-Value:set",
            "DisplayName": "@bind-Value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Bind",
        "Name": "@bind-Value",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean> Microsoft.AspNetCore.Components.Forms.InputCheckbox.Value",
        "Documentation": {
          "Id": 10,
          "Args": [
            "Value",
            "ValueChanged"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.Bind",
            "Name": "get",
            "TypeName": "System.Object",
            "DisplayName": ":get",
            "Documentation": {
              "Id": 8
            },
            "Metadata": {
              "Common.PropertyName": "Get",
              "Components.Bind.AlternativeNotation": "True"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "set",
            "TypeName": "System.Delegate",
            "DisplayName": ":set",
            "Documentation": {
              "Id": 9
            },
            "Metadata": {
              "Common.PropertyName": "Set"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "after",
            "TypeName": "System.Delegate",
            "DisplayName": ":after",
            "Documentation": {
              "Id": 4
            },
            "Metadata": {
              "Common.PropertyName": "After"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Value"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
      "Common.TypeNameIdentifier": "InputCheckbox",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.Bind.ChangeAttribute": "ValueChanged",
      "Components.Bind.ExpressionAttribute": "ValueExpression",
      "Components.Bind.ValueAttribute": "Value",
      "Components.IsSpecialKind": "Components.Bind",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 393892468999557652,
      "Data2": 3268972117341441031,
      "Data3": 1093294599531252830,
      "Data4": 6961336075935104236
    },
    "Kind": "Components.Bind",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
    "Documentation": {
      "Id": 10,
      "Args": [
        "Value",
        "ValueChanged"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "InputDate",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind-Value",
            "DisplayName": "@bind-Value"
          }
        ]
      },
      {
        "TagName": "InputDate",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind-Value:get",
            "DisplayName": "@bind-Value:get"
          },
          {
            "Flags": 1,
            "Name": "@bind-Value:set",
            "DisplayName": "@bind-Value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Bind",
        "Name": "@bind-Value",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<TValue> Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.Value",
        "Documentation": {
          "Id": 10,
          "Args": [
            "Value",
            "ValueChanged"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.Bind",
            "Name": "get",
            "TypeName": "System.Object",
            "DisplayName": ":get",
            "Documentation": {
              "Id": 8
            },
            "Metadata": {
              "Common.PropertyName": "Get",
              "Components.Bind.AlternativeNotation": "True"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "set",
            "TypeName": "System.Delegate",
            "DisplayName": ":set",
            "Documentation": {
              "Id": 9
            },
            "Metadata": {
              "Common.PropertyName": "Set"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "after",
            "TypeName": "System.Delegate",
            "DisplayName": ":after",
            "Documentation": {
              "Id": 4
            },
            "Metadata": {
              "Common.PropertyName": "After"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Value"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
      "Common.TypeNameIdentifier": "InputDate",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.Bind.ChangeAttribute": "ValueChanged",
      "Components.Bind.ExpressionAttribute": "ValueExpression",
      "Components.Bind.ValueAttribute": "Value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 5725457605015371614,
      "Data2": -8287796725537942464,
      "Data3": 3615570504897810973,
      "Data4": -7925553164624925798
    },
    "Kind": "Components.Bind",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
    "Documentation": {
      "Id": 10,
      "Args": [
        "Value",
        "ValueChanged"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputDate",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind-Value",
            "DisplayName": "@bind-Value"
          }
        ]
      },
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputDate",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind-Value:get",
            "DisplayName": "@bind-Value:get"
          },
          {
            "Flags": 1,
            "Name": "@bind-Value:set",
            "DisplayName": "@bind-Value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Bind",
        "Name": "@bind-Value",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<TValue> Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.Value",
        "Documentation": {
          "Id": 10,
          "Args": [
            "Value",
            "ValueChanged"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.Bind",
            "Name": "get",
            "TypeName": "System.Object",
            "DisplayName": ":get",
            "Documentation": {
              "Id": 8
            },
            "Metadata": {
              "Common.PropertyName": "Get",
              "Components.Bind.AlternativeNotation": "True"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "set",
            "TypeName": "System.Delegate",
            "DisplayName": ":set",
            "Documentation": {
              "Id": 9
            },
            "Metadata": {
              "Common.PropertyName": "Set"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "after",
            "TypeName": "System.Delegate",
            "DisplayName": ":after",
            "Documentation": {
              "Id": 4
            },
            "Metadata": {
              "Common.PropertyName": "After"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Value"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
      "Common.TypeNameIdentifier": "InputDate",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.Bind.ChangeAttribute": "ValueChanged",
      "Components.Bind.ExpressionAttribute": "ValueExpression",
      "Components.Bind.ValueAttribute": "Value",
      "Components.IsSpecialKind": "Components.Bind",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 1819842778407330082,
      "Data2": 7124970359805865068,
      "Data3": -2328866628622718043,
      "Data4": 1893182961970087611
    },
    "Kind": "Components.Bind",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
    "Documentation": {
      "Id": 10,
      "Args": [
        "Value",
        "ValueChanged"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "InputNumber",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind-Value",
            "DisplayName": "@bind-Value"
          }
        ]
      },
      {
        "TagName": "InputNumber",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind-Value:get",
            "DisplayName": "@bind-Value:get"
          },
          {
            "Flags": 1,
            "Name": "@bind-Value:set",
            "DisplayName": "@bind-Value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Bind",
        "Name": "@bind-Value",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<TValue> Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>.Value",
        "Documentation": {
          "Id": 10,
          "Args": [
            "Value",
            "ValueChanged"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.Bind",
            "Name": "get",
            "TypeName": "System.Object",
            "DisplayName": ":get",
            "Documentation": {
              "Id": 8
            },
            "Metadata": {
              "Common.PropertyName": "Get",
              "Components.Bind.AlternativeNotation": "True"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "set",
            "TypeName": "System.Delegate",
            "DisplayName": ":set",
            "Documentation": {
              "Id": 9
            },
            "Metadata": {
              "Common.PropertyName": "Set"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "after",
            "TypeName": "System.Delegate",
            "DisplayName": ":after",
            "Documentation": {
              "Id": 4
            },
            "Metadata": {
              "Common.PropertyName": "After"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Value"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
      "Common.TypeNameIdentifier": "InputNumber",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.Bind.ChangeAttribute": "ValueChanged",
      "Components.Bind.ExpressionAttribute": "ValueExpression",
      "Components.Bind.ValueAttribute": "Value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -5902741184742843175,
      "Data2": -3093788657370930218,
      "Data3": -6629242519973375527,
      "Data4": 7182716869798846948
    },
    "Kind": "Components.Bind",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
    "Documentation": {
      "Id": 10,
      "Args": [
        "Value",
        "ValueChanged"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputNumber",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind-Value",
            "DisplayName": "@bind-Value"
          }
        ]
      },
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputNumber",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind-Value:get",
            "DisplayName": "@bind-Value:get"
          },
          {
            "Flags": 1,
            "Name": "@bind-Value:set",
            "DisplayName": "@bind-Value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Bind",
        "Name": "@bind-Value",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<TValue> Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>.Value",
        "Documentation": {
          "Id": 10,
          "Args": [
            "Value",
            "ValueChanged"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.Bind",
            "Name": "get",
            "TypeName": "System.Object",
            "DisplayName": ":get",
            "Documentation": {
              "Id": 8
            },
            "Metadata": {
              "Common.PropertyName": "Get",
              "Components.Bind.AlternativeNotation": "True"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "set",
            "TypeName": "System.Delegate",
            "DisplayName": ":set",
            "Documentation": {
              "Id": 9
            },
            "Metadata": {
              "Common.PropertyName": "Set"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "after",
            "TypeName": "System.Delegate",
            "DisplayName": ":after",
            "Documentation": {
              "Id": 4
            },
            "Metadata": {
              "Common.PropertyName": "After"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Value"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
      "Common.TypeNameIdentifier": "InputNumber",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.Bind.ChangeAttribute": "ValueChanged",
      "Components.Bind.ExpressionAttribute": "ValueExpression",
      "Components.Bind.ValueAttribute": "Value",
      "Components.IsSpecialKind": "Components.Bind",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 2219822495308910668,
      "Data2": 5091322411801311302,
      "Data3": 4780533062256638468,
      "Data4": -1088636869854187112
    },
    "Kind": "Components.Bind",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
    "Documentation": {
      "Id": 10,
      "Args": [
        "Value",
        "ValueChanged"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "InputRadioGroup",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind-Value",
            "DisplayName": "@bind-Value"
          }
        ]
      },
      {
        "TagName": "InputRadioGroup",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind-Value:get",
            "DisplayName": "@bind-Value:get"
          },
          {
            "Flags": 1,
            "Name": "@bind-Value:set",
            "DisplayName": "@bind-Value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Bind",
        "Name": "@bind-Value",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<TValue> Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.Value",
        "Documentation": {
          "Id": 10,
          "Args": [
            "Value",
            "ValueChanged"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.Bind",
            "Name": "get",
            "TypeName": "System.Object",
            "DisplayName": ":get",
            "Documentation": {
              "Id": 8
            },
            "Metadata": {
              "Common.PropertyName": "Get",
              "Components.Bind.AlternativeNotation": "True"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "set",
            "TypeName": "System.Delegate",
            "DisplayName": ":set",
            "Documentation": {
              "Id": 9
            },
            "Metadata": {
              "Common.PropertyName": "Set"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "after",
            "TypeName": "System.Delegate",
            "DisplayName": ":after",
            "Documentation": {
              "Id": 4
            },
            "Metadata": {
              "Common.PropertyName": "After"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Value"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
      "Common.TypeNameIdentifier": "InputRadioGroup",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.Bind.ChangeAttribute": "ValueChanged",
      "Components.Bind.ExpressionAttribute": "ValueExpression",
      "Components.Bind.ValueAttribute": "Value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 3796736928870982728,
      "Data2": -7486736366264069599,
      "Data3": -6406448520395513239,
      "Data4": 2925293781328599947
    },
    "Kind": "Components.Bind",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
    "Documentation": {
      "Id": 10,
      "Args": [
        "Value",
        "ValueChanged"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind-Value",
            "DisplayName": "@bind-Value"
          }
        ]
      },
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind-Value:get",
            "DisplayName": "@bind-Value:get"
          },
          {
            "Flags": 1,
            "Name": "@bind-Value:set",
            "DisplayName": "@bind-Value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Bind",
        "Name": "@bind-Value",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<TValue> Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.Value",
        "Documentation": {
          "Id": 10,
          "Args": [
            "Value",
            "ValueChanged"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.Bind",
            "Name": "get",
            "TypeName": "System.Object",
            "DisplayName": ":get",
            "Documentation": {
              "Id": 8
            },
            "Metadata": {
              "Common.PropertyName": "Get",
              "Components.Bind.AlternativeNotation": "True"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "set",
            "TypeName": "System.Delegate",
            "DisplayName": ":set",
            "Documentation": {
              "Id": 9
            },
            "Metadata": {
              "Common.PropertyName": "Set"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "after",
            "TypeName": "System.Delegate",
            "DisplayName": ":after",
            "Documentation": {
              "Id": 4
            },
            "Metadata": {
              "Common.PropertyName": "After"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Value"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
      "Common.TypeNameIdentifier": "InputRadioGroup",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.Bind.ChangeAttribute": "ValueChanged",
      "Components.Bind.ExpressionAttribute": "ValueExpression",
      "Components.Bind.ValueAttribute": "Value",
      "Components.IsSpecialKind": "Components.Bind",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 7065579783906365433,
      "Data2": 2002400409543742861,
      "Data3": -5449509508417600678,
      "Data4": -6346377067481390691
    },
    "Kind": "Components.Bind",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
    "Documentation": {
      "Id": 10,
      "Args": [
        "Value",
        "ValueChanged"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "InputSelect",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind-Value",
            "DisplayName": "@bind-Value"
          }
        ]
      },
      {
        "TagName": "InputSelect",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind-Value:get",
            "DisplayName": "@bind-Value:get"
          },
          {
            "Flags": 1,
            "Name": "@bind-Value:set",
            "DisplayName": "@bind-Value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Bind",
        "Name": "@bind-Value",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<TValue> Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.Value",
        "Documentation": {
          "Id": 10,
          "Args": [
            "Value",
            "ValueChanged"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.Bind",
            "Name": "get",
            "TypeName": "System.Object",
            "DisplayName": ":get",
            "Documentation": {
              "Id": 8
            },
            "Metadata": {
              "Common.PropertyName": "Get",
              "Components.Bind.AlternativeNotation": "True"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "set",
            "TypeName": "System.Delegate",
            "DisplayName": ":set",
            "Documentation": {
              "Id": 9
            },
            "Metadata": {
              "Common.PropertyName": "Set"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "after",
            "TypeName": "System.Delegate",
            "DisplayName": ":after",
            "Documentation": {
              "Id": 4
            },
            "Metadata": {
              "Common.PropertyName": "After"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Value"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
      "Common.TypeNameIdentifier": "InputSelect",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.Bind.ChangeAttribute": "ValueChanged",
      "Components.Bind.ExpressionAttribute": "ValueExpression",
      "Components.Bind.ValueAttribute": "Value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -5669314815511826653,
      "Data2": 3787601379610951402,
      "Data3": 4163109217712178448,
      "Data4": 5575262612985148474
    },
    "Kind": "Components.Bind",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
    "Documentation": {
      "Id": 10,
      "Args": [
        "Value",
        "ValueChanged"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputSelect",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind-Value",
            "DisplayName": "@bind-Value"
          }
        ]
      },
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputSelect",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind-Value:get",
            "DisplayName": "@bind-Value:get"
          },
          {
            "Flags": 1,
            "Name": "@bind-Value:set",
            "DisplayName": "@bind-Value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Bind",
        "Name": "@bind-Value",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<TValue> Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.Value",
        "Documentation": {
          "Id": 10,
          "Args": [
            "Value",
            "ValueChanged"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.Bind",
            "Name": "get",
            "TypeName": "System.Object",
            "DisplayName": ":get",
            "Documentation": {
              "Id": 8
            },
            "Metadata": {
              "Common.PropertyName": "Get",
              "Components.Bind.AlternativeNotation": "True"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "set",
            "TypeName": "System.Delegate",
            "DisplayName": ":set",
            "Documentation": {
              "Id": 9
            },
            "Metadata": {
              "Common.PropertyName": "Set"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "after",
            "TypeName": "System.Delegate",
            "DisplayName": ":after",
            "Documentation": {
              "Id": 4
            },
            "Metadata": {
              "Common.PropertyName": "After"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Value"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
      "Common.TypeNameIdentifier": "InputSelect",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.Bind.ChangeAttribute": "ValueChanged",
      "Components.Bind.ExpressionAttribute": "ValueExpression",
      "Components.Bind.ValueAttribute": "Value",
      "Components.IsSpecialKind": "Components.Bind",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 6193832934092350762,
      "Data2": -1345476272301527134,
      "Data3": 6354800621480548890,
      "Data4": 2030208386316970870
    },
    "Kind": "Components.Bind",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputText",
    "Documentation": {
      "Id": 10,
      "Args": [
        "Value",
        "ValueChanged"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "InputText",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind-Value",
            "DisplayName": "@bind-Value"
          }
        ]
      },
      {
        "TagName": "InputText",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind-Value:get",
            "DisplayName": "@bind-Value:get"
          },
          {
            "Flags": 1,
            "Name": "@bind-Value:set",
            "DisplayName": "@bind-Value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Bind",
        "Name": "@bind-Value",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.String> Microsoft.AspNetCore.Components.Forms.InputText.Value",
        "Documentation": {
          "Id": 10,
          "Args": [
            "Value",
            "ValueChanged"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.Bind",
            "Name": "get",
            "TypeName": "System.Object",
            "DisplayName": ":get",
            "Documentation": {
              "Id": 8
            },
            "Metadata": {
              "Common.PropertyName": "Get",
              "Components.Bind.AlternativeNotation": "True"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "set",
            "TypeName": "System.Delegate",
            "DisplayName": ":set",
            "Documentation": {
              "Id": 9
            },
            "Metadata": {
              "Common.PropertyName": "Set"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "after",
            "TypeName": "System.Delegate",
            "DisplayName": ":after",
            "Documentation": {
              "Id": 4
            },
            "Metadata": {
              "Common.PropertyName": "After"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Value"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText",
      "Common.TypeNameIdentifier": "InputText",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.Bind.ChangeAttribute": "ValueChanged",
      "Components.Bind.ExpressionAttribute": "ValueExpression",
      "Components.Bind.ValueAttribute": "Value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -3369339489391109393,
      "Data2": 9054342734502545831,
      "Data3": -6809320493575401306,
      "Data4": -2884351549170289927
    },
    "Kind": "Components.Bind",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputText",
    "Documentation": {
      "Id": 10,
      "Args": [
        "Value",
        "ValueChanged"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputText",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind-Value",
            "DisplayName": "@bind-Value"
          }
        ]
      },
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputText",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind-Value:get",
            "DisplayName": "@bind-Value:get"
          },
          {
            "Flags": 1,
            "Name": "@bind-Value:set",
            "DisplayName": "@bind-Value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Bind",
        "Name": "@bind-Value",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.String> Microsoft.AspNetCore.Components.Forms.InputText.Value",
        "Documentation": {
          "Id": 10,
          "Args": [
            "Value",
            "ValueChanged"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.Bind",
            "Name": "get",
            "TypeName": "System.Object",
            "DisplayName": ":get",
            "Documentation": {
              "Id": 8
            },
            "Metadata": {
              "Common.PropertyName": "Get",
              "Components.Bind.AlternativeNotation": "True"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "set",
            "TypeName": "System.Delegate",
            "DisplayName": ":set",
            "Documentation": {
              "Id": 9
            },
            "Metadata": {
              "Common.PropertyName": "Set"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "after",
            "TypeName": "System.Delegate",
            "DisplayName": ":after",
            "Documentation": {
              "Id": 4
            },
            "Metadata": {
              "Common.PropertyName": "After"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Value"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText",
      "Common.TypeNameIdentifier": "InputText",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.Bind.ChangeAttribute": "ValueChanged",
      "Components.Bind.ExpressionAttribute": "ValueExpression",
      "Components.Bind.ValueAttribute": "Value",
      "Components.IsSpecialKind": "Components.Bind",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -6275792714260883076,
      "Data2": 5412080195828666170,
      "Data3": 683513930235150345,
      "Data4": -1159806481807684497
    },
    "Kind": "Components.Bind",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
    "Documentation": {
      "Id": 10,
      "Args": [
        "Value",
        "ValueChanged"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "InputTextArea",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind-Value",
            "DisplayName": "@bind-Value"
          }
        ]
      },
      {
        "TagName": "InputTextArea",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind-Value:get",
            "DisplayName": "@bind-Value:get"
          },
          {
            "Flags": 1,
            "Name": "@bind-Value:set",
            "DisplayName": "@bind-Value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Bind",
        "Name": "@bind-Value",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.String> Microsoft.AspNetCore.Components.Forms.InputTextArea.Value",
        "Documentation": {
          "Id": 10,
          "Args": [
            "Value",
            "ValueChanged"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.Bind",
            "Name": "get",
            "TypeName": "System.Object",
            "DisplayName": ":get",
            "Documentation": {
              "Id": 8
            },
            "Metadata": {
              "Common.PropertyName": "Get",
              "Components.Bind.AlternativeNotation": "True"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "set",
            "TypeName": "System.Delegate",
            "DisplayName": ":set",
            "Documentation": {
              "Id": 9
            },
            "Metadata": {
              "Common.PropertyName": "Set"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "after",
            "TypeName": "System.Delegate",
            "DisplayName": ":after",
            "Documentation": {
              "Id": 4
            },
            "Metadata": {
              "Common.PropertyName": "After"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Value"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
      "Common.TypeNameIdentifier": "InputTextArea",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.Bind.ChangeAttribute": "ValueChanged",
      "Components.Bind.ExpressionAttribute": "ValueExpression",
      "Components.Bind.ValueAttribute": "Value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 419061183855276691,
      "Data2": -5151890679042992100,
      "Data3": -5755736003136169259,
      "Data4": -1166489364824234483
    },
    "Kind": "Components.Bind",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
    "Documentation": {
      "Id": 10,
      "Args": [
        "Value",
        "ValueChanged"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind-Value",
            "DisplayName": "@bind-Value"
          }
        ]
      },
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@bind-Value:get",
            "DisplayName": "@bind-Value:get"
          },
          {
            "Flags": 1,
            "Name": "@bind-Value:set",
            "DisplayName": "@bind-Value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Bind",
        "Name": "@bind-Value",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.String> Microsoft.AspNetCore.Components.Forms.InputTextArea.Value",
        "Documentation": {
          "Id": 10,
          "Args": [
            "Value",
            "ValueChanged"
          ]
        },
        "BoundAttributeParameters": [
          {
            "Kind": "Components.Bind",
            "Name": "get",
            "TypeName": "System.Object",
            "DisplayName": ":get",
            "Documentation": {
              "Id": 8
            },
            "Metadata": {
              "Common.PropertyName": "Get",
              "Components.Bind.AlternativeNotation": "True"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "set",
            "TypeName": "System.Delegate",
            "DisplayName": ":set",
            "Documentation": {
              "Id": 9
            },
            "Metadata": {
              "Common.PropertyName": "Set"
            }
          },
          {
            "Kind": "Components.Bind",
            "Name": "after",
            "TypeName": "System.Delegate",
            "DisplayName": ":after",
            "Documentation": {
              "Id": 4
            },
            "Metadata": {
              "Common.PropertyName": "After"
            }
          }
        ],
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Value"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
      "Common.TypeNameIdentifier": "InputTextArea",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.Bind.ChangeAttribute": "ValueChanged",
      "Components.Bind.ExpressionAttribute": "ValueExpression",
      "Components.Bind.ValueAttribute": "Value",
      "Components.IsSpecialKind": "Components.Bind",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 4374856459973568521,
      "Data2": 6721479984674190523,
      "Data3": -8786005435457156913,
      "Data4": -6997599535437158836
    },
    "Kind": "Components.Ref",
    "Name": "Ref",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Ref",
    "Documentation": {
      "Id": 18
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@ref",
            "DisplayName": "@ref"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Ref",
        "Name": "@ref",
        "TypeName": "System.Object",
        "DisplayName": "object Microsoft.AspNetCore.Components.Ref.Ref",
        "Documentation": {
          "Id": 18
        },
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Ref"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Ref",
      "Components.IsSpecialKind": "Components.Ref",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 7876741063292852384,
      "Data2": 4375867096313167029,
      "Data3": -1207228447385728777,
      "Data4": -1936570841972946840
    },
    "Kind": "Components.Key",
    "Name": "Key",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Key",
    "Documentation": {
      "Id": 17
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "@key",
            "DisplayName": "@key"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Kind": "Components.Key",
        "Name": "@key",
        "TypeName": "System.Object",
        "DisplayName": "object Microsoft.AspNetCore.Components.Key.Key",
        "Documentation": {
          "Id": 17
        },
        "Metadata": {
          "Common.DirectiveAttribute": "True",
          "Common.PropertyName": "Key"
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Key",
      "Components.IsSpecialKind": "Components.Key",
      "Runtime.Name": "Components.None"
    }
  }
]