[
  {
    "__Checksum": {
      "Data1": 8099987249904946857,
      "Data2": -8455533693404036248,
      "Data3": -9143123666759131660,
      "Data4": 7001701330765099020
    },
    "Kind": "Components.Component",
    "Name": "BlazorApp1.Pages.Counter",
    "AssemblyName": "BlazorApp1",
    "DisplayName": "BlazorApp1.Pages.Counter",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Counter"
      }
    ],
    "Metadata": {
      "Common.TypeName": "BlazorApp1.Pages.Counter",
      "Common.TypeNameIdentifier": "Counter",
      "Common.TypeNamespace": "BlazorApp1.Pages",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -6431048106179485060,
      "Data2": 6034356476215413475,
      "Data3": 6056821599582187012,
      "Data4": -6227980005008123026
    },
    "Kind": "Components.Component",
    "Name": "BlazorApp1.Pages.Counter",
    "AssemblyName": "BlazorApp1",
    "DisplayName": "BlazorApp1.Pages.Counter",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "BlazorApp1.Pages.Counter"
      }
    ],
    "Metadata": {
      "Common.TypeName": "BlazorApp1.Pages.Counter",
      "Common.TypeNameIdentifier": "Counter",
      "Common.TypeNamespace": "BlazorApp1.Pages",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -1260964179281582416,
      "Data2": 7768153791067450803,
      "Data3": -3578266114496708942,
      "Data4": -6358080472068583328
    },
    "Kind": "Components.Component",
    "Name": "BlazorApp1.Shared.MainLayout",
    "AssemblyName": "BlazorApp1",
    "DisplayName": "BlazorApp1.Shared.MainLayout",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "MainLayout"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "Body",
        "PropertyName": "Body",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment BlazorApp1.Shared.MainLayout.Body",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\r\n            <summary>\r\n            Gets the content to be rendered inside the layout.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Components.ChildContent": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "BlazorApp1.Shared.MainLayout",
      "Common.TypeNameIdentifier": "MainLayout",
      "Common.TypeNamespace": "BlazorApp1.Shared",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 6190952465077142493,
      "Data2": -1246518435532941228,
      "Data3": 2039887230423979630,
      "Data4": -6915669648387823510
    },
    "Kind": "Components.Component",
    "Name": "BlazorApp1.Shared.MainLayout",
    "AssemblyName": "BlazorApp1",
    "DisplayName": "BlazorApp1.Shared.MainLayout",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "BlazorApp1.Shared.MainLayout"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "Body",
        "PropertyName": "Body",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment BlazorApp1.Shared.MainLayout.Body",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\r\n            <summary>\r\n            Gets the content to be rendered inside the layout.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Components.ChildContent": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "BlazorApp1.Shared.MainLayout",
      "Common.TypeNameIdentifier": "MainLayout",
      "Common.TypeNamespace": "BlazorApp1.Shared",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -2704074268753013286,
      "Data2": 6803723210932791415,
      "Data3": 1190702192242668759,
      "Data4": 4391723216510114242
    },
    "Kind": "Components.ChildContent",
    "Name": "BlazorApp1.Shared.MainLayout.Body",
    "AssemblyName": "BlazorApp1",
    "DisplayName": "BlazorApp1.Shared.MainLayout.Body",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\r\n            <summary>\r\n            Gets the content to be rendered inside the layout.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Body",
        "ParentTag": "MainLayout"
      }
    ],
    "Metadata": {
      "Common.TypeName": "BlazorApp1.Shared.MainLayout.Body",
      "Common.TypeNameIdentifier": "MainLayout",
      "Common.TypeNamespace": "BlazorApp1.Shared",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -3896965275996991702,
      "Data2": -8686782627035636932,
      "Data3": -8556178959396624857,
      "Data4": -7224157604284590922
    },
    "Kind": "Components.ChildContent",
    "Name": "BlazorApp1.Shared.MainLayout.Body",
    "AssemblyName": "BlazorApp1",
    "DisplayName": "BlazorApp1.Shared.MainLayout.Body",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\r\n            <summary>\r\n            Gets the content to be rendered inside the layout.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Body",
        "ParentTag": "BlazorApp1.Shared.MainLayout"
      }
    ],
    "Metadata": {
      "Common.TypeName": "BlazorApp1.Shared.MainLayout.Body",
      "Common.TypeNameIdentifier": "MainLayout",
      "Common.TypeNamespace": "BlazorApp1.Shared",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 7811770228307842449,
      "Data2": 3322028457118448269,
      "Data3": 41855705415870146,
      "Data4": -8429618465189859410
    },
    "Kind": "Components.Component",
    "Name": "BlazorApp1.Shared.NavMenu",
    "AssemblyName": "BlazorApp1",
    "DisplayName": "BlazorApp1.Shared.NavMenu",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "NavMenu"
      }
    ],
    "Metadata": {
      "Common.TypeName": "BlazorApp1.Shared.NavMenu",
      "Common.TypeNameIdentifier": "NavMenu",
      "Common.TypeNamespace": "BlazorApp1.Shared",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -4537143290887361385,
      "Data2": -6149934747250567370,
      "Data3": 8998751486953067367,
      "Data4": -4663503186795195304
    },
    "Kind": "Components.Component",
    "Name": "BlazorApp1.Shared.NavMenu",
    "AssemblyName": "BlazorApp1",
    "DisplayName": "BlazorApp1.Shared.NavMenu",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "BlazorApp1.Shared.NavMenu"
      }
    ],
    "Metadata": {
      "Common.TypeName": "BlazorApp1.Shared.NavMenu",
      "Common.TypeNameIdentifier": "NavMenu",
      "Common.TypeNamespace": "BlazorApp1.Shared",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 5265615721546854445,
      "Data2": 2342233239095164612,
      "Data3": 8703523869395752726,
      "Data4": 4793593297189967081
    },
    "Kind": "Components.Component",
    "Name": "BlazorApp1.Shared.SurveyPrompt",
    "AssemblyName": "BlazorApp1",
    "DisplayName": "BlazorApp1.Shared.SurveyPrompt",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "SurveyPrompt"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "Title",
        "PropertyName": "Title",
        "TypeName": 14,
        "DisplayName": "string BlazorApp1.Shared.SurveyPrompt.Title",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "BlazorApp1.Shared.SurveyPrompt",
      "Common.TypeNameIdentifier": "SurveyPrompt",
      "Common.TypeNamespace": "BlazorApp1.Shared",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 7996633802606658451,
      "Data2": 8214140905438650060,
      "Data3": 6260611436800837793,
      "Data4": -955540747879921240
    },
    "Kind": "Components.Component",
    "Name": "BlazorApp1.Shared.SurveyPrompt",
    "AssemblyName": "BlazorApp1",
    "DisplayName": "BlazorApp1.Shared.SurveyPrompt",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "BlazorApp1.Shared.SurveyPrompt"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "Title",
        "PropertyName": "Title",
        "TypeName": 14,
        "DisplayName": "string BlazorApp1.Shared.SurveyPrompt.Title",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "BlazorApp1.Shared.SurveyPrompt",
      "Common.TypeNameIdentifier": "SurveyPrompt",
      "Common.TypeNamespace": "BlazorApp1.Shared",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 205142976935521097,
      "Data2": 9107771028632312228,
      "Data3": 6274659642242205419,
      "Data4": 6800268062140247321
    },
    "Kind": "Components.Component",
    "Name": "BlazorApp1.Pages.Index",
    "AssemblyName": "BlazorApp1",
    "DisplayName": "BlazorApp1.Pages.Index",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Index"
      }
    ],
    "Metadata": {
      "Common.TypeName": "BlazorApp1.Pages.Index",
      "Common.TypeNameIdentifier": "Index",
      "Common.TypeNamespace": "BlazorApp1.Pages",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -2926950332963924512,
      "Data2": 7622045448826768350,
      "Data3": -3688753087563139579,
      "Data4": -5586309183133206198
    },
    "Kind": "Components.Component",
    "Name": "BlazorApp1.Pages.Index",
    "AssemblyName": "BlazorApp1",
    "DisplayName": "BlazorApp1.Pages.Index",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "BlazorApp1.Pages.Index"
      }
    ],
    "Metadata": {
      "Common.TypeName": "BlazorApp1.Pages.Index",
      "Common.TypeNameIdentifier": "Index",
      "Common.TypeNamespace": "BlazorApp1.Pages",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -40717666776784024,
      "Data2": 3889965238532071261,
      "Data3": 2458123906702446637,
      "Data4": 3529459121932187908
    },
    "Kind": "Components.Component",
    "Name": "BlazorApp1.Pages.FetchData",
    "AssemblyName": "BlazorApp1",
    "DisplayName": "BlazorApp1.Pages.FetchData",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "FetchData"
      }
    ],
    "Metadata": {
      "Common.TypeName": "BlazorApp1.Pages.FetchData",
      "Common.TypeNameIdentifier": "FetchData",
      "Common.TypeNamespace": "BlazorApp1.Pages",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 6911801493112497823,
      "Data2": 2213507279393090768,
      "Data3": 8031177593184470718,
      "Data4": -3647895738916384881
    },
    "Kind": "Components.Component",
    "Name": "BlazorApp1.Pages.FetchData",
    "AssemblyName": "BlazorApp1",
    "DisplayName": "BlazorApp1.Pages.FetchData",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "BlazorApp1.Pages.FetchData"
      }
    ],
    "Metadata": {
      "Common.TypeName": "BlazorApp1.Pages.FetchData",
      "Common.TypeNameIdentifier": "FetchData",
      "Common.TypeNamespace": "BlazorApp1.Pages",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -3075590334792719951,
      "Data2": -8057492784069631357,
      "Data3": -7380395539832370240,
      "Data4": -188991615315459814
    },
    "Kind": "Components.Component",
    "Name": "BlazorApp1.App",
    "AssemblyName": "BlazorApp1",
    "DisplayName": "BlazorApp1.App",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "App"
      }
    ],
    "Metadata": {
      "Common.TypeName": "BlazorApp1.App",
      "Common.TypeNameIdentifier": "App",
      "Common.TypeNamespace": "BlazorApp1",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 3135514666801773654,
      "Data2": -7184844202540896096,
      "Data3": 2136371984154980817,
      "Data4": 766583206158407900
    },
    "Kind": "Components.Component",
    "Name": "BlazorApp1.App",
    "AssemblyName": "BlazorApp1",
    "DisplayName": "BlazorApp1.App",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "BlazorApp1.App"
      }
    ],
    "Metadata": {
      "Common.TypeName": "BlazorApp1.App",
      "Common.TypeNameIdentifier": "App",
      "Common.TypeNamespace": "BlazorApp1",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 6895467096299631118,
      "Data2": -3745008838166310673,
      "Data3": 3904060634265562983,
      "Data4": 7107918373043585557
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView\">\r\n             <summary>\r\n             Combines the behaviors of <see cref=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\" /> and <see cref=\"T:Microsoft.AspNetCore.Components.RouteView\" />,\r\n             so that it displays the page matching the specified route but only if the user\r\n             is authorized to see it.\r\n            \r\n             Additionally, this component supplies a cascading parameter of type <see cref=\"T:System.Threading.Tasks.Task`1\" />,\r\n             which makes the user's current authentication state available to descendants.\r\n             </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "AuthorizeRouteView"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "NotAuthorized",
        "PropertyName": "NotAuthorized",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState> Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "Authorizing",
        "PropertyName": "Authorizing",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "Resource",
        "PropertyName": "Resource",
        "TypeName": 0,
        "DisplayName": "object Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Resource",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Resource\">\r\n            <summary>\r\n            The resource to which access is being controlled.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Object"
        }
      },
      {
        "Flags": 9,
        "Name": "RouteData",
        "PropertyName": "RouteData",
        "TypeName": "Microsoft.AspNetCore.Components.RouteData",
        "DisplayName": "Microsoft.AspNetCore.Components.RouteData Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.RouteData",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.RouteView.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This determines the page that will be\r\n            displayed and the parameter values that will be supplied to the page.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RouteData"
        }
      },
      {
        "Flags": 1,
        "Name": "DefaultLayout",
        "PropertyName": "DefaultLayout",
        "TypeName": 17,
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.DefaultLayout",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.RouteView.DefaultLayout\">\r\n            <summary>\r\n            Gets or sets the type of a layout to be used if the page does not\r\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\r\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Type"
        }
      },
      {
        "Flags": 1,
        "Name": "Context",
        "PropertyName": "Context",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Context",
        "Documentation": {
          "Id": 12
        },
        "Metadata": {
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView",
      "Common.TypeNameIdentifier": "AuthorizeRouteView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 784560205996017172,
      "Data2": -585550493996365996,
      "Data3": 5437030655201339476,
      "Data4": -5444035509673114639
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView\">\r\n             <summary>\r\n             Combines the behaviors of <see cref=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\" /> and <see cref=\"T:Microsoft.AspNetCore.Components.RouteView\" />,\r\n             so that it displays the page matching the specified route but only if the user\r\n             is authorized to see it.\r\n            \r\n             Additionally, this component supplies a cascading parameter of type <see cref=\"T:System.Threading.Tasks.Task`1\" />,\r\n             which makes the user's current authentication state available to descendants.\r\n             </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "NotAuthorized",
        "PropertyName": "NotAuthorized",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState> Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "Authorizing",
        "PropertyName": "Authorizing",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "Resource",
        "PropertyName": "Resource",
        "TypeName": 0,
        "DisplayName": "object Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Resource",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Resource\">\r\n            <summary>\r\n            The resource to which access is being controlled.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Object"
        }
      },
      {
        "Flags": 9,
        "Name": "RouteData",
        "PropertyName": "RouteData",
        "TypeName": "Microsoft.AspNetCore.Components.RouteData",
        "DisplayName": "Microsoft.AspNetCore.Components.RouteData Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.RouteData",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.RouteView.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This determines the page that will be\r\n            displayed and the parameter values that will be supplied to the page.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RouteData"
        }
      },
      {
        "Flags": 1,
        "Name": "DefaultLayout",
        "PropertyName": "DefaultLayout",
        "TypeName": 17,
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.DefaultLayout",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.RouteView.DefaultLayout\">\r\n            <summary>\r\n            Gets or sets the type of a layout to be used if the page does not\r\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\r\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Type"
        }
      },
      {
        "Flags": 1,
        "Name": "Context",
        "PropertyName": "Context",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Context",
        "Documentation": {
          "Id": 12
        },
        "Metadata": {
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView",
      "Common.TypeNameIdentifier": "AuthorizeRouteView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 8913747868710072462,
      "Data2": -165686540978438944,
      "Data3": 8793239797847172727,
      "Data4": -9045529859523343334
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "NotAuthorized",
        "ParentTag": "AuthorizeRouteView"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "Context",
        "PropertyName": "Context",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "NotAuthorized"
          ]
        },
        "Metadata": {
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
      "Common.TypeNameIdentifier": "AuthorizeRouteView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 6811010626995406632,
      "Data2": -2297746477324967124,
      "Data3": 2408114086947116565,
      "Data4": 7730322229175027097
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "NotAuthorized",
        "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "Context",
        "PropertyName": "Context",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "NotAuthorized"
          ]
        },
        "Metadata": {
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
      "Common.TypeNameIdentifier": "AuthorizeRouteView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 8409146836506811220,
      "Data2": -3557229339975962491,
      "Data3": -9036079713174403303,
      "Data4": -2046918318881541777
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Authorizing",
        "ParentTag": "AuthorizeRouteView"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
      "Common.TypeNameIdentifier": "AuthorizeRouteView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -4369813011973348817,
      "Data2": -2849368957331268153,
      "Data3": -3443584105976924493,
      "Data4": 5959283735533993681
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Authorizing",
        "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
      "Common.TypeNameIdentifier": "AuthorizeRouteView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -8598614082299477780,
      "Data2": -5802328727933924632,
      "Data3": 7865604727126536800,
      "Data4": -1634277659262587795
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\">\r\n            <summary>\r\n            Displays differing content depending on the user's authorization status.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "AuthorizeView"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "Policy",
        "PropertyName": "Policy",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Policy",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Policy\">\r\n            <summary>\r\n            The policy name that determines whether the content can be displayed.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      },
      {
        "Flags": 1,
        "Name": "Roles",
        "PropertyName": "Roles",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Roles",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Roles\">\r\n            <summary>\r\n            A comma delimited list of roles that are allowed to display the content.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      },
      {
        "Flags": 1,
        "Name": "ChildContent",
        "PropertyName": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState> Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "NotAuthorized",
        "PropertyName": "NotAuthorized",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState> Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "Authorized",
        "PropertyName": "Authorized",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState> Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "Authorizing",
        "PropertyName": "Authorizing",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "Resource",
        "PropertyName": "Resource",
        "TypeName": 0,
        "DisplayName": "object Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Resource",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Resource\">\r\n            <summary>\r\n            The resource to which access is being controlled.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Object"
        }
      },
      {
        "Flags": 1,
        "Name": "Context",
        "PropertyName": "Context",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Context",
        "Documentation": {
          "Id": 12
        },
        "Metadata": {
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView",
      "Common.TypeNameIdentifier": "AuthorizeView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 3501408738619991747,
      "Data2": 7375617843844949612,
      "Data3": -4255985230580173610,
      "Data4": -2568448911834038592
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\">\r\n            <summary>\r\n            Displays differing content depending on the user's authorization status.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "Policy",
        "PropertyName": "Policy",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Policy",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Policy\">\r\n            <summary>\r\n            The policy name that determines whether the content can be displayed.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      },
      {
        "Flags": 1,
        "Name": "Roles",
        "PropertyName": "Roles",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Roles",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Roles\">\r\n            <summary>\r\n            A comma delimited list of roles that are allowed to display the content.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      },
      {
        "Flags": 1,
        "Name": "ChildContent",
        "PropertyName": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState> Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "NotAuthorized",
        "PropertyName": "NotAuthorized",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState> Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "Authorized",
        "PropertyName": "Authorized",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState> Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "Authorizing",
        "PropertyName": "Authorizing",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "Resource",
        "PropertyName": "Resource",
        "TypeName": 0,
        "DisplayName": "object Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Resource",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Resource\">\r\n            <summary>\r\n            The resource to which access is being controlled.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Object"
        }
      },
      {
        "Flags": 1,
        "Name": "Context",
        "PropertyName": "Context",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Context",
        "Documentation": {
          "Id": 12
        },
        "Metadata": {
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView",
      "Common.TypeNameIdentifier": "AuthorizeView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 6605687197170324834,
      "Data2": -7963369446411938720,
      "Data3": -190619441005964187,
      "Data4": -2840294666003510085
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "AuthorizeView"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "Context",
        "PropertyName": "Context",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "ChildContent"
          ]
        },
        "Metadata": {
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
      "Common.TypeNameIdentifier": "AuthorizeView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 5468161451460604597,
      "Data2": -6221302988462113147,
      "Data3": 7301410680638252205,
      "Data4": -6389603211256707343
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "Context",
        "PropertyName": "Context",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "ChildContent"
          ]
        },
        "Metadata": {
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
      "Common.TypeNameIdentifier": "AuthorizeView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 6958484739898147619,
      "Data2": 6930603243827932646,
      "Data3": -1745832891869798759,
      "Data4": 6405203038328694713
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "NotAuthorized",
        "ParentTag": "AuthorizeView"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "Context",
        "PropertyName": "Context",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "NotAuthorized"
          ]
        },
        "Metadata": {
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
      "Common.TypeNameIdentifier": "AuthorizeView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 2583773100381272827,
      "Data2": -296783463639508963,
      "Data3": -2927084081368950376,
      "Data4": -2212662499266687987
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "NotAuthorized",
        "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "Context",
        "PropertyName": "Context",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "NotAuthorized"
          ]
        },
        "Metadata": {
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
      "Common.TypeNameIdentifier": "AuthorizeView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 3171342804538153112,
      "Data2": 8625148067618803571,
      "Data3": 8644202263297252401,
      "Data4": -448316699451941103
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Authorized",
        "ParentTag": "AuthorizeView"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "Context",
        "PropertyName": "Context",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "Authorized"
          ]
        },
        "Metadata": {
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
      "Common.TypeNameIdentifier": "AuthorizeView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 8901161810449960369,
      "Data2": 2702614743895420406,
      "Data3": 7371260264891556741,
      "Data4": 7243608617785206112
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Authorized",
        "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "Context",
        "PropertyName": "Context",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "Authorized"
          ]
        },
        "Metadata": {
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
      "Common.TypeNameIdentifier": "AuthorizeView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 7856880125415756571,
      "Data2": 8383998373486821725,
      "Data3": -8723496610221350529,
      "Data4": 4633865963454802466
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Authorizing",
        "ParentTag": "AuthorizeView"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
      "Common.TypeNameIdentifier": "AuthorizeView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -1027976193082131680,
      "Data2": 4196849792968480238,
      "Data3": -7699342640913503885,
      "Data4": -2046378850436257891
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Authorizing",
        "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
      "Common.TypeNameIdentifier": "AuthorizeView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -8888390703587721211,
      "Data2": 1174185681638683092,
      "Data3": 1499842857733020168,
      "Data4": 4004970148375485506
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "CascadingAuthenticationState"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "ChildContent",
        "PropertyName": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent\">\r\n            <summary>\r\n            The content to which the authentication state should be provided.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Components.ChildContent": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState",
      "Common.TypeNameIdentifier": "CascadingAuthenticationState",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -3046202735450453970,
      "Data2": 7388931246080015078,
      "Data3": -8019451699380326602,
      "Data4": 2738974582454400750
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "ChildContent",
        "PropertyName": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent\">\r\n            <summary>\r\n            The content to which the authentication state should be provided.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Components.ChildContent": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState",
      "Common.TypeNameIdentifier": "CascadingAuthenticationState",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -3508685268214383852,
      "Data2": -2358856202161226431,
      "Data3": 8158469474100257103,
      "Data4": -8624873112559932432
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent\">\r\n            <summary>\r\n            The content to which the authentication state should be provided.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "CascadingAuthenticationState"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
      "Common.TypeNameIdentifier": "CascadingAuthenticationState",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 151529769816882701,
      "Data2": 8794175924374574069,
      "Data3": -5057124985829292905,
      "Data4": 8653669153692737253
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
    "DisplayName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent\">\r\n            <summary>\r\n            The content to which the authentication state should be provided.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
      "Common.TypeNameIdentifier": "CascadingAuthenticationState",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 2642679067219200613,
      "Data2": -1035188315422600162,
      "Data3": -7997830241630748441,
      "Data4": -2558959206876309502
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.CascadingValue`1\">\r\n            <summary>\r\n            A component that provides a cascading value to all descendant components.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "CascadingValue"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "TValue",
        "PropertyName": "TValue",
        "TypeName": 17,
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.CascadingValue<TValue>.TValue",
        "Documentation": {
          "Id": 13,
          "Args": [
            "TValue",
            "Microsoft.AspNetCore.Components.CascadingValue<TValue>"
          ]
        },
        "Metadata": {
          "Components.TypeParameter": "True",
          "Components.TypeParameterIsCascading": "False"
        }
      },
      {
        "Flags": 1,
        "Name": "ChildContent",
        "PropertyName": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.ChildContent\">\r\n            <summary>\r\n            The content to which the value should be provided.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "Value",
        "PropertyName": "Value",
        "TypeName": "TValue",
        "DisplayName": "TValue Microsoft.AspNetCore.Components.CascadingValue<TValue>.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\">\r\n            <summary>\r\n            The value to be provided.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "TValue",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "Name",
        "PropertyName": "Name",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.CascadingValue<TValue>.Name",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Name\">\r\n             <summary>\r\n             Optionally gives a name to the provided value. Descendant components\r\n             will be able to receive the value by specifying this name.\r\n            \r\n             If no name is specified, then descendant components will receive the\r\n             value based the type of value they are requesting.\r\n             </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      },
      {
        "Flags": 1,
        "Name": "IsFixed",
        "PropertyName": "IsFixed",
        "TypeName": 1,
        "DisplayName": "bool Microsoft.AspNetCore.Components.CascadingValue<TValue>.IsFixed",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.IsFixed\">\r\n            <summary>\r\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\r\n            performance optimization that allows the framework to skip setting up\r\n            change notifications. Set this flag only if you will not change\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Boolean"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
      "Common.TypeNameIdentifier": "CascadingValue",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
      "Components.GenericTyped": "True",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 932082770211861275,
      "Data2": 8658616382788398566,
      "Data3": -6666583172669555328,
      "Data4": -5378884142689969963
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.CascadingValue`1\">\r\n            <summary>\r\n            A component that provides a cascading value to all descendant components.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.CascadingValue"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "TValue",
        "PropertyName": "TValue",
        "TypeName": 17,
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.CascadingValue<TValue>.TValue",
        "Documentation": {
          "Id": 13,
          "Args": [
            "TValue",
            "Microsoft.AspNetCore.Components.CascadingValue<TValue>"
          ]
        },
        "Metadata": {
          "Components.TypeParameter": "True",
          "Components.TypeParameterIsCascading": "False"
        }
      },
      {
        "Flags": 1,
        "Name": "ChildContent",
        "PropertyName": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.ChildContent\">\r\n            <summary>\r\n            The content to which the value should be provided.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "Value",
        "PropertyName": "Value",
        "TypeName": "TValue",
        "DisplayName": "TValue Microsoft.AspNetCore.Components.CascadingValue<TValue>.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\">\r\n            <summary>\r\n            The value to be provided.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "TValue",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "Name",
        "PropertyName": "Name",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.CascadingValue<TValue>.Name",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Name\">\r\n             <summary>\r\n             Optionally gives a name to the provided value. Descendant components\r\n             will be able to receive the value by specifying this name.\r\n            \r\n             If no name is specified, then descendant components will receive the\r\n             value based the type of value they are requesting.\r\n             </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      },
      {
        "Flags": 1,
        "Name": "IsFixed",
        "PropertyName": "IsFixed",
        "TypeName": 1,
        "DisplayName": "bool Microsoft.AspNetCore.Components.CascadingValue<TValue>.IsFixed",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.IsFixed\">\r\n            <summary>\r\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\r\n            performance optimization that allows the framework to skip setting up\r\n            change notifications. Set this flag only if you will not change\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Boolean"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
      "Common.TypeNameIdentifier": "CascadingValue",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
      "Components.GenericTyped": "True",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -4608482289570964838,
      "Data2": -7726302403965888404,
      "Data3": 8005627572853295780,
      "Data4": 6904535770820904557
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.ChildContent\">\r\n            <summary>\r\n            The content to which the value should be provided.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "CascadingValue"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
      "Common.TypeNameIdentifier": "CascadingValue",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -7099468049881998144,
      "Data2": 1010359103196847476,
      "Data3": 7871980467203887852,
      "Data4": 4603658050491783925
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.ChildContent\">\r\n            <summary>\r\n            The content to which the value should be provided.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "Microsoft.AspNetCore.Components.CascadingValue"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
      "Common.TypeNameIdentifier": "CascadingValue",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 2037257523883273706,
      "Data2": 682680588723345806,
      "Data3": -3454587875369527054,
      "Data4": -7211884613413921581
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.DynamicComponent",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.DynamicComponent",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.DynamicComponent\">\r\n            <summary>\r\n            A component that renders another component dynamically according to its\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\" /> parameter.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "DynamicComponent"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 9,
        "Name": "Type",
        "PropertyName": "Type",
        "TypeName": 17,
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.DynamicComponent.Type",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\">\r\n            <summary>\r\n            Gets or sets the type of the component to be rendered. The supplied type must\r\n            implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Type"
        }
      },
      {
        "Flags": 1,
        "Name": "Parameters",
        "PropertyName": "Parameters",
        "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.DynamicComponent.Parameters",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Parameters\">\r\n            <summary>\r\n            Gets or sets a dictionary of parameters to be passed to the component.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.DynamicComponent",
      "Common.TypeNameIdentifier": "DynamicComponent",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -4531612613585082204,
      "Data2": -66036143201877016,
      "Data3": -3967736877192048648,
      "Data4": -5049863723838766053
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.DynamicComponent",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.DynamicComponent",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.DynamicComponent\">\r\n            <summary>\r\n            A component that renders another component dynamically according to its\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\" /> parameter.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.DynamicComponent"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 9,
        "Name": "Type",
        "PropertyName": "Type",
        "TypeName": 17,
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.DynamicComponent.Type",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\">\r\n            <summary>\r\n            Gets or sets the type of the component to be rendered. The supplied type must\r\n            implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Type"
        }
      },
      {
        "Flags": 1,
        "Name": "Parameters",
        "PropertyName": "Parameters",
        "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.DynamicComponent.Parameters",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Parameters\">\r\n            <summary>\r\n            Gets or sets a dictionary of parameters to be passed to the component.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.DynamicComponent",
      "Common.TypeNameIdentifier": "DynamicComponent",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -4245343836615069080,
      "Data2": -3719265121026743406,
      "Data3": -7071493320557280323,
      "Data4": -835058506565873531
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.LayoutView",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.LayoutView",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.LayoutView\">\r\n            <summary>\r\n            Displays the specified content inside the specified layout and any further\r\n            nested layouts.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "LayoutView"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "ChildContent",
        "PropertyName": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.LayoutView.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to display.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "Layout",
        "PropertyName": "Layout",
        "TypeName": 17,
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.LayoutView.Layout",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.Layout\">\r\n            <summary>\r\n            Gets or sets the type of the layout in which to display the content.\r\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Type"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView",
      "Common.TypeNameIdentifier": "LayoutView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 3004954115659643055,
      "Data2": -5301447647852272921,
      "Data3": 2018270744199027691,
      "Data4": -6215113995563786276
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.LayoutView",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.LayoutView",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.LayoutView\">\r\n            <summary>\r\n            Displays the specified content inside the specified layout and any further\r\n            nested layouts.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.LayoutView"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "ChildContent",
        "PropertyName": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.LayoutView.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to display.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "Layout",
        "PropertyName": "Layout",
        "TypeName": 17,
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.LayoutView.Layout",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.Layout\">\r\n            <summary>\r\n            Gets or sets the type of the layout in which to display the content.\r\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Type"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView",
      "Common.TypeNameIdentifier": "LayoutView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 1270776707106377636,
      "Data2": 8797105731492125492,
      "Data3": -4722775846668528642,
      "Data4": 3305447825452506234
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to display.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "LayoutView"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
      "Common.TypeNameIdentifier": "LayoutView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -4098664675869633111,
      "Data2": 4977801593976148775,
      "Data3": -3591351345106431176,
      "Data4": -3629411109416117244
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to display.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "Microsoft.AspNetCore.Components.LayoutView"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
      "Common.TypeNameIdentifier": "LayoutView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -3607526259649647387,
      "Data2": -6897122314679641342,
      "Data3": -3477669319646116696,
      "Data4": 1440611484214512394
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.RouteView",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.RouteView",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.RouteView\">\r\n            <summary>\r\n            Displays the specified page component, rendering it inside its layout\r\n            and any further nested layouts.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "RouteView"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 9,
        "Name": "RouteData",
        "PropertyName": "RouteData",
        "TypeName": "Microsoft.AspNetCore.Components.RouteData",
        "DisplayName": "Microsoft.AspNetCore.Components.RouteData Microsoft.AspNetCore.Components.RouteView.RouteData",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.RouteView.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This determines the page that will be\r\n            displayed and the parameter values that will be supplied to the page.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RouteData"
        }
      },
      {
        "Flags": 1,
        "Name": "DefaultLayout",
        "PropertyName": "DefaultLayout",
        "TypeName": 17,
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.RouteView.DefaultLayout",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.RouteView.DefaultLayout\">\r\n            <summary>\r\n            Gets or sets the type of a layout to be used if the page does not\r\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\r\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Type"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.RouteView",
      "Common.TypeNameIdentifier": "RouteView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -4017327014712739917,
      "Data2": 4578031789971520778,
      "Data3": 984930470961137853,
      "Data4": -3065474296698482500
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.RouteView",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.RouteView",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.RouteView\">\r\n            <summary>\r\n            Displays the specified page component, rendering it inside its layout\r\n            and any further nested layouts.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.RouteView"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 9,
        "Name": "RouteData",
        "PropertyName": "RouteData",
        "TypeName": "Microsoft.AspNetCore.Components.RouteData",
        "DisplayName": "Microsoft.AspNetCore.Components.RouteData Microsoft.AspNetCore.Components.RouteView.RouteData",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.RouteView.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This determines the page that will be\r\n            displayed and the parameter values that will be supplied to the page.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RouteData"
        }
      },
      {
        "Flags": 1,
        "Name": "DefaultLayout",
        "PropertyName": "DefaultLayout",
        "TypeName": 17,
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.RouteView.DefaultLayout",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.RouteView.DefaultLayout\">\r\n            <summary>\r\n            Gets or sets the type of a layout to be used if the page does not\r\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\r\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Type"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.RouteView",
      "Common.TypeNameIdentifier": "RouteView",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -4196946159588193836,
      "Data2": 4213480043302752912,
      "Data3": -5630005157301452919,
      "Data4": 9041248840624766812
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Routing.Router",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Routing.Router",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Routing.Router\">\r\n            <summary>\r\n            A component that supplies route data corresponding to the current navigation state.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Router"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 9,
        "Name": "AppAssembly",
        "PropertyName": "AppAssembly",
        "TypeName": "System.Reflection.Assembly",
        "DisplayName": "System.Reflection.Assembly Microsoft.AspNetCore.Components.Routing.Router.AppAssembly",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.AppAssembly\">\r\n            <summary>\r\n            Gets or sets the assembly that should be searched for components matching the URI.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Reflection.Assembly"
        }
      },
      {
        "Flags": 1,
        "Name": "AdditionalAssemblies",
        "PropertyName": "AdditionalAssemblies",
        "TypeName": "System.Collections.Generic.IEnumerable<System.Reflection.Assembly>",
        "DisplayName": "System.Collections.Generic.IEnumerable<System.Reflection.Assembly> Microsoft.AspNetCore.Components.Routing.Router.AdditionalAssemblies",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.AdditionalAssemblies\">\r\n            <summary>\r\n            Gets or sets a collection of additional assemblies that should be searched for components\r\n            that can match URIs.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IEnumerable<global::System.Reflection.Assembly>"
        }
      },
      {
        "Flags": 9,
        "Name": "NotFound",
        "PropertyName": "NotFound",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Routing.Router.NotFound",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.NotFound\">\r\n            <summary>\r\n            Gets or sets the content to display when no match is found for the requested route.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 9,
        "Name": "Found",
        "PropertyName": "Found",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData> Microsoft.AspNetCore.Components.Routing.Router.Found",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Found\">\r\n            <summary>\r\n            Gets or sets the content to display when a match is found for the requested route.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.RouteData>",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "Navigating",
        "PropertyName": "Navigating",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Routing.Router.Navigating",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Navigating\">\r\n            <summary>\r\n            Get or sets the content to display when asynchronous navigation is in progress.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "OnNavigateAsync",
        "PropertyName": "OnNavigateAsync",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext> Microsoft.AspNetCore.Components.Routing.Router.OnNavigateAsync",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.OnNavigateAsync\">\r\n            <summary>\r\n            Gets or sets a handler that should be called before navigating to a new page.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Routing.NavigationContext>",
          "Components.EventCallback": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "PreferExactMatches",
        "PropertyName": "PreferExactMatches",
        "TypeName": 1,
        "DisplayName": "bool Microsoft.AspNetCore.Components.Routing.Router.PreferExactMatches",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.PreferExactMatches\">\r\n            <summary>\r\n            Gets or sets a flag to indicate whether route matching should prefer exact matches\r\n            over wildcards.\r\n            <para>This property is obsolete and configuring it does nothing.</para>\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Boolean"
        }
      },
      {
        "Flags": 1,
        "Name": "Context",
        "PropertyName": "Context",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Routing.Router.Context",
        "Documentation": {
          "Id": 12
        },
        "Metadata": {
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router",
      "Common.TypeNameIdentifier": "Router",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 688540679299825343,
      "Data2": -1850606251616049023,
      "Data3": 3148501765029064458,
      "Data4": 1405071056318122174
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Routing.Router",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Routing.Router",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Routing.Router\">\r\n            <summary>\r\n            A component that supplies route data corresponding to the current navigation state.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Routing.Router"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 9,
        "Name": "AppAssembly",
        "PropertyName": "AppAssembly",
        "TypeName": "System.Reflection.Assembly",
        "DisplayName": "System.Reflection.Assembly Microsoft.AspNetCore.Components.Routing.Router.AppAssembly",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.AppAssembly\">\r\n            <summary>\r\n            Gets or sets the assembly that should be searched for components matching the URI.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Reflection.Assembly"
        }
      },
      {
        "Flags": 1,
        "Name": "AdditionalAssemblies",
        "PropertyName": "AdditionalAssemblies",
        "TypeName": "System.Collections.Generic.IEnumerable<System.Reflection.Assembly>",
        "DisplayName": "System.Collections.Generic.IEnumerable<System.Reflection.Assembly> Microsoft.AspNetCore.Components.Routing.Router.AdditionalAssemblies",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.AdditionalAssemblies\">\r\n            <summary>\r\n            Gets or sets a collection of additional assemblies that should be searched for components\r\n            that can match URIs.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IEnumerable<global::System.Reflection.Assembly>"
        }
      },
      {
        "Flags": 9,
        "Name": "NotFound",
        "PropertyName": "NotFound",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Routing.Router.NotFound",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.NotFound\">\r\n            <summary>\r\n            Gets or sets the content to display when no match is found for the requested route.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 9,
        "Name": "Found",
        "PropertyName": "Found",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData> Microsoft.AspNetCore.Components.Routing.Router.Found",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Found\">\r\n            <summary>\r\n            Gets or sets the content to display when a match is found for the requested route.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.RouteData>",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "Navigating",
        "PropertyName": "Navigating",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Routing.Router.Navigating",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Navigating\">\r\n            <summary>\r\n            Get or sets the content to display when asynchronous navigation is in progress.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "OnNavigateAsync",
        "PropertyName": "OnNavigateAsync",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext> Microsoft.AspNetCore.Components.Routing.Router.OnNavigateAsync",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.OnNavigateAsync\">\r\n            <summary>\r\n            Gets or sets a handler that should be called before navigating to a new page.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Routing.NavigationContext>",
          "Components.EventCallback": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "PreferExactMatches",
        "PropertyName": "PreferExactMatches",
        "TypeName": 1,
        "DisplayName": "bool Microsoft.AspNetCore.Components.Routing.Router.PreferExactMatches",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.PreferExactMatches\">\r\n            <summary>\r\n            Gets or sets a flag to indicate whether route matching should prefer exact matches\r\n            over wildcards.\r\n            <para>This property is obsolete and configuring it does nothing.</para>\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Boolean"
        }
      },
      {
        "Flags": 1,
        "Name": "Context",
        "PropertyName": "Context",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Routing.Router.Context",
        "Documentation": {
          "Id": 12
        },
        "Metadata": {
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router",
      "Common.TypeNameIdentifier": "Router",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -4630501097924564915,
      "Data2": -6969352399603112370,
      "Data3": -884570759550605109,
      "Data4": -7873193560135182138
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.NotFound\">\r\n            <summary>\r\n            Gets or sets the content to display when no match is found for the requested route.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "NotFound",
        "ParentTag": "Router"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
      "Common.TypeNameIdentifier": "Router",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -5099200554898534440,
      "Data2": 1672479040074326024,
      "Data3": -6141355748436917872,
      "Data4": 7297139618378947219
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.NotFound\">\r\n            <summary>\r\n            Gets or sets the content to display when no match is found for the requested route.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "NotFound",
        "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
      "Common.TypeNameIdentifier": "Router",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -8365324870880510150,
      "Data2": 9174283052140871323,
      "Data3": -1235184480546603520,
      "Data4": 1596824807939794744
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Routing.Router.Found",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Routing.Router.Found",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Found\">\r\n            <summary>\r\n            Gets or sets the content to display when a match is found for the requested route.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Found",
        "ParentTag": "Router"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "Context",
        "PropertyName": "Context",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Routing.Router.Found.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "Found"
          ]
        },
        "Metadata": {
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Found",
      "Common.TypeNameIdentifier": "Router",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -1532261739534487128,
      "Data2": -6798279144718463793,
      "Data3": -5693598183621350682,
      "Data4": 2818856776597120906
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Routing.Router.Found",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Routing.Router.Found",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Found\">\r\n            <summary>\r\n            Gets or sets the content to display when a match is found for the requested route.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Found",
        "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "Context",
        "PropertyName": "Context",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Routing.Router.Found.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "Found"
          ]
        },
        "Metadata": {
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Found",
      "Common.TypeNameIdentifier": "Router",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 3681772173185327190,
      "Data2": 825247420715656159,
      "Data3": 126573524554611381,
      "Data4": 6282543168888848734
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Navigating\">\r\n            <summary>\r\n            Get or sets the content to display when asynchronous navigation is in progress.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Navigating",
        "ParentTag": "Router"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
      "Common.TypeNameIdentifier": "Router",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -6383522948775192073,
      "Data2": 8438063685897523313,
      "Data3": -1465512590274301324,
      "Data4": 9107167753500072108
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Navigating\">\r\n            <summary>\r\n            Get or sets the content to display when asynchronous navigation is in progress.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Navigating",
        "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
      "Common.TypeNameIdentifier": "Router",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 2573163668301826014,
      "Data2": -6282808330030161300,
      "Data3": -3324495687869049519,
      "Data4": 7331414354492166405
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.EditForm",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.EditForm",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\">\r\n            <summary>\r\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "EditForm"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "AdditionalAttributes",
        "PropertyName": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.EditForm.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
        }
      },
      {
        "Flags": 1,
        "Name": "EditContext",
        "PropertyName": "EditContext",
        "TypeName": "Microsoft.AspNetCore.Components.Forms.EditContext",
        "DisplayName": "Microsoft.AspNetCore.Components.Forms.EditContext Microsoft.AspNetCore.Components.Forms.EditForm.EditContext",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\">\r\n            <summary>\r\n            Supplies the edit context explicitly. If using this parameter, do not\r\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\r\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Forms.EditContext"
        }
      },
      {
        "Flags": 1,
        "Name": "Model",
        "PropertyName": "Model",
        "TypeName": 0,
        "DisplayName": "object Microsoft.AspNetCore.Components.Forms.EditForm.Model",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\">\r\n            <summary>\r\n            Specifies the top-level model object for the form. An edit context will\r\n            be constructed for this model. If using this parameter, do not also supply\r\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Object"
        }
      },
      {
        "Flags": 1,
        "Name": "ChildContent",
        "PropertyName": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext> Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent\">\r\n            <summary>\r\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "OnSubmit",
        "PropertyName": "OnSubmit",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext> Microsoft.AspNetCore.Components.Forms.EditForm.OnSubmit",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnSubmit\">\r\n             <summary>\r\n             A callback that will be invoked when the form is submitted.\r\n            \r\n             If using this parameter, you are responsible for triggering any validation\r\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\r\n             </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
          "Components.EventCallback": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "OnValidSubmit",
        "PropertyName": "OnValidSubmit",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext> Microsoft.AspNetCore.Components.Forms.EditForm.OnValidSubmit",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnValidSubmit\">\r\n            <summary>\r\n            A callback that will be invoked when the form is submitted and the\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
          "Components.EventCallback": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "OnInvalidSubmit",
        "PropertyName": "OnInvalidSubmit",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext> Microsoft.AspNetCore.Components.Forms.EditForm.OnInvalidSubmit",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnInvalidSubmit\">\r\n            <summary>\r\n            A callback that will be invoked when the form is submitted and the\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
          "Components.EventCallback": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "Context",
        "PropertyName": "Context",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.EditForm.Context",
        "Documentation": {
          "Id": 12
        },
        "Metadata": {
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm",
      "Common.TypeNameIdentifier": "EditForm",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -2966103887815068790,
      "Data2": 4290506653881665457,
      "Data3": 7934648714378430967,
      "Data4": 7941479201190513667
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.EditForm",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.EditForm",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\">\r\n            <summary>\r\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.EditForm"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "AdditionalAttributes",
        "PropertyName": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.EditForm.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
        }
      },
      {
        "Flags": 1,
        "Name": "EditContext",
        "PropertyName": "EditContext",
        "TypeName": "Microsoft.AspNetCore.Components.Forms.EditContext",
        "DisplayName": "Microsoft.AspNetCore.Components.Forms.EditContext Microsoft.AspNetCore.Components.Forms.EditForm.EditContext",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\">\r\n            <summary>\r\n            Supplies the edit context explicitly. If using this parameter, do not\r\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\r\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Forms.EditContext"
        }
      },
      {
        "Flags": 1,
        "Name": "Model",
        "PropertyName": "Model",
        "TypeName": 0,
        "DisplayName": "object Microsoft.AspNetCore.Components.Forms.EditForm.Model",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\">\r\n            <summary>\r\n            Specifies the top-level model object for the form. An edit context will\r\n            be constructed for this model. If using this parameter, do not also supply\r\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Object"
        }
      },
      {
        "Flags": 1,
        "Name": "ChildContent",
        "PropertyName": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext> Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent\">\r\n            <summary>\r\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "OnSubmit",
        "PropertyName": "OnSubmit",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext> Microsoft.AspNetCore.Components.Forms.EditForm.OnSubmit",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnSubmit\">\r\n             <summary>\r\n             A callback that will be invoked when the form is submitted.\r\n            \r\n             If using this parameter, you are responsible for triggering any validation\r\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\r\n             </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
          "Components.EventCallback": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "OnValidSubmit",
        "PropertyName": "OnValidSubmit",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext> Microsoft.AspNetCore.Components.Forms.EditForm.OnValidSubmit",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnValidSubmit\">\r\n            <summary>\r\n            A callback that will be invoked when the form is submitted and the\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
          "Components.EventCallback": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "OnInvalidSubmit",
        "PropertyName": "OnInvalidSubmit",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext> Microsoft.AspNetCore.Components.Forms.EditForm.OnInvalidSubmit",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnInvalidSubmit\">\r\n            <summary>\r\n            A callback that will be invoked when the form is submitted and the\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
          "Components.EventCallback": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "Context",
        "PropertyName": "Context",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.EditForm.Context",
        "Documentation": {
          "Id": 12
        },
        "Metadata": {
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm",
      "Common.TypeNameIdentifier": "EditForm",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -6374944780570796180,
      "Data2": -4214170918893478621,
      "Data3": -6590226915995620206,
      "Data4": -8710809170077940871
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent\">\r\n            <summary>\r\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "EditForm"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "Context",
        "PropertyName": "Context",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "ChildContent"
          ]
        },
        "Metadata": {
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
      "Common.TypeNameIdentifier": "EditForm",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 8658697030972753284,
      "Data2": -8516256527119705576,
      "Data3": -648675353504214844,
      "Data4": -4817371178829092789
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent\">\r\n            <summary>\r\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "Microsoft.AspNetCore.Components.Forms.EditForm"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "Context",
        "PropertyName": "Context",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "ChildContent"
          ]
        },
        "Metadata": {
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
      "Common.TypeNameIdentifier": "EditForm",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -1913668021315890910,
      "Data2": -7991822389950810680,
      "Data3": 1752570130601627364,
      "Data4": -951579395867156754
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputCheckbox\">\r\n            <summary>\r\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "InputCheckbox"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "AdditionalAttributes",
        "PropertyName": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputCheckbox.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
        }
      },
      {
        "Flags": 1,
        "Name": "Value",
        "PropertyName": "Value",
        "TypeName": 1,
        "DisplayName": "bool Microsoft.AspNetCore.Components.Forms.InputCheckbox.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Boolean"
        }
      },
      {
        "Flags": 1,
        "Name": "ValueChanged",
        "PropertyName": "ValueChanged",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean> Microsoft.AspNetCore.Components.Forms.InputCheckbox.ValueChanged",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>",
          "Components.EventCallback": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "ValueExpression",
        "PropertyName": "ValueExpression",
        "TypeName": "System.Linq.Expressions.Expression<System.Func<System.Boolean>>",
        "DisplayName": "System.Linq.Expressions.Expression<System.Func<System.Boolean>> Microsoft.AspNetCore.Components.Forms.InputCheckbox.ValueExpression",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<global::System.Boolean>>"
        }
      },
      {
        "Flags": 1,
        "Name": "DisplayName",
        "PropertyName": "DisplayName",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputCheckbox.DisplayName",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
      "Common.TypeNameIdentifier": "InputCheckbox",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -3540996435095054654,
      "Data2": -1852544514590858772,
      "Data3": -1374039310125198112,
      "Data4": 8443163726742130857
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputCheckbox\">\r\n            <summary>\r\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "AdditionalAttributes",
        "PropertyName": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputCheckbox.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
        }
      },
      {
        "Flags": 1,
        "Name": "Value",
        "PropertyName": "Value",
        "TypeName": 1,
        "DisplayName": "bool Microsoft.AspNetCore.Components.Forms.InputCheckbox.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Boolean"
        }
      },
      {
        "Flags": 1,
        "Name": "ValueChanged",
        "PropertyName": "ValueChanged",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean> Microsoft.AspNetCore.Components.Forms.InputCheckbox.ValueChanged",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>",
          "Components.EventCallback": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "ValueExpression",
        "PropertyName": "ValueExpression",
        "TypeName": "System.Linq.Expressions.Expression<System.Func<System.Boolean>>",
        "DisplayName": "System.Linq.Expressions.Expression<System.Func<System.Boolean>> Microsoft.AspNetCore.Components.Forms.InputCheckbox.ValueExpression",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<global::System.Boolean>>"
        }
      },
      {
        "Flags": 1,
        "Name": "DisplayName",
        "PropertyName": "DisplayName",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputCheckbox.DisplayName",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
      "Common.TypeNameIdentifier": "InputCheckbox",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 1387413685733766412,
      "Data2": 4992642918691997976,
      "Data3": -3155640485619917467,
      "Data4": -550178016060417220
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputDate`1\">\r\n            <summary>\r\n            An input component for editing date values.\r\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "InputDate"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "TValue",
        "PropertyName": "TValue",
        "TypeName": 17,
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.TValue",
        "Documentation": {
          "Id": 13,
          "Args": [
            "TValue",
            "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>"
          ]
        },
        "Metadata": {
          "Components.TypeParameter": "True",
          "Components.TypeParameterIsCascading": "False"
        }
      },
      {
        "Flags": 5,
        "Name": "Type",
        "PropertyName": "Type",
        "TypeName": "Microsoft.AspNetCore.Components.Forms.InputDateType",
        "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputDateType Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.Type",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputDate`1.Type\">\r\n            <summary>\r\n            Gets or sets the type of HTML input to be rendered.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Forms.InputDateType"
        }
      },
      {
        "Flags": 1,
        "Name": "ParsingErrorMessage",
        "PropertyName": "ParsingErrorMessage",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.ParsingErrorMessage",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputDate`1.ParsingErrorMessage\">\r\n            <summary>\r\n            Gets or sets the error message used when displaying an a parsing error.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      },
      {
        "Flags": 1,
        "Name": "AdditionalAttributes",
        "PropertyName": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
        }
      },
      {
        "Flags": 1,
        "Name": "Value",
        "PropertyName": "Value",
        "TypeName": "TValue",
        "DisplayName": "TValue Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "TValue",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "ValueChanged",
        "PropertyName": "ValueChanged",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<TValue> Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.ValueChanged",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
          "Components.EventCallback": "True",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "ValueExpression",
        "PropertyName": "ValueExpression",
        "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
        "DisplayName": "System.Linq.Expressions.Expression<System.Func<TValue>> Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.ValueExpression",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "DisplayName",
        "PropertyName": "DisplayName",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.DisplayName",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
      "Common.TypeNameIdentifier": "InputDate",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.GenericTyped": "True",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -82236431954248490,
      "Data2": 7910254281253352268,
      "Data3": -8703716326043675033,
      "Data4": 1079099147579880527
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputDate`1\">\r\n            <summary>\r\n            An input component for editing date values.\r\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputDate"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "TValue",
        "PropertyName": "TValue",
        "TypeName": 17,
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.TValue",
        "Documentation": {
          "Id": 13,
          "Args": [
            "TValue",
            "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>"
          ]
        },
        "Metadata": {
          "Components.TypeParameter": "True",
          "Components.TypeParameterIsCascading": "False"
        }
      },
      {
        "Flags": 5,
        "Name": "Type",
        "PropertyName": "Type",
        "TypeName": "Microsoft.AspNetCore.Components.Forms.InputDateType",
        "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputDateType Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.Type",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputDate`1.Type\">\r\n            <summary>\r\n            Gets or sets the type of HTML input to be rendered.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Forms.InputDateType"
        }
      },
      {
        "Flags": 1,
        "Name": "ParsingErrorMessage",
        "PropertyName": "ParsingErrorMessage",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.ParsingErrorMessage",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputDate`1.ParsingErrorMessage\">\r\n            <summary>\r\n            Gets or sets the error message used when displaying an a parsing error.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      },
      {
        "Flags": 1,
        "Name": "AdditionalAttributes",
        "PropertyName": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
        }
      },
      {
        "Flags": 1,
        "Name": "Value",
        "PropertyName": "Value",
        "TypeName": "TValue",
        "DisplayName": "TValue Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "TValue",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "ValueChanged",
        "PropertyName": "ValueChanged",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<TValue> Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.ValueChanged",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
          "Components.EventCallback": "True",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "ValueExpression",
        "PropertyName": "ValueExpression",
        "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
        "DisplayName": "System.Linq.Expressions.Expression<System.Func<TValue>> Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.ValueExpression",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "DisplayName",
        "PropertyName": "DisplayName",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.DisplayName",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
      "Common.TypeNameIdentifier": "InputDate",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.GenericTyped": "True",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -344706643189435279,
      "Data2": -5073897197630049986,
      "Data3": 412329422765353157,
      "Data4": -6852316304140611474
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputFile",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputFile",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputFile\">\r\n            <summary>\r\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "InputFile"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "OnChange",
        "PropertyName": "OnChange",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs> Microsoft.AspNetCore.Components.Forms.InputFile.OnChange",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputFile.OnChange\">\r\n            <summary>\r\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>",
          "Components.EventCallback": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "AdditionalAttributes",
        "PropertyName": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputFile.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputFile.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the input element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputFile",
      "Common.TypeNameIdentifier": "InputFile",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -2478380111804632224,
      "Data2": 6239176284261109157,
      "Data3": 9063329030368410531,
      "Data4": -6630539383192325652
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputFile",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputFile",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputFile\">\r\n            <summary>\r\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputFile"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "OnChange",
        "PropertyName": "OnChange",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs> Microsoft.AspNetCore.Components.Forms.InputFile.OnChange",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputFile.OnChange\">\r\n            <summary>\r\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>",
          "Components.EventCallback": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "AdditionalAttributes",
        "PropertyName": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputFile.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputFile.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the input element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputFile",
      "Common.TypeNameIdentifier": "InputFile",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 1722418974862199007,
      "Data2": 5274107844896761965,
      "Data3": 764023261223116924,
      "Data4": -1477885650152531163
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputNumber`1\">\r\n            <summary>\r\n            An input component for editing numeric values.\r\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "InputNumber"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "TValue",
        "PropertyName": "TValue",
        "TypeName": 17,
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>.TValue",
        "Documentation": {
          "Id": 13,
          "Args": [
            "TValue",
            "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>"
          ]
        },
        "Metadata": {
          "Components.TypeParameter": "True",
          "Components.TypeParameterIsCascading": "False"
        }
      },
      {
        "Flags": 1,
        "Name": "ParsingErrorMessage",
        "PropertyName": "ParsingErrorMessage",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>.ParsingErrorMessage",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputNumber`1.ParsingErrorMessage\">\r\n            <summary>\r\n            Gets or sets the error message used when displaying an a parsing error.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      },
      {
        "Flags": 1,
        "Name": "AdditionalAttributes",
        "PropertyName": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
        }
      },
      {
        "Flags": 1,
        "Name": "Value",
        "PropertyName": "Value",
        "TypeName": "TValue",
        "DisplayName": "TValue Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "TValue",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "ValueChanged",
        "PropertyName": "ValueChanged",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<TValue> Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>.ValueChanged",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
          "Components.EventCallback": "True",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "ValueExpression",
        "PropertyName": "ValueExpression",
        "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
        "DisplayName": "System.Linq.Expressions.Expression<System.Func<TValue>> Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>.ValueExpression",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "DisplayName",
        "PropertyName": "DisplayName",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>.DisplayName",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
      "Common.TypeNameIdentifier": "InputNumber",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.GenericTyped": "True",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 1720987886589932772,
      "Data2": 537570159370114490,
      "Data3": -7448167230817612459,
      "Data4": 4549993483035622297
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputNumber`1\">\r\n            <summary>\r\n            An input component for editing numeric values.\r\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputNumber"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "TValue",
        "PropertyName": "TValue",
        "TypeName": 17,
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>.TValue",
        "Documentation": {
          "Id": 13,
          "Args": [
            "TValue",
            "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>"
          ]
        },
        "Metadata": {
          "Components.TypeParameter": "True",
          "Components.TypeParameterIsCascading": "False"
        }
      },
      {
        "Flags": 1,
        "Name": "ParsingErrorMessage",
        "PropertyName": "ParsingErrorMessage",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>.ParsingErrorMessage",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputNumber`1.ParsingErrorMessage\">\r\n            <summary>\r\n            Gets or sets the error message used when displaying an a parsing error.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      },
      {
        "Flags": 1,
        "Name": "AdditionalAttributes",
        "PropertyName": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
        }
      },
      {
        "Flags": 1,
        "Name": "Value",
        "PropertyName": "Value",
        "TypeName": "TValue",
        "DisplayName": "TValue Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "TValue",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "ValueChanged",
        "PropertyName": "ValueChanged",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<TValue> Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>.ValueChanged",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
          "Components.EventCallback": "True",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "ValueExpression",
        "PropertyName": "ValueExpression",
        "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
        "DisplayName": "System.Linq.Expressions.Expression<System.Func<TValue>> Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>.ValueExpression",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "DisplayName",
        "PropertyName": "DisplayName",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>.DisplayName",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
      "Common.TypeNameIdentifier": "InputNumber",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.GenericTyped": "True",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 2326494004876823848,
      "Data2": -6216445835942972643,
      "Data3": 614227697760918825,
      "Data4": -3588913148150046499
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\">\r\n            <summary>\r\n            An input component used for selecting a value from a group of choices.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "InputRadio"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "TValue",
        "PropertyName": "TValue",
        "TypeName": 17,
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>.TValue",
        "Documentation": {
          "Id": 13,
          "Args": [
            "TValue",
            "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>"
          ]
        },
        "Metadata": {
          "Components.TypeParameter": "True",
          "Components.TypeParameterIsCascading": "False"
        }
      },
      {
        "Flags": 1,
        "Name": "AdditionalAttributes",
        "PropertyName": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the input element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
        }
      },
      {
        "Flags": 1,
        "Name": "Value",
        "PropertyName": "Value",
        "TypeName": "TValue",
        "DisplayName": "TValue Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of this input.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "TValue",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "Name",
        "PropertyName": "Name",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>.Name",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.Name\">\r\n            <summary>\r\n            Gets or sets the name of the parent input radio group.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
      "Common.TypeNameIdentifier": "InputRadio",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.GenericTyped": "True",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 2527358317740722843,
      "Data2": -6489048602980301068,
      "Data3": -5513515101641039778,
      "Data4": 4365596255393682030
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\">\r\n            <summary>\r\n            An input component used for selecting a value from a group of choices.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputRadio"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "TValue",
        "PropertyName": "TValue",
        "TypeName": 17,
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>.TValue",
        "Documentation": {
          "Id": 13,
          "Args": [
            "TValue",
            "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>"
          ]
        },
        "Metadata": {
          "Components.TypeParameter": "True",
          "Components.TypeParameterIsCascading": "False"
        }
      },
      {
        "Flags": 1,
        "Name": "AdditionalAttributes",
        "PropertyName": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the input element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
        }
      },
      {
        "Flags": 1,
        "Name": "Value",
        "PropertyName": "Value",
        "TypeName": "TValue",
        "DisplayName": "TValue Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of this input.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "TValue",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "Name",
        "PropertyName": "Name",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>.Name",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.Name\">\r\n            <summary>\r\n            Gets or sets the name of the parent input radio group.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
      "Common.TypeNameIdentifier": "InputRadio",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.GenericTyped": "True",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 4656911765493782125,
      "Data2": 2349739795641564128,
      "Data3": -9215853410317428340,
      "Data4": -2141797560146387042
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\">\r\n            <summary>\r\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "InputRadioGroup"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "TValue",
        "PropertyName": "TValue",
        "TypeName": 17,
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.TValue",
        "Documentation": {
          "Id": 13,
          "Args": [
            "TValue",
            "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>"
          ]
        },
        "Metadata": {
          "Components.TypeParameter": "True",
          "Components.TypeParameterIsCascading": "False"
        }
      },
      {
        "Flags": 1,
        "Name": "ChildContent",
        "PropertyName": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "Name",
        "PropertyName": "Name",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.Name",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.Name\">\r\n            <summary>\r\n            Gets or sets the name of the group.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      },
      {
        "Flags": 1,
        "Name": "AdditionalAttributes",
        "PropertyName": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
        }
      },
      {
        "Flags": 1,
        "Name": "Value",
        "PropertyName": "Value",
        "TypeName": "TValue",
        "DisplayName": "TValue Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "TValue",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "ValueChanged",
        "PropertyName": "ValueChanged",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<TValue> Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ValueChanged",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
          "Components.EventCallback": "True",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "ValueExpression",
        "PropertyName": "ValueExpression",
        "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
        "DisplayName": "System.Linq.Expressions.Expression<System.Func<TValue>> Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ValueExpression",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "DisplayName",
        "PropertyName": "DisplayName",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.DisplayName",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
      "Common.TypeNameIdentifier": "InputRadioGroup",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.GenericTyped": "True",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -483520327922803096,
      "Data2": 569259560453220703,
      "Data3": -7818222444376291595,
      "Data4": -4619787734168907080
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\">\r\n            <summary>\r\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "TValue",
        "PropertyName": "TValue",
        "TypeName": 17,
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.TValue",
        "Documentation": {
          "Id": 13,
          "Args": [
            "TValue",
            "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>"
          ]
        },
        "Metadata": {
          "Components.TypeParameter": "True",
          "Components.TypeParameterIsCascading": "False"
        }
      },
      {
        "Flags": 1,
        "Name": "ChildContent",
        "PropertyName": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "Name",
        "PropertyName": "Name",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.Name",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.Name\">\r\n            <summary>\r\n            Gets or sets the name of the group.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      },
      {
        "Flags": 1,
        "Name": "AdditionalAttributes",
        "PropertyName": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
        }
      },
      {
        "Flags": 1,
        "Name": "Value",
        "PropertyName": "Value",
        "TypeName": "TValue",
        "DisplayName": "TValue Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "TValue",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "ValueChanged",
        "PropertyName": "ValueChanged",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<TValue> Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ValueChanged",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
          "Components.EventCallback": "True",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "ValueExpression",
        "PropertyName": "ValueExpression",
        "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
        "DisplayName": "System.Linq.Expressions.Expression<System.Func<TValue>> Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ValueExpression",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "DisplayName",
        "PropertyName": "DisplayName",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.DisplayName",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
      "Common.TypeNameIdentifier": "InputRadioGroup",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.GenericTyped": "True",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 1317358083689965559,
      "Data2": -4272095063176632685,
      "Data3": 4297138664287640272,
      "Data4": -8394067417849936295
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "InputRadioGroup"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
      "Common.TypeNameIdentifier": "InputRadioGroup",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -4598352409896361649,
      "Data2": -565332510050948402,
      "Data3": -3146681341001094028,
      "Data4": -6420239872112618550
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
      "Common.TypeNameIdentifier": "InputRadioGroup",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 8321519028295115736,
      "Data2": 8963803934277215349,
      "Data3": -4985809506436386381,
      "Data4": -3850537011385242951
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputSelect`1\">\r\n            <summary>\r\n            A dropdown selection component.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "InputSelect"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "TValue",
        "PropertyName": "TValue",
        "TypeName": 17,
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.TValue",
        "Documentation": {
          "Id": 13,
          "Args": [
            "TValue",
            "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>"
          ]
        },
        "Metadata": {
          "Components.TypeParameter": "True",
          "Components.TypeParameterIsCascading": "False"
        }
      },
      {
        "Flags": 1,
        "Name": "ChildContent",
        "PropertyName": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputSelect`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the select element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "AdditionalAttributes",
        "PropertyName": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
        }
      },
      {
        "Flags": 1,
        "Name": "Value",
        "PropertyName": "Value",
        "TypeName": "TValue",
        "DisplayName": "TValue Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "TValue",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "ValueChanged",
        "PropertyName": "ValueChanged",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<TValue> Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ValueChanged",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
          "Components.EventCallback": "True",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "ValueExpression",
        "PropertyName": "ValueExpression",
        "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
        "DisplayName": "System.Linq.Expressions.Expression<System.Func<TValue>> Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ValueExpression",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "DisplayName",
        "PropertyName": "DisplayName",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.DisplayName",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
      "Common.TypeNameIdentifier": "InputSelect",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.GenericTyped": "True",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -3581885032036551326,
      "Data2": 3580896526720875848,
      "Data3": 6535085209892840944,
      "Data4": 2537699763720589885
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputSelect`1\">\r\n            <summary>\r\n            A dropdown selection component.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputSelect"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "TValue",
        "PropertyName": "TValue",
        "TypeName": 17,
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.TValue",
        "Documentation": {
          "Id": 13,
          "Args": [
            "TValue",
            "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>"
          ]
        },
        "Metadata": {
          "Components.TypeParameter": "True",
          "Components.TypeParameterIsCascading": "False"
        }
      },
      {
        "Flags": 1,
        "Name": "ChildContent",
        "PropertyName": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputSelect`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the select element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "AdditionalAttributes",
        "PropertyName": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
        }
      },
      {
        "Flags": 1,
        "Name": "Value",
        "PropertyName": "Value",
        "TypeName": "TValue",
        "DisplayName": "TValue Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "TValue",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "ValueChanged",
        "PropertyName": "ValueChanged",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<TValue> Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ValueChanged",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
          "Components.EventCallback": "True",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "ValueExpression",
        "PropertyName": "ValueExpression",
        "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
        "DisplayName": "System.Linq.Expressions.Expression<System.Func<TValue>> Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ValueExpression",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "DisplayName",
        "PropertyName": "DisplayName",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.DisplayName",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
      "Common.TypeNameIdentifier": "InputSelect",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.GenericTyped": "True",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 7569258355189286579,
      "Data2": 3484496473719375006,
      "Data3": 270058766867767607,
      "Data4": 3937157457485765839
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputSelect`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the select element.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "InputSelect"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
      "Common.TypeNameIdentifier": "InputSelect",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 8773928702153100195,
      "Data2": 4399318109313962927,
      "Data3": -4004703774880342141,
      "Data4": -6466560754873454137
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputSelect`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the select element.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "Microsoft.AspNetCore.Components.Forms.InputSelect"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
      "Common.TypeNameIdentifier": "InputSelect",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -6165449071293149780,
      "Data2": 1658550922192153836,
      "Data3": 1070524630034385070,
      "Data4": -1058580224694392303
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputText",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputText\">\r\n            <summary>\r\n            An input component for editing <see cref=\"T:System.String\" /> values.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "InputText"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "AdditionalAttributes",
        "PropertyName": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputText.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
        }
      },
      {
        "Flags": 1,
        "Name": "Value",
        "PropertyName": "Value",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputText.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      },
      {
        "Flags": 1,
        "Name": "ValueChanged",
        "PropertyName": "ValueChanged",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.String> Microsoft.AspNetCore.Components.Forms.InputText.ValueChanged",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>",
          "Components.EventCallback": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "ValueExpression",
        "PropertyName": "ValueExpression",
        "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
        "DisplayName": "System.Linq.Expressions.Expression<System.Func<System.String>> Microsoft.AspNetCore.Components.Forms.InputText.ValueExpression",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"
        }
      },
      {
        "Flags": 1,
        "Name": "DisplayName",
        "PropertyName": "DisplayName",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputText.DisplayName",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText",
      "Common.TypeNameIdentifier": "InputText",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 6679355678367217445,
      "Data2": 8990578311467076640,
      "Data3": 1028199450616407028,
      "Data4": 2254024895923015183
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputText",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputText\">\r\n            <summary>\r\n            An input component for editing <see cref=\"T:System.String\" /> values.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputText"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "AdditionalAttributes",
        "PropertyName": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputText.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
        }
      },
      {
        "Flags": 1,
        "Name": "Value",
        "PropertyName": "Value",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputText.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      },
      {
        "Flags": 1,
        "Name": "ValueChanged",
        "PropertyName": "ValueChanged",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.String> Microsoft.AspNetCore.Components.Forms.InputText.ValueChanged",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>",
          "Components.EventCallback": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "ValueExpression",
        "PropertyName": "ValueExpression",
        "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
        "DisplayName": "System.Linq.Expressions.Expression<System.Func<System.String>> Microsoft.AspNetCore.Components.Forms.InputText.ValueExpression",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"
        }
      },
      {
        "Flags": 1,
        "Name": "DisplayName",
        "PropertyName": "DisplayName",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputText.DisplayName",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText",
      "Common.TypeNameIdentifier": "InputText",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -2924724780625475190,
      "Data2": 9043518599858051934,
      "Data3": 8998797175653440340,
      "Data4": -1194317296967096498
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputTextArea\">\r\n            <summary>\r\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "InputTextArea"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "AdditionalAttributes",
        "PropertyName": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputTextArea.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
        }
      },
      {
        "Flags": 1,
        "Name": "Value",
        "PropertyName": "Value",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputTextArea.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      },
      {
        "Flags": 1,
        "Name": "ValueChanged",
        "PropertyName": "ValueChanged",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.String> Microsoft.AspNetCore.Components.Forms.InputTextArea.ValueChanged",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>",
          "Components.EventCallback": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "ValueExpression",
        "PropertyName": "ValueExpression",
        "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
        "DisplayName": "System.Linq.Expressions.Expression<System.Func<System.String>> Microsoft.AspNetCore.Components.Forms.InputTextArea.ValueExpression",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"
        }
      },
      {
        "Flags": 1,
        "Name": "DisplayName",
        "PropertyName": "DisplayName",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputTextArea.DisplayName",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
      "Common.TypeNameIdentifier": "InputTextArea",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 3895628486431978369,
      "Data2": 2629931932856514958,
      "Data3": -8027965319255711543,
      "Data4": -6723158307342702629
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputTextArea\">\r\n            <summary>\r\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputTextArea"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "AdditionalAttributes",
        "PropertyName": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.InputTextArea.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
        }
      },
      {
        "Flags": 1,
        "Name": "Value",
        "PropertyName": "Value",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputTextArea.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      },
      {
        "Flags": 1,
        "Name": "ValueChanged",
        "PropertyName": "ValueChanged",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.String> Microsoft.AspNetCore.Components.Forms.InputTextArea.ValueChanged",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>",
          "Components.EventCallback": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "ValueExpression",
        "PropertyName": "ValueExpression",
        "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
        "DisplayName": "System.Linq.Expressions.Expression<System.Func<System.String>> Microsoft.AspNetCore.Components.Forms.InputTextArea.ValueExpression",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"
        }
      },
      {
        "Flags": 1,
        "Name": "DisplayName",
        "PropertyName": "DisplayName",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Forms.InputTextArea.DisplayName",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
      "Common.TypeNameIdentifier": "InputTextArea",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 967637762057666756,
      "Data2": 5489242626033327515,
      "Data3": -8061395994612909403,
      "Data4": 2240266331734873363
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1\">\r\n            <summary>\r\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ValidationMessage"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "TValue",
        "PropertyName": "TValue",
        "TypeName": 17,
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>.TValue",
        "Documentation": {
          "Id": 13,
          "Args": [
            "TValue",
            "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>"
          ]
        },
        "Metadata": {
          "Components.TypeParameter": "True",
          "Components.TypeParameterIsCascading": "False"
        }
      },
      {
        "Flags": 1,
        "Name": "AdditionalAttributes",
        "PropertyName": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
        }
      },
      {
        "Flags": 1,
        "Name": "For",
        "PropertyName": "For",
        "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
        "DisplayName": "System.Linq.Expressions.Expression<System.Func<TValue>> Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>.For",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1.For\">\r\n            <summary>\r\n            Specifies the field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
          "Components.GenericTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
      "Common.TypeNameIdentifier": "ValidationMessage",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.GenericTyped": "True",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -1333006348728553936,
      "Data2": 311983917685957668,
      "Data3": -375820072819886726,
      "Data4": -7779837319373948672
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1\">\r\n            <summary>\r\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "TValue",
        "PropertyName": "TValue",
        "TypeName": 17,
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>.TValue",
        "Documentation": {
          "Id": 13,
          "Args": [
            "TValue",
            "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>"
          ]
        },
        "Metadata": {
          "Components.TypeParameter": "True",
          "Components.TypeParameterIsCascading": "False"
        }
      },
      {
        "Flags": 1,
        "Name": "AdditionalAttributes",
        "PropertyName": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
        }
      },
      {
        "Flags": 1,
        "Name": "For",
        "PropertyName": "For",
        "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
        "DisplayName": "System.Linq.Expressions.Expression<System.Func<TValue>> Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>.For",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1.For\">\r\n            <summary>\r\n            Specifies the field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
          "Components.GenericTyped": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
      "Common.TypeNameIdentifier": "ValidationMessage",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.GenericTyped": "True",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -5035278612688440983,
      "Data2": -2015879939663682380,
      "Data3": 6715767998015470564,
      "Data4": -4095662778937671657
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.ValidationSummary\">\r\n            <summary>\r\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ValidationSummary"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "Model",
        "PropertyName": "Model",
        "TypeName": 0,
        "DisplayName": "object Microsoft.AspNetCore.Components.Forms.ValidationSummary.Model",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationSummary.Model\">\r\n            <summary>\r\n            Gets or sets the model to produce the list of validation messages for.\r\n            When specified, this lists all errors that are associated with the model instance.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Object"
        }
      },
      {
        "Flags": 1,
        "Name": "AdditionalAttributes",
        "PropertyName": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.ValidationSummary.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationSummary.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
      "Common.TypeNameIdentifier": "ValidationSummary",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -8014397232437536909,
      "Data2": 5975755563377767569,
      "Data3": 6321076162266937005,
      "Data4": 4829455373170436890
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.ValidationSummary\">\r\n            <summary>\r\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "Model",
        "PropertyName": "Model",
        "TypeName": 0,
        "DisplayName": "object Microsoft.AspNetCore.Components.Forms.ValidationSummary.Model",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationSummary.Model\">\r\n            <summary>\r\n            Gets or sets the model to produce the list of validation messages for.\r\n            When specified, this lists all errors that are associated with the model instance.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Object"
        }
      },
      {
        "Flags": 1,
        "Name": "AdditionalAttributes",
        "PropertyName": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Forms.ValidationSummary.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationSummary.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
      "Common.TypeNameIdentifier": "ValidationSummary",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -8029788353058448493,
      "Data2": 7025298448156973040,
      "Data3": 1653234307909457877,
      "Data4": -1166267724310959044
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate\">\r\n            <summary>\r\n            After navigating from one page to another, sets focus to an element\r\n            matching a CSS selector. This can be used to build an accessible\r\n            navigation system compatible with screen readers.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "FocusOnNavigate"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "RouteData",
        "PropertyName": "RouteData",
        "TypeName": "Microsoft.AspNetCore.Components.RouteData",
        "DisplayName": "Microsoft.AspNetCore.Components.RouteData Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.RouteData",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This can be obtained from an enclosing\r\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.Router\" /> component.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RouteData"
        }
      },
      {
        "Flags": 1,
        "Name": "Selector",
        "PropertyName": "Selector",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.Selector",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.Selector\">\r\n            <summary>\r\n            Gets or sets a CSS selector describing the element to be focused after\r\n            navigation between pages.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate",
      "Common.TypeNameIdentifier": "FocusOnNavigate",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -6481793368658167659,
      "Data2": -7406025283246005875,
      "Data3": -5261971511130017057,
      "Data4": -5024938791561914321
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate\">\r\n            <summary>\r\n            After navigating from one page to another, sets focus to an element\r\n            matching a CSS selector. This can be used to build an accessible\r\n            navigation system compatible with screen readers.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "RouteData",
        "PropertyName": "RouteData",
        "TypeName": "Microsoft.AspNetCore.Components.RouteData",
        "DisplayName": "Microsoft.AspNetCore.Components.RouteData Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.RouteData",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This can be obtained from an enclosing\r\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.Router\" /> component.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RouteData"
        }
      },
      {
        "Flags": 1,
        "Name": "Selector",
        "PropertyName": "Selector",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.Selector",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.Selector\">\r\n            <summary>\r\n            Gets or sets a CSS selector describing the element to be focused after\r\n            navigation between pages.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate",
      "Common.TypeNameIdentifier": "FocusOnNavigate",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 5098201841428314357,
      "Data2": -4478833196570160007,
      "Data3": 6333062086504694693,
      "Data4": 6712217301485085816
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Routing.NavLink",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Routing.NavLink",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\">\r\n            <summary>\r\n            A component that renders an anchor tag, automatically toggling its 'active'\r\n            class based on whether its 'href' matches the current URI.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "NavLink"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "ActiveClass",
        "PropertyName": "ActiveClass",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Routing.NavLink.ActiveClass",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ActiveClass\">\r\n            <summary>\r\n            Gets or sets the CSS class name applied to the NavLink when the\r\n            current route matches the NavLink href.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      },
      {
        "Flags": 1,
        "Name": "AdditionalAttributes",
        "PropertyName": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Routing.NavLink.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be added to the generated\r\n            <c>a</c> element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
        }
      },
      {
        "Flags": 1,
        "Name": "ChildContent",
        "PropertyName": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content of the component.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 5,
        "Name": "Match",
        "PropertyName": "Match",
        "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
        "DisplayName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch Microsoft.AspNetCore.Components.Routing.NavLink.Match",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.Match\">\r\n            <summary>\r\n            Gets or sets a value representing the URL matching behavior.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink",
      "Common.TypeNameIdentifier": "NavLink",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 185195355977867400,
      "Data2": 58877944978211306,
      "Data3": -5940295572094774623,
      "Data4": -7517836692696721768
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Routing.NavLink",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Routing.NavLink",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\">\r\n            <summary>\r\n            A component that renders an anchor tag, automatically toggling its 'active'\r\n            class based on whether its 'href' matches the current URI.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Routing.NavLink"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "ActiveClass",
        "PropertyName": "ActiveClass",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Routing.NavLink.ActiveClass",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ActiveClass\">\r\n            <summary>\r\n            Gets or sets the CSS class name applied to the NavLink when the\r\n            current route matches the NavLink href.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.String"
        }
      },
      {
        "Flags": 1,
        "Name": "AdditionalAttributes",
        "PropertyName": "AdditionalAttributes",
        "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
        "DisplayName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object> Microsoft.AspNetCore.Components.Routing.NavLink.AdditionalAttributes",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be added to the generated\r\n            <c>a</c> element.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
        }
      },
      {
        "Flags": 1,
        "Name": "ChildContent",
        "PropertyName": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content of the component.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 5,
        "Name": "Match",
        "PropertyName": "Match",
        "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
        "DisplayName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch Microsoft.AspNetCore.Components.Routing.NavLink.Match",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.Match\">\r\n            <summary>\r\n            Gets or sets a value representing the URL matching behavior.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink",
      "Common.TypeNameIdentifier": "NavLink",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 729867532328937848,
      "Data2": 8339097499618248485,
      "Data3": 8621832867303836939,
      "Data4": 5452789395714652854
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content of the component.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "NavLink"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
      "Common.TypeNameIdentifier": "NavLink",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -5909677961420804356,
      "Data2": -2703327156936613231,
      "Data3": 3876832106918892441,
      "Data4": 3705545439044636613
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content of the component.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "Microsoft.AspNetCore.Components.Routing.NavLink"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
      "Common.TypeNameIdentifier": "NavLink",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 7002664046850296155,
      "Data2": 5835382324614005327,
      "Data3": 5314040510799277501,
      "Data4": -3842110681650243140
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Web.HeadContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.HeadContent",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\">\r\n            <summary>\r\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> components.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "HeadContent"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "ChildContent",
        "PropertyName": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Components.ChildContent": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadContent",
      "Common.TypeNameIdentifier": "HeadContent",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -4883783438834418809,
      "Data2": -4650132039634181553,
      "Data3": 739824828311661797,
      "Data4": -2061060330511958730
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Web.HeadContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.HeadContent",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\">\r\n            <summary>\r\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> components.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Web.HeadContent"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "ChildContent",
        "PropertyName": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Components.ChildContent": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadContent",
      "Common.TypeNameIdentifier": "HeadContent",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 2675851088527579445,
      "Data2": -7505334244707772972,
      "Data3": -2573782609309376502,
      "Data4": -8243380520380941219
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "HeadContent"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent",
      "Common.TypeNameIdentifier": "HeadContent",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 7416319073456775495,
      "Data2": 1393370737886465116,
      "Data3": -7604766231301068342,
      "Data4": -1545979927512581241
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "Microsoft.AspNetCore.Components.Web.HeadContent"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent",
      "Common.TypeNameIdentifier": "HeadContent",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 7972003283842483462,
      "Data2": -6111923177918649908,
      "Data3": -7247009272187044843,
      "Data4": 2417857150953154331
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Web.HeadOutlet",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.HeadOutlet",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\">\r\n            <summary>\r\n            Renders content provided by <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\" /> components.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "HeadOutlet"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadOutlet",
      "Common.TypeNameIdentifier": "HeadOutlet",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -7687879641563535454,
      "Data2": -7821991084486909486,
      "Data3": 1638294724949089900,
      "Data4": -8088347289479322154
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Web.HeadOutlet",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.HeadOutlet",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\">\r\n            <summary>\r\n            Renders content provided by <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\" /> components.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Web.HeadOutlet"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadOutlet",
      "Common.TypeNameIdentifier": "HeadOutlet",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -1817878024385750496,
      "Data2": 3442855062265157471,
      "Data3": -5206605292871067288,
      "Data4": -8933567860767393089
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Web.PageTitle",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.PageTitle",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Web.PageTitle\">\r\n            <summary>\r\n            Enables rendering an HTML <c>&lt;title&gt;</c> to a <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> component.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "PageTitle"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "ChildContent",
        "PropertyName": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered as the document title.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Components.ChildContent": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.PageTitle",
      "Common.TypeNameIdentifier": "PageTitle",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -4461337412494659597,
      "Data2": -4879959607214423479,
      "Data3": 2520270675907901760,
      "Data4": 2538673506106520668
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Web.PageTitle",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.PageTitle",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Web.PageTitle\">\r\n            <summary>\r\n            Enables rendering an HTML <c>&lt;title&gt;</c> to a <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> component.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Web.PageTitle"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "ChildContent",
        "PropertyName": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered as the document title.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Components.ChildContent": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.PageTitle",
      "Common.TypeNameIdentifier": "PageTitle",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -8731522919429182879,
      "Data2": 575071958939308809,
      "Data3": 1048312012943532591,
      "Data4": -7923161595380068690
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered as the document title.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "PageTitle"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent",
      "Common.TypeNameIdentifier": "PageTitle",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 7842577119648765078,
      "Data2": 2821295855866914472,
      "Data3": -1510255526782824792,
      "Data4": -974922538555646258
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered as the document title.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "Microsoft.AspNetCore.Components.Web.PageTitle"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent",
      "Common.TypeNameIdentifier": "PageTitle",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -8487506370570956366,
      "Data2": -2366382504277867116,
      "Data3": -5956285325512692322,
      "Data4": -324430735634926785
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Web.ErrorBoundary\">\r\n            <summary>\r\n            Captures errors thrown from its child content.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ErrorBoundary"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "ChildContent",
        "PropertyName": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent\">\r\n            <summary>\r\n            The content to be displayed when there is no error.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "ErrorContent",
        "PropertyName": "ErrorContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.Exception>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<System.Exception> Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent\">\r\n            <summary>\r\n            The content to be displayed when there is an error.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Exception>",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "MaximumErrorCount",
        "PropertyName": "MaximumErrorCount",
        "TypeName": 2,
        "DisplayName": "int Microsoft.AspNetCore.Components.Web.ErrorBoundary.MaximumErrorCount",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.MaximumErrorCount\">\r\n            <summary>\r\n            The maximum number of errors that can be handled. If more errors are received,\r\n            they will be treated as fatal. Calling <see cref=\"M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.Recover\" /> resets the count.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Int32"
        }
      },
      {
        "Flags": 1,
        "Name": "Context",
        "PropertyName": "Context",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.ErrorBoundary.Context",
        "Documentation": {
          "Id": 12
        },
        "Metadata": {
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary",
      "Common.TypeNameIdentifier": "ErrorBoundary",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -1909692317191354067,
      "Data2": 6297039375307115311,
      "Data3": 4025451499814144107,
      "Data4": -1771725126571405159
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Web.ErrorBoundary\">\r\n            <summary>\r\n            Captures errors thrown from its child content.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "ChildContent",
        "PropertyName": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent\">\r\n            <summary>\r\n            The content to be displayed when there is no error.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "ErrorContent",
        "PropertyName": "ErrorContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.Exception>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<System.Exception> Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent\">\r\n            <summary>\r\n            The content to be displayed when there is an error.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Exception>",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "MaximumErrorCount",
        "PropertyName": "MaximumErrorCount",
        "TypeName": 2,
        "DisplayName": "int Microsoft.AspNetCore.Components.Web.ErrorBoundary.MaximumErrorCount",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.MaximumErrorCount\">\r\n            <summary>\r\n            The maximum number of errors that can be handled. If more errors are received,\r\n            they will be treated as fatal. Calling <see cref=\"M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.Recover\" /> resets the count.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Int32"
        }
      },
      {
        "Flags": 1,
        "Name": "Context",
        "PropertyName": "Context",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.ErrorBoundary.Context",
        "Documentation": {
          "Id": 12
        },
        "Metadata": {
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary",
      "Common.TypeNameIdentifier": "ErrorBoundary",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 261270750634103872,
      "Data2": -4040289822247437557,
      "Data3": 6581640238067111153,
      "Data4": -2618668067638517728
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent\">\r\n            <summary>\r\n            The content to be displayed when there is no error.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "ErrorBoundary"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent",
      "Common.TypeNameIdentifier": "ErrorBoundary",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 5917622561271015659,
      "Data2": -2730896909733352661,
      "Data3": -3179414723649827394,
      "Data4": 5575495618834739495
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent\">\r\n            <summary>\r\n            The content to be displayed when there is no error.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "Microsoft.AspNetCore.Components.Web.ErrorBoundary"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent",
      "Common.TypeNameIdentifier": "ErrorBoundary",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 5433912510595946458,
      "Data2": 1059985405447201108,
      "Data3": 3776362802966142186,
      "Data4": -2262353302905658542
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent\">\r\n            <summary>\r\n            The content to be displayed when there is an error.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ErrorContent",
        "ParentTag": "ErrorBoundary"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "Context",
        "PropertyName": "Context",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "ErrorContent"
          ]
        },
        "Metadata": {
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent",
      "Common.TypeNameIdentifier": "ErrorBoundary",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -3650600357146419620,
      "Data2": 3782380509218860594,
      "Data3": -5686375447886324585,
      "Data4": 9063903576534241856
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent\">\r\n            <summary>\r\n            The content to be displayed when there is an error.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ErrorContent",
        "ParentTag": "Microsoft.AspNetCore.Components.Web.ErrorBoundary"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "Context",
        "PropertyName": "Context",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "ErrorContent"
          ]
        },
        "Metadata": {
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent",
      "Common.TypeNameIdentifier": "ErrorBoundary",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -3624078940721240173,
      "Data2": -2132128362422914005,
      "Data3": -7092240865245600004,
      "Data4": 2299184527483124847
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1\">\r\n            <summary>\r\n            Provides functionality for rendering a virtualized list of items.\r\n            </summary>\r\n            <typeparam name=\"TItem\">The <c>context</c> type for the items being rendered.</typeparam>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Virtualize"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "TItem",
        "PropertyName": "TItem",
        "TypeName": 17,
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.TItem",
        "Documentation": {
          "Id": 13,
          "Args": [
            "TItem",
            "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>"
          ]
        },
        "Metadata": {
          "Components.TypeParameter": "True",
          "Components.TypeParameterIsCascading": "False"
        }
      },
      {
        "Flags": 1,
        "Name": "ChildContent",
        "PropertyName": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<TItem> Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<TItem>",
          "Components.ChildContent": "True",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "ItemContent",
        "PropertyName": "ItemContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<TItem> Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<TItem>",
          "Components.ChildContent": "True",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "Placeholder",
        "PropertyName": "Placeholder",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext> Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Placeholder\">\r\n            <summary>\r\n            Gets or sets the template for items that have not yet been loaded in memory.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "ItemSize",
        "PropertyName": "ItemSize",
        "TypeName": 10,
        "DisplayName": "float Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemSize",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemSize\">\r\n            <summary>\r\n            Gets the size of each item in pixels. Defaults to 50px.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Single"
        }
      },
      {
        "Flags": 1,
        "Name": "ItemsProvider",
        "PropertyName": "ItemsProvider",
        "TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>",
        "DisplayName": "Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem> Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemsProvider",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemsProvider\">\r\n            <summary>\r\n            Gets or sets the function providing items to the list.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>",
          "Components.DelegateSignature": "True",
          "Components.GenericTyped": "True",
          "Components.IsDelegateAwaitableResult": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "Items",
        "PropertyName": "Items",
        "TypeName": "System.Collections.Generic.ICollection<TItem>",
        "DisplayName": "System.Collections.Generic.ICollection<TItem> Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Items",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Items\">\r\n            <summary>\r\n            Gets or sets the fixed item source.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.ICollection<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "OverscanCount",
        "PropertyName": "OverscanCount",
        "TypeName": 2,
        "DisplayName": "int Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.OverscanCount",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.OverscanCount\">\r\n            <summary>\r\n            Gets or sets a value that determines how many additional items will be rendered\r\n            before and after the visible region. This help to reduce the frequency of rendering\r\n            during scrolling. However, higher values mean that more elements will be present\r\n            in the page.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Int32"
        }
      },
      {
        "Flags": 1,
        "Name": "Context",
        "PropertyName": "Context",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Context",
        "Documentation": {
          "Id": 12
        },
        "Metadata": {
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>",
      "Common.TypeNameIdentifier": "Virtualize",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
      "Components.GenericTyped": "True",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": -9034395591642709153,
      "Data2": 2177839162121366932,
      "Data3": -7685092110465112326,
      "Data4": -3836591496173325165
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1\">\r\n            <summary>\r\n            Provides functionality for rendering a virtualized list of items.\r\n            </summary>\r\n            <typeparam name=\"TItem\">The <c>context</c> type for the items being rendered.</typeparam>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "TItem",
        "PropertyName": "TItem",
        "TypeName": 17,
        "DisplayName": "System.Type Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.TItem",
        "Documentation": {
          "Id": 13,
          "Args": [
            "TItem",
            "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>"
          ]
        },
        "Metadata": {
          "Components.TypeParameter": "True",
          "Components.TypeParameterIsCascading": "False"
        }
      },
      {
        "Flags": 1,
        "Name": "ChildContent",
        "PropertyName": "ChildContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<TItem> Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<TItem>",
          "Components.ChildContent": "True",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "ItemContent",
        "PropertyName": "ItemContent",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<TItem> Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<TItem>",
          "Components.ChildContent": "True",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "Placeholder",
        "PropertyName": "Placeholder",
        "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>",
        "DisplayName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext> Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Placeholder\">\r\n            <summary>\r\n            Gets or sets the template for items that have not yet been loaded in memory.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>",
          "Components.ChildContent": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "ItemSize",
        "PropertyName": "ItemSize",
        "TypeName": 10,
        "DisplayName": "float Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemSize",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemSize\">\r\n            <summary>\r\n            Gets the size of each item in pixels. Defaults to 50px.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Single"
        }
      },
      {
        "Flags": 1,
        "Name": "ItemsProvider",
        "PropertyName": "ItemsProvider",
        "TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>",
        "DisplayName": "Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem> Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemsProvider",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemsProvider\">\r\n            <summary>\r\n            Gets or sets the function providing items to the list.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>",
          "Components.DelegateSignature": "True",
          "Components.GenericTyped": "True",
          "Components.IsDelegateAwaitableResult": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "Items",
        "PropertyName": "Items",
        "TypeName": "System.Collections.Generic.ICollection<TItem>",
        "DisplayName": "System.Collections.Generic.ICollection<TItem> Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Items",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Items\">\r\n            <summary>\r\n            Gets or sets the fixed item source.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.ICollection<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "Flags": 1,
        "Name": "OverscanCount",
        "PropertyName": "OverscanCount",
        "TypeName": 2,
        "DisplayName": "int Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.OverscanCount",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.OverscanCount\">\r\n            <summary>\r\n            Gets or sets a value that determines how many additional items will be rendered\r\n            before and after the visible region. This help to reduce the frequency of rendering\r\n            during scrolling. However, higher values mean that more elements will be present\r\n            in the page.\r\n            </summary>\r\n        </member>",
        "Metadata": {
          "Common.GloballyQualifiedTypeName": "global::System.Int32"
        }
      },
      {
        "Flags": 1,
        "Name": "Context",
        "PropertyName": "Context",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Context",
        "Documentation": {
          "Id": 12
        },
        "Metadata": {
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>",
      "Common.TypeNameIdentifier": "Virtualize",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
      "Components.GenericTyped": "True",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 1965576729706764426,
      "Data2": -5345670785877430849,
      "Data3": -5529802402768879618,
      "Data4": 494700760799062781
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "Virtualize"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "Context",
        "PropertyName": "Context",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "ChildContent"
          ]
        },
        "Metadata": {
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
      "Common.TypeNameIdentifier": "Virtualize",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -3058284565147914720,
      "Data2": 3423410522444088128,
      "Data3": -4980338486103367261,
      "Data4": -8931537268337595389
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ChildContent",
        "ParentTag": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "Context",
        "PropertyName": "Context",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "ChildContent"
          ]
        },
        "Metadata": {
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
      "Common.TypeNameIdentifier": "Virtualize",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -372137553625742857,
      "Data2": -2097575255388965705,
      "Data3": 474504272947974286,
      "Data4": 777190322179889982
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ItemContent",
        "ParentTag": "Virtualize"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "Context",
        "PropertyName": "Context",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "ItemContent"
          ]
        },
        "Metadata": {
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
      "Common.TypeNameIdentifier": "Virtualize",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -7215278392398867792,
      "Data2": -8391015111549290636,
      "Data3": -3814581055148144022,
      "Data4": -5558377985749780789
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "ItemContent",
        "ParentTag": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "Context",
        "PropertyName": "Context",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "ItemContent"
          ]
        },
        "Metadata": {
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
      "Common.TypeNameIdentifier": "Virtualize",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -752977253723724466,
      "Data2": 7680354126425964712,
      "Data3": 5399299947677830924,
      "Data4": 4124890282338538246
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Placeholder\">\r\n            <summary>\r\n            Gets or sets the template for items that have not yet been loaded in memory.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Placeholder",
        "ParentTag": "Virtualize"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "Context",
        "PropertyName": "Context",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "Placeholder"
          ]
        },
        "Metadata": {
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
      "Common.TypeNameIdentifier": "Virtualize",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -8755610822999589699,
      "Data2": -3494587831394433705,
      "Data3": 359650340695961775,
      "Data4": 6229203976858953976
    },
    "Kind": "Components.ChildContent",
    "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
    "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Placeholder\">\r\n            <summary>\r\n            Gets or sets the template for items that have not yet been loaded in memory.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Placeholder",
        "ParentTag": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 1,
        "Name": "Context",
        "PropertyName": "Context",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder.Context",
        "Documentation": {
          "Id": 11,
          "Args": [
            "Placeholder"
          ]
        },
        "Metadata": {
          "Components.ChildContentParameterName": "True"
        }
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
      "Common.TypeNameIdentifier": "Virtualize",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
      "Components.IsSpecialKind": "Components.ChildContent",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 500541897763460105,
      "Data2": -3904160715621637890,
      "Data3": 6762557291463073251,
      "Data4": -5996836073700211021
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
    "AssemblyName": "Microsoft.AspNetCore.Components.Forms",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator\">\r\n            <summary>\r\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "DataAnnotationsValidator"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
      "Common.TypeNameIdentifier": "DataAnnotationsValidator",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 2065598637635591165,
      "Data2": -8291259146149664641,
      "Data3": 9219671010491672983,
      "Data4": 6550648898376690199
    },
    "Kind": "Components.Component",
    "Name": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
    "AssemblyName": "Microsoft.AspNetCore.Components.Forms",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator\">\r\n            <summary>\r\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
      "Common.TypeNameIdentifier": "DataAnnotationsValidator",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.IComponent"
    }
  },
  {
    "__Checksum": {
      "Data1": 5906818966133540070,
      "Data2": -2719795039903786383,
      "Data3": -8389329147398508057,
      "Data4": 5620252750879835427
    },
    "Kind": "Components.EventHandler",
    "Name": "onfocus",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onfocus",
        "Microsoft.AspNetCore.Components.Web.FocusEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onfocus"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onfocus:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onfocus:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onfocus",
        "PropertyName": "onfocus",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onfocus",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onfocus",
            "Microsoft.AspNetCore.Components.Web.FocusEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onfocus"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onfocus"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 1850918851798499112,
      "Data2": 3812719716581447483,
      "Data3": -2721996186692414378,
      "Data4": 5913235386185295584
    },
    "Kind": "Components.EventHandler",
    "Name": "onblur",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onblur",
        "Microsoft.AspNetCore.Components.Web.FocusEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onblur"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onblur:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onblur:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onblur",
        "PropertyName": "onblur",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onblur",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onblur",
            "Microsoft.AspNetCore.Components.Web.FocusEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onblur"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onblur"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -8142497872823786985,
      "Data2": -3652056426543669603,
      "Data3": 2017267984161249908,
      "Data4": 6030597117555469576
    },
    "Kind": "Components.EventHandler",
    "Name": "onfocusin",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onfocusin",
        "Microsoft.AspNetCore.Components.Web.FocusEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onfocusin"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onfocusin:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onfocusin:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onfocusin",
        "PropertyName": "onfocusin",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onfocusin",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onfocusin",
            "Microsoft.AspNetCore.Components.Web.FocusEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onfocusin"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onfocusin"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -8704681098628219909,
      "Data2": 7690193373573565393,
      "Data3": -5671518159454633900,
      "Data4": -2930050409117838793
    },
    "Kind": "Components.EventHandler",
    "Name": "onfocusout",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onfocusout",
        "Microsoft.AspNetCore.Components.Web.FocusEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onfocusout"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onfocusout:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onfocusout:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onfocusout",
        "PropertyName": "onfocusout",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onfocusout",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onfocusout",
            "Microsoft.AspNetCore.Components.Web.FocusEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onfocusout"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onfocusout"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 4557961545913185147,
      "Data2": -4836955831771939143,
      "Data3": -5552917938585021599,
      "Data4": -4698382440181192385
    },
    "Kind": "Components.EventHandler",
    "Name": "onmouseover",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onmouseover",
        "Microsoft.AspNetCore.Components.Web.MouseEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onmouseover"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onmouseover:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onmouseover:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onmouseover",
        "PropertyName": "onmouseover",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onmouseover",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onmouseover",
            "Microsoft.AspNetCore.Components.Web.MouseEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onmouseover"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onmouseover"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -3540625291870821153,
      "Data2": -5726256530257485048,
      "Data3": -4590059658388574211,
      "Data4": -4265706459512691807
    },
    "Kind": "Components.EventHandler",
    "Name": "onmouseout",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onmouseout",
        "Microsoft.AspNetCore.Components.Web.MouseEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onmouseout"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onmouseout:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onmouseout:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onmouseout",
        "PropertyName": "onmouseout",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onmouseout",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onmouseout",
            "Microsoft.AspNetCore.Components.Web.MouseEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onmouseout"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onmouseout"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -4241187142039701759,
      "Data2": -6001108606095169782,
      "Data3": 5582851566662922208,
      "Data4": -5678884270038422127
    },
    "Kind": "Components.EventHandler",
    "Name": "onmousemove",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onmousemove",
        "Microsoft.AspNetCore.Components.Web.MouseEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onmousemove"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onmousemove:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onmousemove:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onmousemove",
        "PropertyName": "onmousemove",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onmousemove",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onmousemove",
            "Microsoft.AspNetCore.Components.Web.MouseEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onmousemove"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onmousemove"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -5904321878168015893,
      "Data2": 2921177786952289135,
      "Data3": 2652797319497227091,
      "Data4": -5547952300440497499
    },
    "Kind": "Components.EventHandler",
    "Name": "onmousedown",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onmousedown",
        "Microsoft.AspNetCore.Components.Web.MouseEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onmousedown"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onmousedown:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onmousedown:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onmousedown",
        "PropertyName": "onmousedown",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onmousedown",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onmousedown",
            "Microsoft.AspNetCore.Components.Web.MouseEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onmousedown"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onmousedown"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -2316224825338013166,
      "Data2": 7801667186229238656,
      "Data3": 7889211387475495451,
      "Data4": 8894709653975945224
    },
    "Kind": "Components.EventHandler",
    "Name": "onmouseup",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onmouseup",
        "Microsoft.AspNetCore.Components.Web.MouseEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onmouseup"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onmouseup:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onmouseup:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onmouseup",
        "PropertyName": "onmouseup",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onmouseup",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onmouseup",
            "Microsoft.AspNetCore.Components.Web.MouseEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onmouseup"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onmouseup"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -5672224392494745296,
      "Data2": 7470146208090535935,
      "Data3": -8839638883222157430,
      "Data4": 7186971825504960937
    },
    "Kind": "Components.EventHandler",
    "Name": "onclick",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onclick",
        "Microsoft.AspNetCore.Components.Web.MouseEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onclick"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onclick:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onclick:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onclick",
        "PropertyName": "onclick",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onclick",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onclick",
            "Microsoft.AspNetCore.Components.Web.MouseEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onclick"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onclick"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -5600349870073352068,
      "Data2": -5936794318522796241,
      "Data3": -4913952875589370095,
      "Data4": 4941221651817108084
    },
    "Kind": "Components.EventHandler",
    "Name": "ondblclick",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ondblclick",
        "Microsoft.AspNetCore.Components.Web.MouseEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ondblclick"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ondblclick:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ondblclick:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@ondblclick",
        "PropertyName": "ondblclick",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ondblclick",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ondblclick",
            "Microsoft.AspNetCore.Components.Web.MouseEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ondblclick"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ondblclick"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 4305183266528844650,
      "Data2": 1669781784259029432,
      "Data3": -1939153760501672712,
      "Data4": 7218048948480728939
    },
    "Kind": "Components.EventHandler",
    "Name": "onwheel",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onwheel",
        "Microsoft.AspNetCore.Components.Web.WheelEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onwheel"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onwheel:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onwheel:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onwheel",
        "PropertyName": "onwheel",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onwheel",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onwheel",
            "Microsoft.AspNetCore.Components.Web.WheelEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onwheel"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onwheel"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.WheelEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -6517556321903324302,
      "Data2": -2684764050480651658,
      "Data3": 6735619429216619633,
      "Data4": 8536769234791950944
    },
    "Kind": "Components.EventHandler",
    "Name": "onmousewheel",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onmousewheel",
        "Microsoft.AspNetCore.Components.Web.WheelEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onmousewheel"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onmousewheel:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onmousewheel:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onmousewheel",
        "PropertyName": "onmousewheel",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onmousewheel",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onmousewheel",
            "Microsoft.AspNetCore.Components.Web.WheelEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onmousewheel"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onmousewheel"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.WheelEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -5663104759764211615,
      "Data2": -6353374968932063380,
      "Data3": 8638567954032501934,
      "Data4": -8570836947172759024
    },
    "Kind": "Components.EventHandler",
    "Name": "oncontextmenu",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@oncontextmenu",
        "Microsoft.AspNetCore.Components.Web.MouseEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@oncontextmenu"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@oncontextmenu:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@oncontextmenu:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@oncontextmenu",
        "PropertyName": "oncontextmenu",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.oncontextmenu",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@oncontextmenu",
            "Microsoft.AspNetCore.Components.Web.MouseEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@oncontextmenu"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@oncontextmenu"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -5390374706030862943,
      "Data2": -3683002243828445078,
      "Data3": 2384229266716076000,
      "Data4": 2191860461095316006
    },
    "Kind": "Components.EventHandler",
    "Name": "ondrag",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ondrag",
        "Microsoft.AspNetCore.Components.Web.DragEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ondrag"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ondrag:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ondrag:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@ondrag",
        "PropertyName": "ondrag",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ondrag",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ondrag",
            "Microsoft.AspNetCore.Components.Web.DragEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ondrag"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ondrag"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 6913434238067183878,
      "Data2": 3790575942440090281,
      "Data3": 8019621201409752897,
      "Data4": -6130175821522858093
    },
    "Kind": "Components.EventHandler",
    "Name": "ondragend",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ondragend",
        "Microsoft.AspNetCore.Components.Web.DragEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ondragend"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ondragend:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ondragend:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@ondragend",
        "PropertyName": "ondragend",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ondragend",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ondragend",
            "Microsoft.AspNetCore.Components.Web.DragEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ondragend"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ondragend"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 6718900741526833836,
      "Data2": -1104740759716170083,
      "Data3": -6669338548104328736,
      "Data4": -1326226668912894788
    },
    "Kind": "Components.EventHandler",
    "Name": "ondragenter",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ondragenter",
        "Microsoft.AspNetCore.Components.Web.DragEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ondragenter"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ondragenter:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ondragenter:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@ondragenter",
        "PropertyName": "ondragenter",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ondragenter",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ondragenter",
            "Microsoft.AspNetCore.Components.Web.DragEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ondragenter"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ondragenter"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 9085640153545160720,
      "Data2": 7068443294751987319,
      "Data3": -4163184477524647159,
      "Data4": 8168105259993826007
    },
    "Kind": "Components.EventHandler",
    "Name": "ondragleave",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ondragleave",
        "Microsoft.AspNetCore.Components.Web.DragEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ondragleave"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ondragleave:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ondragleave:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@ondragleave",
        "PropertyName": "ondragleave",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ondragleave",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ondragleave",
            "Microsoft.AspNetCore.Components.Web.DragEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ondragleave"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ondragleave"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -8778567086406278488,
      "Data2": -9131179081089422017,
      "Data3": 1706479706945665113,
      "Data4": -3547355342285510539
    },
    "Kind": "Components.EventHandler",
    "Name": "ondragover",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ondragover",
        "Microsoft.AspNetCore.Components.Web.DragEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ondragover"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ondragover:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ondragover:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@ondragover",
        "PropertyName": "ondragover",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ondragover",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ondragover",
            "Microsoft.AspNetCore.Components.Web.DragEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ondragover"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ondragover"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 521493262848577447,
      "Data2": -3930896089195474255,
      "Data3": 8917576459006494388,
      "Data4": 8679681761560926064
    },
    "Kind": "Components.EventHandler",
    "Name": "ondragstart",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ondragstart",
        "Microsoft.AspNetCore.Components.Web.DragEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ondragstart"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ondragstart:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ondragstart:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@ondragstart",
        "PropertyName": "ondragstart",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ondragstart",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ondragstart",
            "Microsoft.AspNetCore.Components.Web.DragEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ondragstart"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ondragstart"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -8986353546002738382,
      "Data2": 1979473433201740470,
      "Data3": 4120866172343624088,
      "Data4": 2391136120725127310
    },
    "Kind": "Components.EventHandler",
    "Name": "ondrop",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ondrop",
        "Microsoft.AspNetCore.Components.Web.DragEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ondrop"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ondrop:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ondrop:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@ondrop",
        "PropertyName": "ondrop",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ondrop",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ondrop",
            "Microsoft.AspNetCore.Components.Web.DragEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ondrop"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ondrop"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -6893906191667805134,
      "Data2": 4159817896331954176,
      "Data3": -4448428824321475197,
      "Data4": 5461624271866801019
    },
    "Kind": "Components.EventHandler",
    "Name": "onkeydown",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onkeydown",
        "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onkeydown"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onkeydown:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onkeydown:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onkeydown",
        "PropertyName": "onkeydown",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onkeydown",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onkeydown",
            "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onkeydown"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onkeydown"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -2631209758409900517,
      "Data2": 4103363273909184447,
      "Data3": -70626509925551864,
      "Data4": 1045830546114218982
    },
    "Kind": "Components.EventHandler",
    "Name": "onkeyup",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onkeyup",
        "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onkeyup"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onkeyup:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onkeyup:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onkeyup",
        "PropertyName": "onkeyup",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onkeyup",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onkeyup",
            "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onkeyup"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onkeyup"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -2609451159138239815,
      "Data2": 8126985516216192065,
      "Data3": -1583887721149583249,
      "Data4": 4005032787499456108
    },
    "Kind": "Components.EventHandler",
    "Name": "onkeypress",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onkeypress",
        "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onkeypress"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onkeypress:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onkeypress:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onkeypress",
        "PropertyName": "onkeypress",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onkeypress",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onkeypress",
            "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onkeypress"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onkeypress"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 3162138694728256079,
      "Data2": 6586976159420996194,
      "Data3": 3499969059324808126,
      "Data4": -7016845117932875101
    },
    "Kind": "Components.EventHandler",
    "Name": "onchange",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onchange",
        "Microsoft.AspNetCore.Components.ChangeEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onchange"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onchange:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onchange:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onchange",
        "PropertyName": "onchange",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onchange",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onchange",
            "Microsoft.AspNetCore.Components.ChangeEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onchange"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onchange"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.ChangeEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 1211752474310692018,
      "Data2": 5245473361506879961,
      "Data3": -3834997690958110844,
      "Data4": 6312130016601068019
    },
    "Kind": "Components.EventHandler",
    "Name": "oninput",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@oninput",
        "Microsoft.AspNetCore.Components.ChangeEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@oninput"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@oninput:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@oninput:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@oninput",
        "PropertyName": "oninput",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.oninput",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@oninput",
            "Microsoft.AspNetCore.Components.ChangeEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@oninput"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@oninput"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.ChangeEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -8588654860517922606,
      "Data2": -8183921418491669139,
      "Data3": 6368865019822596099,
      "Data4": -3903687155842854824
    },
    "Kind": "Components.EventHandler",
    "Name": "oninvalid",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@oninvalid",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@oninvalid"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@oninvalid:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@oninvalid:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@oninvalid",
        "PropertyName": "oninvalid",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.oninvalid",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@oninvalid",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@oninvalid"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@oninvalid"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 3008339615067694202,
      "Data2": 6596726683543179158,
      "Data3": 1741984150475695063,
      "Data4": 5357427164434033373
    },
    "Kind": "Components.EventHandler",
    "Name": "onreset",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onreset",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onreset"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onreset:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onreset:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onreset",
        "PropertyName": "onreset",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onreset",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onreset",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onreset"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onreset"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -619623267623420398,
      "Data2": 5293635060478444444,
      "Data3": -7490312244475992609,
      "Data4": 6435803561004938601
    },
    "Kind": "Components.EventHandler",
    "Name": "onselect",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onselect",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onselect"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onselect:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onselect:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onselect",
        "PropertyName": "onselect",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onselect",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onselect",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onselect"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onselect"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -7509922354610242581,
      "Data2": -2701122776390767194,
      "Data3": -5514044099705469596,
      "Data4": 547770691353912085
    },
    "Kind": "Components.EventHandler",
    "Name": "onselectstart",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onselectstart",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onselectstart"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onselectstart:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onselectstart:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onselectstart",
        "PropertyName": "onselectstart",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onselectstart",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onselectstart",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onselectstart"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onselectstart"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 2905334713137318383,
      "Data2": -5982624707207238829,
      "Data3": -1646145265852224667,
      "Data4": 2598397800450820783
    },
    "Kind": "Components.EventHandler",
    "Name": "onselectionchange",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onselectionchange",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onselectionchange"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onselectionchange:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onselectionchange:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onselectionchange",
        "PropertyName": "onselectionchange",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onselectionchange",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onselectionchange",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onselectionchange"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onselectionchange"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -7701671821155383953,
      "Data2": -2693304450281598763,
      "Data3": 6725018700604949747,
      "Data4": 2881424965147325987
    },
    "Kind": "Components.EventHandler",
    "Name": "onsubmit",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onsubmit",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onsubmit"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onsubmit:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onsubmit:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onsubmit",
        "PropertyName": "onsubmit",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onsubmit",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onsubmit",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onsubmit"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onsubmit"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 4960924438313330281,
      "Data2": -2252040148115003838,
      "Data3": -3361192810032635781,
      "Data4": 7932795205244617481
    },
    "Kind": "Components.EventHandler",
    "Name": "onbeforecopy",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onbeforecopy",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onbeforecopy"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onbeforecopy:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onbeforecopy:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onbeforecopy",
        "PropertyName": "onbeforecopy",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onbeforecopy",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onbeforecopy",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onbeforecopy"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onbeforecopy"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 4136157546865191777,
      "Data2": -6660044356940203874,
      "Data3": -2814370985838155065,
      "Data4": 7340357867259671016
    },
    "Kind": "Components.EventHandler",
    "Name": "onbeforecut",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onbeforecut",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onbeforecut"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onbeforecut:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onbeforecut:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onbeforecut",
        "PropertyName": "onbeforecut",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onbeforecut",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onbeforecut",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onbeforecut"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onbeforecut"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -1000669590335980023,
      "Data2": -8981374394195734575,
      "Data3": 5526998731206939192,
      "Data4": -4700300113222472576
    },
    "Kind": "Components.EventHandler",
    "Name": "onbeforepaste",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onbeforepaste",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onbeforepaste"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onbeforepaste:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onbeforepaste:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onbeforepaste",
        "PropertyName": "onbeforepaste",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onbeforepaste",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onbeforepaste",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onbeforepaste"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onbeforepaste"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 8790890210134768532,
      "Data2": 6728759221211313177,
      "Data3": 2471032974269894863,
      "Data4": -2946310920983578147
    },
    "Kind": "Components.EventHandler",
    "Name": "oncopy",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@oncopy",
        "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@oncopy"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@oncopy:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@oncopy:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@oncopy",
        "PropertyName": "oncopy",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.oncopy",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@oncopy",
            "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@oncopy"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@oncopy"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 1187040101369994655,
      "Data2": 3432798713313567749,
      "Data3": -4514875420235125779,
      "Data4": -3362949252392977846
    },
    "Kind": "Components.EventHandler",
    "Name": "oncut",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@oncut",
        "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@oncut"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@oncut:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@oncut:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@oncut",
        "PropertyName": "oncut",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.oncut",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@oncut",
            "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@oncut"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@oncut"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -9069430438799249070,
      "Data2": -4858326633066642495,
      "Data3": -7665136103472748150,
      "Data4": -2548058601449239117
    },
    "Kind": "Components.EventHandler",
    "Name": "onpaste",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onpaste",
        "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpaste"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpaste:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpaste:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onpaste",
        "PropertyName": "onpaste",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onpaste",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onpaste",
            "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onpaste"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onpaste"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 57540973410958840,
      "Data2": 3684453698949708185,
      "Data3": 8145799259753626786,
      "Data4": 2566650047590612763
    },
    "Kind": "Components.EventHandler",
    "Name": "ontouchcancel",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ontouchcancel",
        "Microsoft.AspNetCore.Components.Web.TouchEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ontouchcancel"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ontouchcancel:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ontouchcancel:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@ontouchcancel",
        "PropertyName": "ontouchcancel",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ontouchcancel",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ontouchcancel",
            "Microsoft.AspNetCore.Components.Web.TouchEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ontouchcancel"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ontouchcancel"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 5737394878067729276,
      "Data2": -2223153010951471690,
      "Data3": 6232918322710232126,
      "Data4": -7334503641755231042
    },
    "Kind": "Components.EventHandler",
    "Name": "ontouchend",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ontouchend",
        "Microsoft.AspNetCore.Components.Web.TouchEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ontouchend"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ontouchend:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ontouchend:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@ontouchend",
        "PropertyName": "ontouchend",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ontouchend",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ontouchend",
            "Microsoft.AspNetCore.Components.Web.TouchEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ontouchend"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ontouchend"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 593870455252264597,
      "Data2": -6100024579908039979,
      "Data3": 150348631979493132,
      "Data4": 5856082056844518775
    },
    "Kind": "Components.EventHandler",
    "Name": "ontouchmove",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ontouchmove",
        "Microsoft.AspNetCore.Components.Web.TouchEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ontouchmove"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ontouchmove:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ontouchmove:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@ontouchmove",
        "PropertyName": "ontouchmove",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ontouchmove",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ontouchmove",
            "Microsoft.AspNetCore.Components.Web.TouchEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ontouchmove"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ontouchmove"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 389605328197253190,
      "Data2": 2236486020215600,
      "Data3": 3101222782643518242,
      "Data4": 8088831860071450156
    },
    "Kind": "Components.EventHandler",
    "Name": "ontouchstart",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ontouchstart",
        "Microsoft.AspNetCore.Components.Web.TouchEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ontouchstart"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ontouchstart:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ontouchstart:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@ontouchstart",
        "PropertyName": "ontouchstart",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ontouchstart",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ontouchstart",
            "Microsoft.AspNetCore.Components.Web.TouchEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ontouchstart"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ontouchstart"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 5551862696464420603,
      "Data2": -7302442716272544839,
      "Data3": -3917770148532862782,
      "Data4": 1942376019946614368
    },
    "Kind": "Components.EventHandler",
    "Name": "ontouchenter",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ontouchenter",
        "Microsoft.AspNetCore.Components.Web.TouchEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ontouchenter"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ontouchenter:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ontouchenter:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@ontouchenter",
        "PropertyName": "ontouchenter",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ontouchenter",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ontouchenter",
            "Microsoft.AspNetCore.Components.Web.TouchEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ontouchenter"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ontouchenter"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -752010632195063467,
      "Data2": 5991799103070533139,
      "Data3": 3534420298895005943,
      "Data4": -7571992258027641561
    },
    "Kind": "Components.EventHandler",
    "Name": "ontouchleave",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ontouchleave",
        "Microsoft.AspNetCore.Components.Web.TouchEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ontouchleave"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ontouchleave:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ontouchleave:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@ontouchleave",
        "PropertyName": "ontouchleave",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ontouchleave",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ontouchleave",
            "Microsoft.AspNetCore.Components.Web.TouchEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ontouchleave"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ontouchleave"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 7874640000883456277,
      "Data2": 6231516996893655085,
      "Data3": -7583775730324960061,
      "Data4": 2035203074478916961
    },
    "Kind": "Components.EventHandler",
    "Name": "ongotpointercapture",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ongotpointercapture",
        "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ongotpointercapture"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ongotpointercapture:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ongotpointercapture:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@ongotpointercapture",
        "PropertyName": "ongotpointercapture",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ongotpointercapture",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ongotpointercapture",
            "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ongotpointercapture"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ongotpointercapture"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -8717751798295982413,
      "Data2": 8524640076238536091,
      "Data3": -7386086482845507666,
      "Data4": 760381777061247201
    },
    "Kind": "Components.EventHandler",
    "Name": "onlostpointercapture",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onlostpointercapture",
        "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onlostpointercapture"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onlostpointercapture:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onlostpointercapture:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onlostpointercapture",
        "PropertyName": "onlostpointercapture",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onlostpointercapture",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onlostpointercapture",
            "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onlostpointercapture"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onlostpointercapture"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 7264421873194413137,
      "Data2": 4697379733834502490,
      "Data3": -6344632272012485583,
      "Data4": 8152413005520972901
    },
    "Kind": "Components.EventHandler",
    "Name": "onpointercancel",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onpointercancel",
        "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpointercancel"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpointercancel:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpointercancel:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onpointercancel",
        "PropertyName": "onpointercancel",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onpointercancel",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onpointercancel",
            "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onpointercancel"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onpointercancel"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 8482626376111638845,
      "Data2": 1086217928011770517,
      "Data3": -2475364265794839521,
      "Data4": 8119974871756925733
    },
    "Kind": "Components.EventHandler",
    "Name": "onpointerdown",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onpointerdown",
        "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpointerdown"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpointerdown:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpointerdown:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onpointerdown",
        "PropertyName": "onpointerdown",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onpointerdown",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onpointerdown",
            "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onpointerdown"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onpointerdown"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -4774907282849713440,
      "Data2": 5006477986929998446,
      "Data3": -4633698080868403015,
      "Data4": -7016495534984297541
    },
    "Kind": "Components.EventHandler",
    "Name": "onpointerenter",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onpointerenter",
        "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpointerenter"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpointerenter:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpointerenter:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onpointerenter",
        "PropertyName": "onpointerenter",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onpointerenter",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onpointerenter",
            "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onpointerenter"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onpointerenter"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 3920913360798458019,
      "Data2": 5905438020533686226,
      "Data3": -4233386370038101811,
      "Data4": 7819074293075228118
    },
    "Kind": "Components.EventHandler",
    "Name": "onpointerleave",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onpointerleave",
        "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpointerleave"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpointerleave:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpointerleave:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onpointerleave",
        "PropertyName": "onpointerleave",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onpointerleave",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onpointerleave",
            "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onpointerleave"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onpointerleave"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -7430511018776205717,
      "Data2": 6178137482832675493,
      "Data3": 2127844686155907613,
      "Data4": 2865307940963033303
    },
    "Kind": "Components.EventHandler",
    "Name": "onpointermove",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onpointermove",
        "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpointermove"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpointermove:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpointermove:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onpointermove",
        "PropertyName": "onpointermove",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onpointermove",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onpointermove",
            "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onpointermove"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onpointermove"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -8941042455788904972,
      "Data2": 6357021946972916649,
      "Data3": 3031559125661165016,
      "Data4": 4498430010090139050
    },
    "Kind": "Components.EventHandler",
    "Name": "onpointerout",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onpointerout",
        "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpointerout"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpointerout:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpointerout:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onpointerout",
        "PropertyName": "onpointerout",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onpointerout",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onpointerout",
            "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onpointerout"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onpointerout"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -565806511221865476,
      "Data2": 1677108691013384263,
      "Data3": 7701777913486291724,
      "Data4": -8870286042550849901
    },
    "Kind": "Components.EventHandler",
    "Name": "onpointerover",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onpointerover",
        "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpointerover"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpointerover:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpointerover:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onpointerover",
        "PropertyName": "onpointerover",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onpointerover",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onpointerover",
            "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onpointerover"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onpointerover"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 8742358608793569843,
      "Data2": 1903413461040918897,
      "Data3": -281225369948096999,
      "Data4": 1144814663100857071
    },
    "Kind": "Components.EventHandler",
    "Name": "onpointerup",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onpointerup",
        "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpointerup"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpointerup:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpointerup:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onpointerup",
        "PropertyName": "onpointerup",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onpointerup",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onpointerup",
            "Microsoft.AspNetCore.Components.Web.PointerEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onpointerup"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onpointerup"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 5954541992014496903,
      "Data2": -2343881996047777789,
      "Data3": 4810157139754393912,
      "Data4": -9191775034935267280
    },
    "Kind": "Components.EventHandler",
    "Name": "oncanplay",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@oncanplay",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@oncanplay"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@oncanplay:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@oncanplay:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@oncanplay",
        "PropertyName": "oncanplay",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.oncanplay",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@oncanplay",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@oncanplay"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@oncanplay"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 2387478951723212629,
      "Data2": 3937285399159327127,
      "Data3": -8084606978116334833,
      "Data4": -5792789942314161502
    },
    "Kind": "Components.EventHandler",
    "Name": "oncanplaythrough",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@oncanplaythrough",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@oncanplaythrough"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@oncanplaythrough:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@oncanplaythrough:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@oncanplaythrough",
        "PropertyName": "oncanplaythrough",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.oncanplaythrough",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@oncanplaythrough",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@oncanplaythrough"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@oncanplaythrough"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 634477217602384182,
      "Data2": -729981467689991720,
      "Data3": -7883948596717674808,
      "Data4": -58698688985120941
    },
    "Kind": "Components.EventHandler",
    "Name": "oncuechange",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@oncuechange",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@oncuechange"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@oncuechange:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@oncuechange:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@oncuechange",
        "PropertyName": "oncuechange",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.oncuechange",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@oncuechange",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@oncuechange"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@oncuechange"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 8356583761714352642,
      "Data2": -1618988346728016540,
      "Data3": -6345737454758109779,
      "Data4": 2181843527759149018
    },
    "Kind": "Components.EventHandler",
    "Name": "ondurationchange",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ondurationchange",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ondurationchange"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ondurationchange:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ondurationchange:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@ondurationchange",
        "PropertyName": "ondurationchange",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ondurationchange",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ondurationchange",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ondurationchange"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ondurationchange"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -3738048570818893370,
      "Data2": -8120010785296950594,
      "Data3": 5500333664655188747,
      "Data4": 2590788479583089173
    },
    "Kind": "Components.EventHandler",
    "Name": "onemptied",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onemptied",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onemptied"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onemptied:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onemptied:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onemptied",
        "PropertyName": "onemptied",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onemptied",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onemptied",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onemptied"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onemptied"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 6430287840591453883,
      "Data2": 2241959009902280339,
      "Data3": -2438492537312752101,
      "Data4": 4742787090596018202
    },
    "Kind": "Components.EventHandler",
    "Name": "onpause",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onpause",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpause"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpause:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpause:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onpause",
        "PropertyName": "onpause",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onpause",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onpause",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onpause"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onpause"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 3273015530614989442,
      "Data2": 4372053658537409099,
      "Data3": -5352547767558549631,
      "Data4": -6066575094892546184
    },
    "Kind": "Components.EventHandler",
    "Name": "onplay",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onplay",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onplay"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onplay:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onplay:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onplay",
        "PropertyName": "onplay",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onplay",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onplay",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onplay"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onplay"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 2903181757102980873,
      "Data2": 1436221577112262545,
      "Data3": 1312996577154835732,
      "Data4": 7421068407129085600
    },
    "Kind": "Components.EventHandler",
    "Name": "onplaying",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onplaying",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onplaying"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onplaying:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onplaying:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onplaying",
        "PropertyName": "onplaying",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onplaying",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onplaying",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onplaying"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onplaying"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 6114606021347772603,
      "Data2": -2703878095170515447,
      "Data3": -5904116279040102733,
      "Data4": 5442882609071142530
    },
    "Kind": "Components.EventHandler",
    "Name": "onratechange",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onratechange",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onratechange"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onratechange:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onratechange:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onratechange",
        "PropertyName": "onratechange",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onratechange",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onratechange",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onratechange"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onratechange"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -8056203077652366696,
      "Data2": -1684209743738676290,
      "Data3": 6669570544359115970,
      "Data4": -3140996922578237065
    },
    "Kind": "Components.EventHandler",
    "Name": "onseeked",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onseeked",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onseeked"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onseeked:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onseeked:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onseeked",
        "PropertyName": "onseeked",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onseeked",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onseeked",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onseeked"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onseeked"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 4811223024345208007,
      "Data2": -9012696193216635304,
      "Data3": 3195977725691390224,
      "Data4": 9217782120937298711
    },
    "Kind": "Components.EventHandler",
    "Name": "onseeking",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onseeking",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onseeking"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onseeking:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onseeking:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onseeking",
        "PropertyName": "onseeking",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onseeking",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onseeking",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onseeking"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onseeking"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 832583483446088345,
      "Data2": 8126855088856179667,
      "Data3": 1535948117388658759,
      "Data4": -1750526280612801706
    },
    "Kind": "Components.EventHandler",
    "Name": "onstalled",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onstalled",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onstalled"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onstalled:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onstalled:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onstalled",
        "PropertyName": "onstalled",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onstalled",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onstalled",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onstalled"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onstalled"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 3286475288636947802,
      "Data2": -8150229575204381959,
      "Data3": -1954169627259541578,
      "Data4": -5143229681912288424
    },
    "Kind": "Components.EventHandler",
    "Name": "onstop",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onstop",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onstop"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onstop:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onstop:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onstop",
        "PropertyName": "onstop",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onstop",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onstop",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onstop"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onstop"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 3620485042067720577,
      "Data2": 6155260076045829559,
      "Data3": -5303596846616794619,
      "Data4": 5125605278287467997
    },
    "Kind": "Components.EventHandler",
    "Name": "onsuspend",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onsuspend",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onsuspend"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onsuspend:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onsuspend:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onsuspend",
        "PropertyName": "onsuspend",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onsuspend",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onsuspend",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onsuspend"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onsuspend"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -5659008577570639000,
      "Data2": 894530960624623438,
      "Data3": 6469759234267327433,
      "Data4": 107628084402660067
    },
    "Kind": "Components.EventHandler",
    "Name": "ontimeupdate",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ontimeupdate",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ontimeupdate"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ontimeupdate:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ontimeupdate:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@ontimeupdate",
        "PropertyName": "ontimeupdate",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ontimeupdate",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ontimeupdate",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ontimeupdate"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ontimeupdate"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 1109544839733966113,
      "Data2": -7737916837370328530,
      "Data3": -6369261667896597998,
      "Data4": 5532246686301682409
    },
    "Kind": "Components.EventHandler",
    "Name": "onvolumechange",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onvolumechange",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onvolumechange"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onvolumechange:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onvolumechange:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onvolumechange",
        "PropertyName": "onvolumechange",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onvolumechange",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onvolumechange",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onvolumechange"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onvolumechange"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -5887032424361109872,
      "Data2": -3905735810842166423,
      "Data3": -6962668573236017264,
      "Data4": 3394321390137953486
    },
    "Kind": "Components.EventHandler",
    "Name": "onwaiting",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onwaiting",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onwaiting"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onwaiting:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onwaiting:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onwaiting",
        "PropertyName": "onwaiting",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onwaiting",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onwaiting",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onwaiting"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onwaiting"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 3430372048916119613,
      "Data2": -5276322331501263989,
      "Data3": 5248130038834598859,
      "Data4": -1076481957977210351
    },
    "Kind": "Components.EventHandler",
    "Name": "onloadstart",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onloadstart",
        "Microsoft.AspNetCore.Components.Web.ProgressEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onloadstart"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onloadstart:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onloadstart:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onloadstart",
        "PropertyName": "onloadstart",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onloadstart",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onloadstart",
            "Microsoft.AspNetCore.Components.Web.ProgressEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onloadstart"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onloadstart"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 8784444507568373984,
      "Data2": -6255813008882532858,
      "Data3": 3911827113579063383,
      "Data4": 8392174350829030113
    },
    "Kind": "Components.EventHandler",
    "Name": "ontimeout",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ontimeout",
        "Microsoft.AspNetCore.Components.Web.ProgressEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ontimeout"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ontimeout:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ontimeout:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@ontimeout",
        "PropertyName": "ontimeout",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ontimeout",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ontimeout",
            "Microsoft.AspNetCore.Components.Web.ProgressEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ontimeout"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ontimeout"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 3700676004813661346,
      "Data2": 5722996461050493293,
      "Data3": 6466827672879244570,
      "Data4": 7298240899433768956
    },
    "Kind": "Components.EventHandler",
    "Name": "onabort",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onabort",
        "Microsoft.AspNetCore.Components.Web.ProgressEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onabort"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onabort:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onabort:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onabort",
        "PropertyName": "onabort",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onabort",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onabort",
            "Microsoft.AspNetCore.Components.Web.ProgressEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onabort"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onabort"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 56499105710967875,
      "Data2": -5229689943599733239,
      "Data3": 2771213835866062715,
      "Data4": -7905499823809834550
    },
    "Kind": "Components.EventHandler",
    "Name": "onload",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onload",
        "Microsoft.AspNetCore.Components.Web.ProgressEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onload"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onload:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onload:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onload",
        "PropertyName": "onload",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onload",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onload",
            "Microsoft.AspNetCore.Components.Web.ProgressEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onload"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onload"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -7104570304603583379,
      "Data2": 2103127908943271067,
      "Data3": -3445127038864418950,
      "Data4": 6813397599085060991
    },
    "Kind": "Components.EventHandler",
    "Name": "onloadend",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onloadend",
        "Microsoft.AspNetCore.Components.Web.ProgressEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onloadend"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onloadend:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onloadend:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onloadend",
        "PropertyName": "onloadend",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onloadend",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onloadend",
            "Microsoft.AspNetCore.Components.Web.ProgressEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onloadend"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onloadend"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 8812571069375565370,
      "Data2": 4604727004866408734,
      "Data3": 2771275030734107896,
      "Data4": 8411738466072298016
    },
    "Kind": "Components.EventHandler",
    "Name": "onprogress",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onprogress",
        "Microsoft.AspNetCore.Components.Web.ProgressEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onprogress"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onprogress:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onprogress:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onprogress",
        "PropertyName": "onprogress",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onprogress",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onprogress",
            "Microsoft.AspNetCore.Components.Web.ProgressEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onprogress"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onprogress"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 4485673049158002124,
      "Data2": -8198673525419368268,
      "Data3": 5462677229071417026,
      "Data4": 5677041376716242086
    },
    "Kind": "Components.EventHandler",
    "Name": "onerror",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onerror",
        "Microsoft.AspNetCore.Components.Web.ErrorEventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onerror"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onerror:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onerror:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onerror",
        "PropertyName": "onerror",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ErrorEventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ErrorEventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onerror",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onerror",
            "Microsoft.AspNetCore.Components.Web.ErrorEventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onerror"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onerror"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ErrorEventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 3888635195115329674,
      "Data2": 2926856295454362077,
      "Data3": 8846487624190446547,
      "Data4": -9087186931724323644
    },
    "Kind": "Components.EventHandler",
    "Name": "onactivate",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onactivate",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onactivate"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onactivate:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onactivate:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onactivate",
        "PropertyName": "onactivate",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onactivate",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onactivate",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onactivate"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onactivate"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -586244942552605783,
      "Data2": -7391066936332505358,
      "Data3": 7318155424783776710,
      "Data4": 8710263609364818210
    },
    "Kind": "Components.EventHandler",
    "Name": "onbeforeactivate",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onbeforeactivate",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onbeforeactivate"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onbeforeactivate:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onbeforeactivate:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onbeforeactivate",
        "PropertyName": "onbeforeactivate",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onbeforeactivate",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onbeforeactivate",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onbeforeactivate"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onbeforeactivate"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -5188911533342237870,
      "Data2": -7439917057398606426,
      "Data3": -7844284195250827675,
      "Data4": 5035448243163115239
    },
    "Kind": "Components.EventHandler",
    "Name": "onbeforedeactivate",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onbeforedeactivate",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onbeforedeactivate"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onbeforedeactivate:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onbeforedeactivate:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onbeforedeactivate",
        "PropertyName": "onbeforedeactivate",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onbeforedeactivate",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onbeforedeactivate",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onbeforedeactivate"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onbeforedeactivate"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -6804418817849789715,
      "Data2": -6575155047767931153,
      "Data3": 1575697069827632326,
      "Data4": 820866427440715194
    },
    "Kind": "Components.EventHandler",
    "Name": "ondeactivate",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ondeactivate",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ondeactivate"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ondeactivate:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ondeactivate:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@ondeactivate",
        "PropertyName": "ondeactivate",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ondeactivate",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ondeactivate",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ondeactivate"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ondeactivate"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -2219151407785528615,
      "Data2": 1727152499952875610,
      "Data3": 8767120818834131306,
      "Data4": -6924196584662786313
    },
    "Kind": "Components.EventHandler",
    "Name": "onended",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onended",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onended"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onended:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onended:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onended",
        "PropertyName": "onended",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onended",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onended",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onended"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onended"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 1092841008995674379,
      "Data2": 5864033637837919026,
      "Data3": -2486942246577045669,
      "Data4": 3116814628197220745
    },
    "Kind": "Components.EventHandler",
    "Name": "onfullscreenchange",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onfullscreenchange",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onfullscreenchange"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onfullscreenchange:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onfullscreenchange:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onfullscreenchange",
        "PropertyName": "onfullscreenchange",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onfullscreenchange",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onfullscreenchange",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onfullscreenchange"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onfullscreenchange"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 5156400933642677118,
      "Data2": -8427488997300704595,
      "Data3": 757825461332417751,
      "Data4": 4773446388496441173
    },
    "Kind": "Components.EventHandler",
    "Name": "onfullscreenerror",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onfullscreenerror",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onfullscreenerror"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onfullscreenerror:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onfullscreenerror:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onfullscreenerror",
        "PropertyName": "onfullscreenerror",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onfullscreenerror",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onfullscreenerror",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onfullscreenerror"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onfullscreenerror"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 657519906379826986,
      "Data2": -7398990093724868750,
      "Data3": 5711020457737535974,
      "Data4": -6909935399496073911
    },
    "Kind": "Components.EventHandler",
    "Name": "onloadeddata",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onloadeddata",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onloadeddata"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onloadeddata:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onloadeddata:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onloadeddata",
        "PropertyName": "onloadeddata",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onloadeddata",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onloadeddata",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onloadeddata"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onloadeddata"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -3351128168805236026,
      "Data2": -3262702976479261864,
      "Data3": -5570843934142044093,
      "Data4": 2430695814427815228
    },
    "Kind": "Components.EventHandler",
    "Name": "onloadedmetadata",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onloadedmetadata",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onloadedmetadata"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onloadedmetadata:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onloadedmetadata:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onloadedmetadata",
        "PropertyName": "onloadedmetadata",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onloadedmetadata",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onloadedmetadata",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onloadedmetadata"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onloadedmetadata"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 3104760656377006547,
      "Data2": -1461303916121160404,
      "Data3": 239424739088436703,
      "Data4": 456079474872816961
    },
    "Kind": "Components.EventHandler",
    "Name": "onpointerlockchange",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onpointerlockchange",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpointerlockchange"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpointerlockchange:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpointerlockchange:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onpointerlockchange",
        "PropertyName": "onpointerlockchange",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onpointerlockchange",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onpointerlockchange",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onpointerlockchange"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onpointerlockchange"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -8970694385387141108,
      "Data2": 7582599297467639881,
      "Data3": 5027514560453796185,
      "Data4": 7436848062030706102
    },
    "Kind": "Components.EventHandler",
    "Name": "onpointerlockerror",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onpointerlockerror",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpointerlockerror"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpointerlockerror:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onpointerlockerror:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onpointerlockerror",
        "PropertyName": "onpointerlockerror",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onpointerlockerror",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onpointerlockerror",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onpointerlockerror"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onpointerlockerror"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 7248418282348099648,
      "Data2": -4633293795776620318,
      "Data3": 5627718475322501194,
      "Data4": 5053205085588507992
    },
    "Kind": "Components.EventHandler",
    "Name": "onreadystatechange",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onreadystatechange",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onreadystatechange"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onreadystatechange:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onreadystatechange:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onreadystatechange",
        "PropertyName": "onreadystatechange",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onreadystatechange",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onreadystatechange",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onreadystatechange"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onreadystatechange"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -88303287883781690,
      "Data2": -1009522730752374843,
      "Data3": 4814584092413728063,
      "Data4": -2309422219799430979
    },
    "Kind": "Components.EventHandler",
    "Name": "onscroll",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@onscroll",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onscroll"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onscroll:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@onscroll:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@onscroll",
        "PropertyName": "onscroll",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.onscroll",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@onscroll",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@onscroll"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@onscroll"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -6364918427938750117,
      "Data2": 6059131337841908808,
      "Data3": 7834981214244119797,
      "Data4": 1814753690548232804
    },
    "Kind": "Components.EventHandler",
    "Name": "ontoggle",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
    "Documentation": {
      "Id": 14,
      "Args": [
        "@ontoggle",
        "System.EventArgs"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ontoggle"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ontoggle:preventDefault"
          }
        ]
      },
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ontoggle:stopPropagation"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@ontoggle",
        "PropertyName": "ontoggle",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs> Microsoft.AspNetCore.Components.Web.EventHandlers.ontoggle",
        "Documentation": {
          "Id": 14,
          "Args": [
            "@ontoggle",
            "System.EventArgs"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "preventDefault",
            "PropertyName": "PreventDefault",
            "TypeName": 1,
            "Documentation": {
              "Id": 15,
              "Args": [
                "@ontoggle"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "stopPropagation",
            "PropertyName": "StopPropagation",
            "TypeName": 1,
            "Documentation": {
              "Id": 16,
              "Args": [
                "@ontoggle"
              ]
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
      "Common.TypeNameIdentifier": "EventHandlers",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.EventHandler.EventArgs": "System.EventArgs",
      "Components.IsSpecialKind": "Components.EventHandler",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -4189301922085283947,
      "Data2": 6011627494124139105,
      "Data3": -6208148409386827872,
      "Data4": -765104088975140313
    },
    "Kind": "Components.Splat",
    "Name": "Attributes",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Attributes",
    "Documentation": {
      "Id": 19
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@attributes"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@attributes",
        "PropertyName": "Attributes",
        "TypeName": 0,
        "DisplayName": "object Microsoft.AspNetCore.Components.Attributes.Attributes",
        "Documentation": {
          "Id": 19
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Attributes",
      "Components.IsSpecialKind": "Components.Splat",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 4492373837994568484,
      "Data2": -37180601093176826,
      "Data3": -4654285676525275703,
      "Data4": -1525708919704918207
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;a&gt; elements.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "a",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-action"
          }
        ]
      },
      {
        "TagName": "a",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-controller"
          }
        ]
      },
      {
        "TagName": "a",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-area"
          }
        ]
      },
      {
        "TagName": "a",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-page"
          }
        ]
      },
      {
        "TagName": "a",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-page-handler"
          }
        ]
      },
      {
        "TagName": "a",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-fragment"
          }
        ]
      },
      {
        "TagName": "a",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-host"
          }
        ]
      },
      {
        "TagName": "a",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-protocol"
          }
        ]
      },
      {
        "TagName": "a",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-route"
          }
        ]
      },
      {
        "TagName": "a",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-all-route-data"
          }
        ]
      },
      {
        "TagName": "a",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-route-",
            "NameComparison": 1
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 0,
        "Name": "asp-action",
        "PropertyName": "Action",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\">\r\n            <summary>\r\n            The name of the action method.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\r\n            </remarks>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-controller",
        "PropertyName": "Controller",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\">\r\n            <summary>\r\n            The name of the controller.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\r\n            </remarks>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-area",
        "PropertyName": "Area",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Area",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Area\">\r\n            <summary>\r\n            The name of the area.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> is non-<c>null</c>.\r\n            </remarks>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-page",
        "PropertyName": "Page",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\">\r\n            <summary>\r\n            The name of the page.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />\r\n            is non-<c>null</c>.\r\n            </remarks>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-page-handler",
        "PropertyName": "PageHandler",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.PageHandler",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.PageHandler\">\r\n            <summary>\r\n            The name of the page handler.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />\r\n            is non-<c>null</c>.\r\n            </remarks>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-protocol",
        "PropertyName": "Protocol",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Protocol",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Protocol\">\r\n            <summary>\r\n            The protocol for the URL, such as \"http\" or \"https\".\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-host",
        "PropertyName": "Host",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Host",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Host\">\r\n            <summary>\r\n            The host name.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-fragment",
        "PropertyName": "Fragment",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Fragment",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Fragment\">\r\n            <summary>\r\n            The URL fragment name.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-route",
        "PropertyName": "Route",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\">\r\n            <summary>\r\n            Name of the route.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if one of <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Area\" />\r\n            or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\r\n            </remarks>\r\n        </member>"
      },
      {
        "Flags": 2,
        "Name": "asp-all-route-data",
        "PropertyName": "RouteValues",
        "TypeName": "System.Collections.Generic.IDictionary<System.String, System.String>",
        "IndexerNamePrefix": "asp-route-",
        "IndexerTypeName": 14,
        "DisplayName": "System.Collections.Generic.IDictionary<System.String, System.String> Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.RouteValues",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.RouteValues\">\r\n            <summary>\r\n            Additional parameters for the route.\r\n            </summary>\r\n        </member>"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper",
      "Common.TypeNameIdentifier": "AnchorTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": 3786868273528601253,
      "Data2": 8255299483035873894,
      "Data3": -4800109028557423670,
      "Data4": -1361091780835114236
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> implementation targeting &lt;cache&gt; elements.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "cache",
        "CaseSensitive": false
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 0,
        "Name": "priority",
        "PropertyName": "Priority",
        "TypeName": "Microsoft.Extensions.Caching.Memory.CacheItemPriority?",
        "DisplayName": "Microsoft.Extensions.Caching.Memory.CacheItemPriority? Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper.Priority",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper.Priority\">\r\n            <summary>\r\n            Gets or sets the <see cref=\"T:Microsoft.Extensions.Caching.Memory.CacheItemPriority\" /> policy for the cache entry.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "vary-by",
        "PropertyName": "VaryBy",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper.VaryBy",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryBy\">\r\n            <summary>\r\n            Gets or sets a <see cref=\"T:System.String\" /> to vary the cached result by.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "vary-by-header",
        "PropertyName": "VaryByHeader",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper.VaryByHeader",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByHeader\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of HTTP request headers to vary the cached result by.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "vary-by-query",
        "PropertyName": "VaryByQuery",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper.VaryByQuery",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByQuery\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of query parameters to vary the cached result by.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "vary-by-route",
        "PropertyName": "VaryByRoute",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper.VaryByRoute",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByRoute\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of route data parameters to vary the cached result by.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "vary-by-cookie",
        "PropertyName": "VaryByCookie",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper.VaryByCookie",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByCookie\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of cookie names to vary the cached result by.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "vary-by-user",
        "PropertyName": "VaryByUser",
        "TypeName": 1,
        "DisplayName": "bool Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper.VaryByUser",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByUser\">\r\n            <summary>\r\n            Gets or sets a value that determines if the cached result is to be varied by the Identity for the logged in\r\n            <see cref=\"P:Microsoft.AspNetCore.Http.HttpContext.User\" />.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "vary-by-culture",
        "PropertyName": "VaryByCulture",
        "TypeName": 1,
        "DisplayName": "bool Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper.VaryByCulture",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByCulture\">\r\n            <summary>\r\n            Gets or sets a value that determines if the cached result is to be varied by request culture.\r\n            <para>\r\n            Setting this to <c>true</c> would result in the result to be varied by <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />\r\n            and <see cref=\"P:System.Globalization.CultureInfo.CurrentUICulture\" />.\r\n            </para>\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "expires-on",
        "PropertyName": "ExpiresOn",
        "TypeName": "System.DateTimeOffset?",
        "DisplayName": "System.DateTimeOffset? Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper.ExpiresOn",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresOn\">\r\n            <summary>\r\n            Gets or sets the exact <see cref=\"T:System.DateTimeOffset\" /> the cache entry should be evicted.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "expires-after",
        "PropertyName": "ExpiresAfter",
        "TypeName": "System.TimeSpan?",
        "DisplayName": "System.TimeSpan? Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper.ExpiresAfter",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresAfter\">\r\n            <summary>\r\n            Gets or sets the duration, from the time the cache entry was added, when it should be evicted.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "expires-sliding",
        "PropertyName": "ExpiresSliding",
        "TypeName": "System.TimeSpan?",
        "DisplayName": "System.TimeSpan? Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper.ExpiresSliding",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresSliding\">\r\n            <summary>\r\n            Gets or sets the duration from last access that the cache entry should be evicted.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "enabled",
        "PropertyName": "Enabled",
        "TypeName": 1,
        "DisplayName": "bool Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper.Enabled",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.Enabled\">\r\n            <summary>\r\n            Gets or sets the value which determines if the tag helper is enabled or not.\r\n            </summary>\r\n        </member>"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper",
      "Common.TypeNameIdentifier": "CacheTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": -5392932685665075563,
      "Data2": 3736384194974047104,
      "Data3": 6823097214801390264,
      "Data4": 1675343717164496417
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper\">\r\n            <summary>\r\n            A <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> that renders a Razor component.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "component",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "type"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 2,
        "Name": "params",
        "PropertyName": "Parameters",
        "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
        "IndexerNamePrefix": "param-",
        "IndexerTypeName": 0,
        "DisplayName": "System.Collections.Generic.IDictionary<System.String, System.Object> Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper.Parameters",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper.Parameters\">\r\n            <summary>\r\n            Gets or sets values for component parameters.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "type",
        "PropertyName": "ComponentType",
        "TypeName": 17,
        "DisplayName": "System.Type Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper.ComponentType",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper.ComponentType\">\r\n            <summary>\r\n            Gets or sets the component type. This value is required.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 4,
        "Name": "render-mode",
        "PropertyName": "RenderMode",
        "TypeName": "Microsoft.AspNetCore.Mvc.Rendering.RenderMode",
        "DisplayName": "Microsoft.AspNetCore.Mvc.Rendering.RenderMode Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper.RenderMode",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper.RenderMode\">\r\n            <summary>\r\n            Gets or sets the <see cref=\"T:Microsoft.AspNetCore.Mvc.Rendering.RenderMode\" />\r\n            </summary>\r\n        </member>"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper",
      "Common.TypeNameIdentifier": "ComponentTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": -1248782435556341282,
      "Data2": -722520139521606301,
      "Data3": 3113539141301208068,
      "Data4": -408652639283479707
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> implementation targeting &lt;distributed-cache&gt; elements.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "distributed-cache",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "name"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 0,
        "Name": "name",
        "PropertyName": "Name",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper.Name",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper.Name\">\r\n            <summary>\r\n            Gets or sets a unique name to discriminate cached entries.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "vary-by",
        "PropertyName": "VaryBy",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper.VaryBy",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryBy\">\r\n            <summary>\r\n            Gets or sets a <see cref=\"T:System.String\" /> to vary the cached result by.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "vary-by-header",
        "PropertyName": "VaryByHeader",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper.VaryByHeader",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByHeader\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of HTTP request headers to vary the cached result by.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "vary-by-query",
        "PropertyName": "VaryByQuery",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper.VaryByQuery",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByQuery\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of query parameters to vary the cached result by.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "vary-by-route",
        "PropertyName": "VaryByRoute",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper.VaryByRoute",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByRoute\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of route data parameters to vary the cached result by.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "vary-by-cookie",
        "PropertyName": "VaryByCookie",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper.VaryByCookie",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByCookie\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of cookie names to vary the cached result by.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "vary-by-user",
        "PropertyName": "VaryByUser",
        "TypeName": 1,
        "DisplayName": "bool Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper.VaryByUser",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByUser\">\r\n            <summary>\r\n            Gets or sets a value that determines if the cached result is to be varied by the Identity for the logged in\r\n            <see cref=\"P:Microsoft.AspNetCore.Http.HttpContext.User\" />.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "vary-by-culture",
        "PropertyName": "VaryByCulture",
        "TypeName": 1,
        "DisplayName": "bool Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper.VaryByCulture",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByCulture\">\r\n            <summary>\r\n            Gets or sets a value that determines if the cached result is to be varied by request culture.\r\n            <para>\r\n            Setting this to <c>true</c> would result in the result to be varied by <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />\r\n            and <see cref=\"P:System.Globalization.CultureInfo.CurrentUICulture\" />.\r\n            </para>\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "expires-on",
        "PropertyName": "ExpiresOn",
        "TypeName": "System.DateTimeOffset?",
        "DisplayName": "System.DateTimeOffset? Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper.ExpiresOn",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresOn\">\r\n            <summary>\r\n            Gets or sets the exact <see cref=\"T:System.DateTimeOffset\" /> the cache entry should be evicted.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "expires-after",
        "PropertyName": "ExpiresAfter",
        "TypeName": "System.TimeSpan?",
        "DisplayName": "System.TimeSpan? Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper.ExpiresAfter",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresAfter\">\r\n            <summary>\r\n            Gets or sets the duration, from the time the cache entry was added, when it should be evicted.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "expires-sliding",
        "PropertyName": "ExpiresSliding",
        "TypeName": "System.TimeSpan?",
        "DisplayName": "System.TimeSpan? Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper.ExpiresSliding",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresSliding\">\r\n            <summary>\r\n            Gets or sets the duration from last access that the cache entry should be evicted.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "enabled",
        "PropertyName": "Enabled",
        "TypeName": 1,
        "DisplayName": "bool Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper.Enabled",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.Enabled\">\r\n            <summary>\r\n            Gets or sets the value which determines if the tag helper is enabled or not.\r\n            </summary>\r\n        </member>"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper",
      "Common.TypeNameIdentifier": "DistributedCacheTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": 5262834490346358862,
      "Data2": -3001439437018705293,
      "Data3": -3798866861033423656,
      "Data4": -8511006142557555280
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;environment&gt; elements that conditionally renders\r\n            content based on the current value of <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\r\n            If the environment is not listed in the specified <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Names\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Include\" />,\r\n            or if it is in <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" />, the content will not be rendered.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "environment",
        "CaseSensitive": false
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 0,
        "Name": "names",
        "PropertyName": "Names",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Names",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Names\">\r\n            <summary>\r\n            A comma separated list of environment names in which the content should be rendered.\r\n            If the current environment is also in the <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" /> list, the content will not be rendered.\r\n            </summary>\r\n            <remarks>\r\n            The specified environment names are compared case insensitively to the current value of\r\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\r\n            </remarks>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "include",
        "PropertyName": "Include",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Include",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Include\">\r\n            <summary>\r\n            A comma separated list of environment names in which the content should be rendered.\r\n            If the current environment is also in the <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" /> list, the content will not be rendered.\r\n            </summary>\r\n            <remarks>\r\n            The specified environment names are compared case insensitively to the current value of\r\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\r\n            </remarks>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "exclude",
        "PropertyName": "Exclude",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\">\r\n            <summary>\r\n            A comma separated list of environment names in which the content will not be rendered.\r\n            </summary>\r\n            <remarks>\r\n            The specified environment names are compared case insensitively to the current value of\r\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\r\n            </remarks>\r\n        </member>"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper",
      "Common.TypeNameIdentifier": "EnvironmentTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": 7228461581165144711,
      "Data2": 5149955250185198579,
      "Data3": -3122448547107883598,
      "Data4": 5488262336254830258
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;button&gt; elements and &lt;input&gt; elements with\r\n            their <c>type</c> attribute set to <c>image</c> or <c>submit</c>.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "button",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-action"
          }
        ]
      },
      {
        "TagName": "button",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-controller"
          }
        ]
      },
      {
        "TagName": "button",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-area"
          }
        ]
      },
      {
        "TagName": "button",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-page"
          }
        ]
      },
      {
        "TagName": "button",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-page-handler"
          }
        ]
      },
      {
        "TagName": "button",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-fragment"
          }
        ]
      },
      {
        "TagName": "button",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-route"
          }
        ]
      },
      {
        "TagName": "button",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-all-route-data"
          }
        ]
      },
      {
        "TagName": "button",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-route-",
            "NameComparison": 1
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "type",
            "Value": "image",
            "ValueComparison": 1
          },
          {
            "Flags": 0,
            "Name": "asp-action"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "type",
            "Value": "image",
            "ValueComparison": 1
          },
          {
            "Flags": 0,
            "Name": "asp-controller"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "type",
            "Value": "image",
            "ValueComparison": 1
          },
          {
            "Flags": 0,
            "Name": "asp-area"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "type",
            "Value": "image",
            "ValueComparison": 1
          },
          {
            "Flags": 0,
            "Name": "asp-page"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "type",
            "Value": "image",
            "ValueComparison": 1
          },
          {
            "Flags": 0,
            "Name": "asp-page-handler"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "type",
            "Value": "image",
            "ValueComparison": 1
          },
          {
            "Flags": 0,
            "Name": "asp-fragment"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "type",
            "Value": "image",
            "ValueComparison": 1
          },
          {
            "Flags": 0,
            "Name": "asp-route"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "type",
            "Value": "image",
            "ValueComparison": 1
          },
          {
            "Flags": 0,
            "Name": "asp-all-route-data"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "type",
            "Value": "image",
            "ValueComparison": 1
          },
          {
            "Flags": 0,
            "Name": "asp-route-",
            "NameComparison": 1
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "type",
            "Value": "submit",
            "ValueComparison": 1
          },
          {
            "Flags": 0,
            "Name": "asp-action"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "type",
            "Value": "submit",
            "ValueComparison": 1
          },
          {
            "Flags": 0,
            "Name": "asp-controller"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "type",
            "Value": "submit",
            "ValueComparison": 1
          },
          {
            "Flags": 0,
            "Name": "asp-area"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "type",
            "Value": "submit",
            "ValueComparison": 1
          },
          {
            "Flags": 0,
            "Name": "asp-page"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "type",
            "Value": "submit",
            "ValueComparison": 1
          },
          {
            "Flags": 0,
            "Name": "asp-page-handler"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "type",
            "Value": "submit",
            "ValueComparison": 1
          },
          {
            "Flags": 0,
            "Name": "asp-fragment"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "type",
            "Value": "submit",
            "ValueComparison": 1
          },
          {
            "Flags": 0,
            "Name": "asp-route"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "type",
            "Value": "submit",
            "ValueComparison": 1
          },
          {
            "Flags": 0,
            "Name": "asp-all-route-data"
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "type",
            "Value": "submit",
            "ValueComparison": 1
          },
          {
            "Flags": 0,
            "Name": "asp-route-",
            "NameComparison": 1
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 0,
        "Name": "asp-action",
        "PropertyName": "Action",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Action",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Action\">\r\n            <summary>\r\n            The name of the action method.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-controller",
        "PropertyName": "Controller",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Controller",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Controller\">\r\n            <summary>\r\n            The name of the controller.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-area",
        "PropertyName": "Area",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Area",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Area\">\r\n            <summary>\r\n            The name of the area.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-page",
        "PropertyName": "Page",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Page",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Page\">\r\n            <summary>\r\n            The name of the page.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-page-handler",
        "PropertyName": "PageHandler",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.PageHandler",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.PageHandler\">\r\n            <summary>\r\n            The name of the page handler.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-fragment",
        "PropertyName": "Fragment",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Fragment",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Fragment\">\r\n            <summary>\r\n            Gets or sets the URL fragment.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-route",
        "PropertyName": "Route",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Route",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Route\">\r\n            <summary>\r\n            Name of the route.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Action\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Controller\" /> is non-<c>null</c>.\r\n            </remarks>\r\n        </member>"
      },
      {
        "Flags": 2,
        "Name": "asp-all-route-data",
        "PropertyName": "RouteValues",
        "TypeName": "System.Collections.Generic.IDictionary<System.String, System.String>",
        "IndexerNamePrefix": "asp-route-",
        "IndexerTypeName": 14,
        "DisplayName": "System.Collections.Generic.IDictionary<System.String, System.String> Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.RouteValues",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.RouteValues\">\r\n            <summary>\r\n            Additional parameters for the route.\r\n            </summary>\r\n        </member>"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper",
      "Common.TypeNameIdentifier": "FormActionTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": -8985626750392605157,
      "Data2": -3524305558801934226,
      "Data3": 7248404948852599050,
      "Data4": 2812491762560868895
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;form&gt; elements.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "form",
        "CaseSensitive": false
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 0,
        "Name": "asp-action",
        "PropertyName": "Action",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Action",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Action\">\r\n            <summary>\r\n            The name of the action method.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-controller",
        "PropertyName": "Controller",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Controller",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Controller\">\r\n            <summary>\r\n            The name of the controller.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-area",
        "PropertyName": "Area",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Area",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Area\">\r\n            <summary>\r\n            The name of the area.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-page",
        "PropertyName": "Page",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Page",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Page\">\r\n            <summary>\r\n            The name of the page.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-page-handler",
        "PropertyName": "PageHandler",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.PageHandler",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.PageHandler\">\r\n            <summary>\r\n            The name of the page handler.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-antiforgery",
        "PropertyName": "Antiforgery",
        "TypeName": "System.Boolean?",
        "DisplayName": "System.Boolean? Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Antiforgery",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Antiforgery\">\r\n            <summary>\r\n            Whether the antiforgery token should be generated.\r\n            </summary>\r\n            <value>Defaults to <c>false</c> if user provides an <c>action</c> attribute\r\n            or if the <c>method</c> is <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.FormMethod.Get\" />; <c>true</c> otherwise.</value>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-fragment",
        "PropertyName": "Fragment",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Fragment",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Fragment\">\r\n            <summary>\r\n            Gets or sets the URL fragment.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-route",
        "PropertyName": "Route",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Route",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Route\">\r\n            <summary>\r\n            Name of the route.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Action\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Controller\" /> is non-<c>null</c>.\r\n            </remarks>\r\n        </member>"
      },
      {
        "Flags": 2,
        "Name": "asp-all-route-data",
        "PropertyName": "RouteValues",
        "TypeName": "System.Collections.Generic.IDictionary<System.String, System.String>",
        "IndexerNamePrefix": "asp-route-",
        "IndexerTypeName": 14,
        "DisplayName": "System.Collections.Generic.IDictionary<System.String, System.String> Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.RouteValues",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.RouteValues\">\r\n            <summary>\r\n            Additional parameters for the route.\r\n            </summary>\r\n        </member>"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper",
      "Common.TypeNameIdentifier": "FormTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": 5641552511940377533,
      "Data2": -8082326790116318286,
      "Data3": 3559325151538207344,
      "Data4": -6933936720132941946
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;img&gt; elements that supports file versioning.\r\n            </summary>\r\n            <remarks>\r\n            The tag helper won't process for cases with just the 'src' attribute.\r\n            </remarks>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "img",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-append-version"
          },
          {
            "Flags": 0,
            "Name": "src"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 0,
        "Name": "src",
        "PropertyName": "Src",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper.Src",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper.Src\">\r\n            <summary>\r\n            Source of the image.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases.\r\n            </remarks>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-append-version",
        "PropertyName": "AppendVersion",
        "TypeName": 1,
        "DisplayName": "bool Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper.AppendVersion",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper.AppendVersion\">\r\n            <summary>\r\n            Value indicating if file version should be appended to the src urls.\r\n            </summary>\r\n            <remarks>\r\n            If <c>true</c> then a query string \"v\" with the encoded content of the file is added.\r\n            </remarks>\r\n        </member>"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper",
      "Common.TypeNameIdentifier": "ImageTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": -8577887019502125052,
      "Data2": 26553122472475256,
      "Data3": -872972936630214801,
      "Data4": -3285627835195344043
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;input&gt; elements with an <c>asp-for</c> attribute.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-for"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 0,
        "Name": "asp-for",
        "PropertyName": "For",
        "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression",
        "DisplayName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For\">\r\n            <summary>\r\n            An expression to be evaluated against the current model.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-format",
        "PropertyName": "Format",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\">\r\n            <summary>\r\n            The format string (see https://msdn.microsoft.com/en-us/library/txafckwd.aspx) used to format the\r\n            <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For\" /> result. Sets the generated \"value\" attribute to that formatted string.\r\n            </summary>\r\n            <remarks>\r\n            Not used if the provided (see <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" />) or calculated \"type\" attribute value is\r\n            <c>checkbox</c>, <c>password</c>, or <c>radio</c>. That is, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> is used when calling\r\n            <see cref=\"M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GenerateTextBox(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Object,System.String,System.Object)\" />.\r\n            </remarks>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "type",
        "PropertyName": "InputTypeName",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\">\r\n            <summary>\r\n            The type of the &lt;input&gt; element.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases. Also used to determine the <see cref=\"T:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator\" />\r\n            helper to call and the default <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> value. A default <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> is not calculated\r\n            if the provided (see <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" />) or calculated \"type\" attribute value is <c>checkbox</c>,\r\n            <c>hidden</c>, <c>password</c>, or <c>radio</c>.\r\n            </remarks>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "name",
        "PropertyName": "Name",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Name",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Name\">\r\n            <summary>\r\n            The name of the &lt;input&gt; element.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For\" /> is\r\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\r\n            </remarks>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "value",
        "PropertyName": "Value",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Value\">\r\n            <summary>\r\n            The value of the &lt;input&gt; element.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases. Also used to determine the generated \"checked\" attribute\r\n            if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" /> is \"radio\". Must not be <c>null</c> in that case.\r\n            </remarks>\r\n        </member>"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper",
      "Common.TypeNameIdentifier": "InputTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": 1953606330535002882,
      "Data2": -6762205595601736150,
      "Data3": 302265460351424399,
      "Data4": 3361607310337647009
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;label&gt; elements with an <c>asp-for</c> attribute.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "label",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-for"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 0,
        "Name": "asp-for",
        "PropertyName": "For",
        "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression",
        "DisplayName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper.For",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper.For\">\r\n            <summary>\r\n            An expression to be evaluated against the current model.\r\n            </summary>\r\n        </member>"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper",
      "Common.TypeNameIdentifier": "LabelTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": -9086534774249567178,
      "Data2": 2817320071698408700,
      "Data3": -7258873947154334719,
      "Data4": -1808017421991288873
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;link&gt; elements that supports fallback href paths.\r\n            </summary>\r\n            <remarks>\r\n            The tag helper won't process for cases with just the 'href' attribute.\r\n            </remarks>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "link",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-href-include"
          }
        ]
      },
      {
        "TagName": "link",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-href-exclude"
          }
        ]
      },
      {
        "TagName": "link",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-fallback-href"
          }
        ]
      },
      {
        "TagName": "link",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-fallback-href-include"
          }
        ]
      },
      {
        "TagName": "link",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-fallback-href-exclude"
          }
        ]
      },
      {
        "TagName": "link",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-fallback-test-class"
          }
        ]
      },
      {
        "TagName": "link",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-fallback-test-property"
          }
        ]
      },
      {
        "TagName": "link",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-fallback-test-value"
          }
        ]
      },
      {
        "TagName": "link",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-append-version"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 0,
        "Name": "href",
        "PropertyName": "Href",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.Href",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.Href\">\r\n            <summary>\r\n            Address of the linked resource.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases.\r\n            </remarks>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-href-include",
        "PropertyName": "HrefInclude",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.HrefInclude",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.HrefInclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of CSS stylesheets to load.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-href-exclude",
        "PropertyName": "HrefExclude",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.HrefExclude",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.HrefExclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of CSS stylesheets to exclude from loading.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.HrefInclude\" />.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-fallback-href",
        "PropertyName": "FallbackHref",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\">\r\n            <summary>\r\n            The URL of a CSS stylesheet to fallback to in the case the primary one fails.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-suppress-fallback-integrity",
        "PropertyName": "SuppressFallbackIntegrity",
        "TypeName": 1,
        "DisplayName": "bool Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.SuppressFallbackIntegrity",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.SuppressFallbackIntegrity\">\r\n            <summary>\r\n            Boolean value that determines if an integrity hash will be compared with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> value.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-append-version",
        "PropertyName": "AppendVersion",
        "TypeName": "System.Boolean?",
        "DisplayName": "System.Boolean? Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.AppendVersion",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.AppendVersion\">\r\n            <summary>\r\n            Value indicating if file version should be appended to the href urls.\r\n            </summary>\r\n            <remarks>\r\n            If <c>true</c> then a query string \"v\" with the encoded content of the file is added.\r\n            </remarks>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-fallback-href-include",
        "PropertyName": "FallbackHrefInclude",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of CSS stylesheets to fallback to in the case the primary\r\n            one fails.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-fallback-href-exclude",
        "PropertyName": "FallbackHrefExclude",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefExclude",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefExclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of CSS stylesheets to exclude from the fallback list, in\r\n            the case the primary one fails.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-fallback-test-class",
        "PropertyName": "FallbackTestClass",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestClass",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestClass\">\r\n            <summary>\r\n            The class name defined in the stylesheet to use for the fallback test.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestProperty\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestValue\" />,\r\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-fallback-test-property",
        "PropertyName": "FallbackTestProperty",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestProperty",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestProperty\">\r\n            <summary>\r\n            The CSS property name to use for the fallback test.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestClass\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestValue\" />,\r\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-fallback-test-value",
        "PropertyName": "FallbackTestValue",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestValue",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestValue\">\r\n            <summary>\r\n            The CSS property value to use for the fallback test.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestClass\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestProperty\" />,\r\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\r\n            </summary>\r\n        </member>"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper",
      "Common.TypeNameIdentifier": "LinkTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": 6565447135448129787,
      "Data2": -6821820527099713664,
      "Data3": -3925711872329217045,
      "Data4": 3901777251942997127
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;option&gt; elements.\r\n            </summary>\r\n            <remarks>\r\n            This <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> works in conjunction with <see cref=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper\" />. It reads elements\r\n            content but does not modify that content. The only modification it makes is to add a <c>selected</c> attribute\r\n            in some cases.\r\n            </remarks>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "option",
        "CaseSensitive": false
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 0,
        "Name": "value",
        "PropertyName": "Value",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper.Value",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper.Value\">\r\n            <summary>\r\n            Specifies a value for the &lt;option&gt; element.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases.\r\n            </remarks>\r\n        </member>"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper",
      "Common.TypeNameIdentifier": "OptionTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": -1736812621920366395,
      "Data2": 4984155765833138658,
      "Data3": 2150039617441060527,
      "Data4": 3202204686225387816
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper\">\r\n            <summary>\r\n            Renders a partial view.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "partial",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "name"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 0,
        "Name": "name",
        "PropertyName": "Name",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Name",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Name\">\r\n            <summary>\r\n            The name or path of the partial view that is rendered to the response.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "for",
        "PropertyName": "For",
        "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression",
        "DisplayName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.For",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.For\">\r\n            <summary>\r\n            An expression to be evaluated against the current model. Cannot be used together with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Model\" />.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "model",
        "PropertyName": "Model",
        "TypeName": 0,
        "DisplayName": "object Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Model",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Model\">\r\n            <summary>\r\n            The model to pass into the partial view. Cannot be used together with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.For\" />.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "optional",
        "PropertyName": "Optional",
        "TypeName": 1,
        "DisplayName": "bool Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Optional",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Optional\">\r\n            <summary>\r\n            When optional, executing the tag helper will no-op if the view cannot be located.\r\n            Otherwise will throw stating the view could not be found.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "fallback-name",
        "PropertyName": "FallbackName",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.FallbackName",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.FallbackName\">\r\n            <summary>\r\n            View to lookup if the view specified by <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Name\" /> cannot be located.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 2,
        "Name": "view-data",
        "PropertyName": "ViewData",
        "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary",
        "IndexerNamePrefix": "view-data-",
        "IndexerTypeName": 0,
        "DisplayName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.ViewData",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.ViewData\">\r\n            <summary>\r\n            A <see cref=\"T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary\" /> to pass into the partial view.\r\n            </summary>\r\n        </member>"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper",
      "Common.TypeNameIdentifier": "PartialTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": -7126312142987131678,
      "Data2": 4739351688857321407,
      "Data3": -8700191971965515708,
      "Data4": 2105750766739964424
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper\">\r\n            <summary>\r\n            A <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> that saves the state of Razor components rendered on the page up to that point.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "persist-component-state",
        "TagStructure": 2,
        "CaseSensitive": false
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 0,
        "Name": "persist-mode",
        "PropertyName": "PersistenceMode",
        "TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.PersistenceMode?",
        "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.PersistenceMode? Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper.PersistenceMode",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper.PersistenceMode\">\r\n            <summary>\r\n            Gets or sets the <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper.PersistenceMode\" /> for the state to persist.\r\n            </summary>\r\n        </member>"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper",
      "Common.TypeNameIdentifier": "PersistComponentStateTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": -6960930686290207966,
      "Data2": 1391388687135662113,
      "Data3": -2295517446123529180,
      "Data4": -7815576228904162513
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;script&gt; elements that supports fallback src paths.\r\n            </summary>\r\n            <remarks>\r\n            The tag helper won't process for cases with just the 'src' attribute.\r\n            </remarks>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "script",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-src-include"
          }
        ]
      },
      {
        "TagName": "script",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-src-exclude"
          }
        ]
      },
      {
        "TagName": "script",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-fallback-src"
          }
        ]
      },
      {
        "TagName": "script",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-fallback-src-include"
          }
        ]
      },
      {
        "TagName": "script",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-fallback-src-exclude"
          }
        ]
      },
      {
        "TagName": "script",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-fallback-test"
          }
        ]
      },
      {
        "TagName": "script",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-append-version"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 0,
        "Name": "src",
        "PropertyName": "Src",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.Src",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.Src\">\r\n            <summary>\r\n            Address of the external script to use.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases.\r\n            </remarks>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-src-include",
        "PropertyName": "SrcInclude",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.SrcInclude",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.SrcInclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of JavaScript scripts to load.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-src-exclude",
        "PropertyName": "SrcExclude",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.SrcExclude",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.SrcExclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of JavaScript scripts to exclude from loading.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.SrcInclude\" />.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-fallback-src",
        "PropertyName": "FallbackSrc",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrc",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrc\">\r\n            <summary>\r\n            The URL of a Script tag to fallback to in the case the primary one fails.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-suppress-fallback-integrity",
        "PropertyName": "SuppressFallbackIntegrity",
        "TypeName": 1,
        "DisplayName": "bool Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.SuppressFallbackIntegrity",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.SuppressFallbackIntegrity\">\r\n            <summary>\r\n            Boolean value that determines if an integrity hash will be compared with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrc\" /> value.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-append-version",
        "PropertyName": "AppendVersion",
        "TypeName": "System.Boolean?",
        "DisplayName": "System.Boolean? Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.AppendVersion",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.AppendVersion\">\r\n            <summary>\r\n            Value indicating if file version should be appended to src urls.\r\n            </summary>\r\n            <remarks>\r\n            A query string \"v\" with the encoded content of the file is added.\r\n            </remarks>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-fallback-src-include",
        "PropertyName": "FallbackSrcInclude",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrcInclude",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrcInclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of JavaScript scripts to fallback to in the case the\r\n            primary one fails.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-fallback-src-exclude",
        "PropertyName": "FallbackSrcExclude",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrcExclude",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrcExclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of JavaScript scripts to exclude from the fallback list, in\r\n            the case the primary one fails.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrcInclude\" />.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-fallback-test",
        "PropertyName": "FallbackTestExpression",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackTestExpression",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackTestExpression\">\r\n            <summary>\r\n            The script method defined in the primary script to use for the fallback test.\r\n            </summary>\r\n        </member>"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper",
      "Common.TypeNameIdentifier": "ScriptTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": 7993740259891591684,
      "Data2": 6729560546861707210,
      "Data3": 5585033748955379782,
      "Data4": 9072993650110971709
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;select&gt; elements with <c>asp-for</c> and/or\r\n            <c>asp-items</c> attribute(s).\r\n            </summary>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "select",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-for"
          }
        ]
      },
      {
        "TagName": "select",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-items"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 0,
        "Name": "asp-for",
        "PropertyName": "For",
        "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression",
        "DisplayName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper.For",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper.For\">\r\n            <summary>\r\n            An expression to be evaluated against the current model.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "asp-items",
        "PropertyName": "Items",
        "TypeName": "System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem>",
        "DisplayName": "System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem> Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper.Items",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper.Items\">\r\n            <summary>\r\n            A collection of <see cref=\"T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem\" /> objects used to populate the &lt;select&gt; element with\r\n            &lt;optgroup&gt; and &lt;option&gt; elements.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "name",
        "PropertyName": "Name",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper.Name",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper.Name\">\r\n            <summary>\r\n            The name of the &lt;input&gt; element.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper.For\" /> is\r\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\r\n            </remarks>\r\n        </member>"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper",
      "Common.TypeNameIdentifier": "SelectTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": -8622090964623769168,
      "Data2": 5270934605380533724,
      "Data3": -4668702275199090791,
      "Data4": -979935608775213033
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;textarea&gt; elements with an <c>asp-for</c> attribute.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "textarea",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-for"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 0,
        "Name": "asp-for",
        "PropertyName": "For",
        "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression",
        "DisplayName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper.For",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper.For\">\r\n            <summary>\r\n            An expression to be evaluated against the current model.\r\n            </summary>\r\n        </member>"
      },
      {
        "Flags": 0,
        "Name": "name",
        "PropertyName": "Name",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper.Name",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper.Name\">\r\n            <summary>\r\n            The name of the &lt;input&gt; element.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper.For\" /> is\r\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\r\n            </remarks>\r\n        </member>"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper",
      "Common.TypeNameIdentifier": "TextAreaTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": -7075014934120514942,
      "Data2": -5343058710040471524,
      "Data3": -1311298300408137390,
      "Data4": -5091388212485847343
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting any HTML element with an <c>asp-validation-for</c>\r\n            attribute.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "span",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-validation-for"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 0,
        "Name": "asp-validation-for",
        "PropertyName": "For",
        "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression",
        "DisplayName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper.For",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper.For\">\r\n            <summary>\r\n            Gets an expression to be evaluated against the current model.\r\n            </summary>\r\n        </member>"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper",
      "Common.TypeNameIdentifier": "ValidationMessageTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": 8904867810370221118,
      "Data2": -7095200090712424800,
      "Data3": 5325626128503251967,
      "Data4": 1712719574854234661
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
    "DisplayName": "Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting any HTML element with an <c>asp-validation-summary</c>\r\n            attribute.\r\n            </summary>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "div",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "asp-validation-summary"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 4,
        "Name": "asp-validation-summary",
        "PropertyName": "ValidationSummary",
        "TypeName": "Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary",
        "DisplayName": "Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper.ValidationSummary",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper.ValidationSummary\">\r\n            <summary>\r\n            If <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.All\" /> or <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.ModelOnly\" />, appends a validation\r\n            summary. Otherwise (<see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.None\" />, the default), this tag helper does nothing.\r\n            </summary>\r\n            <exception cref=\"T:System.ArgumentException\">\r\n            Thrown if setter is called with an undefined <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper.ValidationSummary\" /> value e.g.\r\n            <c>(ValidationSummary)23</c>.\r\n            </exception>\r\n        </member>"
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper",
      "Common.TypeNameIdentifier": "ValidationSummaryTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": 4188877008959249826,
      "Data2": -2272402989854913107,
      "Data3": -8369454677979694710,
      "Data4": 7729790438600625422
    },
    "Kind": "ITagHelper",
    "Name": "Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper",
    "AssemblyName": "Microsoft.AspNetCore.Mvc.Razor",
    "DisplayName": "Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper",
    "Documentation": "<member name=\"T:Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting elements containing attributes with URL expected values.\r\n            </summary>\r\n            <remarks>Resolves URLs starting with '~/' (relative to the application's 'webroot' setting) that are not\r\n            targeted by other <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" />s. Runs prior to other <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" />s to ensure\r\n            application-relative URLs are resolved.</remarks>\r\n        </member>",
    "CaseSensitive": false,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "itemid",
            "Value": "~/",
            "ValueComparison": 2
          }
        ]
      },
      {
        "TagName": "a",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "href",
            "Value": "~/",
            "ValueComparison": 2
          }
        ]
      },
      {
        "TagName": "applet",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "archive",
            "Value": "~/",
            "ValueComparison": 2
          }
        ]
      },
      {
        "TagName": "area",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "href",
            "Value": "~/",
            "ValueComparison": 2
          }
        ]
      },
      {
        "TagName": "audio",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "src",
            "Value": "~/",
            "ValueComparison": 2
          }
        ]
      },
      {
        "TagName": "base",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "href",
            "Value": "~/",
            "ValueComparison": 2
          }
        ]
      },
      {
        "TagName": "blockquote",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "cite",
            "Value": "~/",
            "ValueComparison": 2
          }
        ]
      },
      {
        "TagName": "button",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "formaction",
            "Value": "~/",
            "ValueComparison": 2
          }
        ]
      },
      {
        "TagName": "del",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "cite",
            "Value": "~/",
            "ValueComparison": 2
          }
        ]
      },
      {
        "TagName": "embed",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "src",
            "Value": "~/",
            "ValueComparison": 2
          }
        ]
      },
      {
        "TagName": "form",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "action",
            "Value": "~/",
            "ValueComparison": 2
          }
        ]
      },
      {
        "TagName": "html",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "manifest",
            "Value": "~/",
            "ValueComparison": 2
          }
        ]
      },
      {
        "TagName": "iframe",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "src",
            "Value": "~/",
            "ValueComparison": 2
          }
        ]
      },
      {
        "TagName": "img",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "src",
            "Value": "~/",
            "ValueComparison": 2
          }
        ]
      },
      {
        "TagName": "img",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "srcset",
            "Value": "~/",
            "ValueComparison": 2
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "src",
            "Value": "~/",
            "ValueComparison": 2
          }
        ]
      },
      {
        "TagName": "input",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "formaction",
            "Value": "~/",
            "ValueComparison": 2
          }
        ]
      },
      {
        "TagName": "ins",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "cite",
            "Value": "~/",
            "ValueComparison": 2
          }
        ]
      },
      {
        "TagName": "link",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "href",
            "Value": "~/",
            "ValueComparison": 2
          }
        ]
      },
      {
        "TagName": "menuitem",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "icon",
            "Value": "~/",
            "ValueComparison": 2
          }
        ]
      },
      {
        "TagName": "object",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "archive",
            "Value": "~/",
            "ValueComparison": 2
          }
        ]
      },
      {
        "TagName": "object",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "data",
            "Value": "~/",
            "ValueComparison": 2
          }
        ]
      },
      {
        "TagName": "q",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "cite",
            "Value": "~/",
            "ValueComparison": 2
          }
        ]
      },
      {
        "TagName": "script",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "src",
            "Value": "~/",
            "ValueComparison": 2
          }
        ]
      },
      {
        "TagName": "source",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "src",
            "Value": "~/",
            "ValueComparison": 2
          }
        ]
      },
      {
        "TagName": "source",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "srcset",
            "Value": "~/",
            "ValueComparison": 2
          }
        ]
      },
      {
        "TagName": "track",
        "TagStructure": 2,
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "src",
            "Value": "~/",
            "ValueComparison": 2
          }
        ]
      },
      {
        "TagName": "video",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "src",
            "Value": "~/",
            "ValueComparison": 2
          }
        ]
      },
      {
        "TagName": "video",
        "CaseSensitive": false,
        "Attributes": [
          {
            "Flags": 0,
            "Name": "poster",
            "Value": "~/",
            "ValueComparison": 2
          }
        ]
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper",
      "Common.TypeNameIdentifier": "UrlResolutionTagHelper",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.Razor.TagHelpers",
      "Runtime.Name": "ITagHelper"
    }
  },
  {
    "__Checksum": {
      "Data1": 8275396079063157341,
      "Data2": -8095215307044230513,
      "Data3": 9156611737141098242,
      "Data4": -1072512923549006492
    },
    "Kind": "Components.Bind",
    "Name": "Bind",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Bind",
    "Documentation": {
      "Id": 0
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind-",
            "NameComparison": 1
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 19,
        "Name": "@bind-...",
        "PropertyName": "Bind",
        "TypeName": "System.Collections.Generic.Dictionary<string, object>",
        "IndexerNamePrefix": "@bind-",
        "IndexerTypeName": 0,
        "DisplayName": "System.Collections.Generic.Dictionary<string, object> Microsoft.AspNetCore.Components.Bind.Bind",
        "Documentation": {
          "Id": 0
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "format",
            "PropertyName": "Format",
            "TypeName": 2,
            "Documentation": {
              "Id": 2
            }
          },
          {
            "Flags": 1,
            "Name": "event",
            "PropertyName": "Event",
            "TypeName": 2,
            "Documentation": {
              "Id": 1,
              "Args": [
                "@bind-..."
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "culture",
            "PropertyName": "Culture",
            "TypeName": 3,
            "Documentation": {
              "Id": 5
            }
          },
          {
            "Flags": 5,
            "Name": "get",
            "PropertyName": "Get",
            "TypeName": 0,
            "Documentation": {
              "Id": 8
            }
          },
          {
            "Flags": 1,
            "Name": "set",
            "PropertyName": "Set",
            "TypeName": 4,
            "Documentation": {
              "Id": 9
            }
          },
          {
            "Flags": 1,
            "Name": "after",
            "PropertyName": "After",
            "TypeName": 4,
            "Documentation": {
              "Id": 4
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Bind",
      "Common.TypeNameIdentifier": "Bind",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
      "Components.Bind.Fallback": "True",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -4567879946624518487,
      "Data2": -2051669917361475230,
      "Data3": 4322652621788348346,
      "Data4": 6138279182490620160
    },
    "Kind": "Components.Bind",
    "Name": "Bind",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
    "Documentation": {
      "Id": 3,
      "Args": [
        "value",
        "onchange"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind"
          }
        ]
      },
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind:get"
          },
          {
            "Flags": 3,
            "Name": "@bind:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@bind",
        "PropertyName": "Bind",
        "TypeName": 0,
        "DisplayName": "object Microsoft.AspNetCore.Components.Web.BindAttributes.Bind",
        "Documentation": {
          "Id": 3,
          "Args": [
            "value",
            "onchange"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "format",
            "PropertyName": "Format_value",
            "TypeName": 2,
            "Documentation": {
              "Id": 7,
              "Args": [
                "@bind"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "event",
            "PropertyName": "Event_value",
            "TypeName": 2,
            "Documentation": {
              "Id": 6,
              "Args": [
                "@bind"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "culture",
            "PropertyName": "Culture",
            "TypeName": 3,
            "Documentation": {
              "Id": 5
            }
          },
          {
            "Flags": 5,
            "Name": "get",
            "PropertyName": "Get",
            "TypeName": 0,
            "Documentation": {
              "Id": 8
            }
          },
          {
            "Flags": 1,
            "Name": "set",
            "PropertyName": "Set",
            "TypeName": 4,
            "Documentation": {
              "Id": 9
            }
          },
          {
            "Flags": 1,
            "Name": "after",
            "PropertyName": "After",
            "TypeName": 4,
            "Documentation": {
              "Id": 4
            }
          }
        ]
      },
      {
        "Flags": 1,
        "Name": "format-value",
        "PropertyName": "Format_value",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.BindAttributes.Format_value",
        "Documentation": {
          "Id": 7,
          "Args": [
            "@bind"
          ]
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
      "Common.TypeNameIdentifier": "BindAttributes",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.Bind.ChangeAttribute": "onchange",
      "Components.Bind.Format": null,
      "Components.Bind.IsInvariantCulture": "False",
      "Components.Bind.ValueAttribute": "value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -5592886860702520312,
      "Data2": 9056723064789939750,
      "Data3": -6797888177373978107,
      "Data4": 3793331141511991930
    },
    "Kind": "Components.Bind",
    "Name": "Bind_value",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
    "Documentation": {
      "Id": 3,
      "Args": [
        "value",
        "onchange"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind-value"
          }
        ]
      },
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind-value:get"
          },
          {
            "Flags": 3,
            "Name": "@bind-value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@bind-value",
        "PropertyName": "Bind_value",
        "TypeName": 0,
        "DisplayName": "object Microsoft.AspNetCore.Components.Web.BindAttributes.Bind_value",
        "Documentation": {
          "Id": 3,
          "Args": [
            "value",
            "onchange"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "format",
            "PropertyName": "Format_value",
            "TypeName": 2,
            "Documentation": {
              "Id": 7,
              "Args": [
                "@bind-value"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "event",
            "PropertyName": "Event_value",
            "TypeName": 2,
            "Documentation": {
              "Id": 6,
              "Args": [
                "@bind-value"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "culture",
            "PropertyName": "Culture",
            "TypeName": 3,
            "Documentation": {
              "Id": 5
            }
          },
          {
            "Flags": 5,
            "Name": "get",
            "PropertyName": "Get",
            "TypeName": 0,
            "Documentation": {
              "Id": 8
            }
          },
          {
            "Flags": 1,
            "Name": "set",
            "PropertyName": "Set",
            "TypeName": 4,
            "Documentation": {
              "Id": 9
            }
          },
          {
            "Flags": 1,
            "Name": "after",
            "PropertyName": "After",
            "TypeName": 4,
            "Documentation": {
              "Id": 4
            }
          }
        ]
      },
      {
        "Flags": 1,
        "Name": "format-value",
        "PropertyName": "Format_value",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.BindAttributes.Format_value",
        "Documentation": {
          "Id": 7,
          "Args": [
            "@bind-value"
          ]
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
      "Common.TypeNameIdentifier": "BindAttributes",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.Bind.ChangeAttribute": "onchange",
      "Components.Bind.Format": null,
      "Components.Bind.IsInvariantCulture": "False",
      "Components.Bind.ValueAttribute": "value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -8007038625657385900,
      "Data2": 7113156274362004908,
      "Data3": -7526467050585407942,
      "Data4": -9114936943762159077
    },
    "Kind": "Components.Bind",
    "Name": "Bind",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
    "Documentation": {
      "Id": 3,
      "Args": [
        "checked",
        "onchange"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "type",
            "Value": "checkbox",
            "ValueComparison": 1
          },
          {
            "Flags": 3,
            "Name": "@bind"
          }
        ]
      },
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "type",
            "Value": "checkbox",
            "ValueComparison": 1
          },
          {
            "Flags": 3,
            "Name": "@bind:get"
          },
          {
            "Flags": 3,
            "Name": "@bind:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@bind",
        "PropertyName": "Bind",
        "TypeName": 0,
        "DisplayName": "object Microsoft.AspNetCore.Components.Web.BindAttributes.Bind",
        "Documentation": {
          "Id": 3,
          "Args": [
            "checked",
            "onchange"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "format",
            "PropertyName": "Format_checked",
            "TypeName": 2,
            "Documentation": {
              "Id": 7,
              "Args": [
                "@bind"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "event",
            "PropertyName": "Event_checked",
            "TypeName": 2,
            "Documentation": {
              "Id": 6,
              "Args": [
                "@bind"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "culture",
            "PropertyName": "Culture",
            "TypeName": 3,
            "Documentation": {
              "Id": 5
            }
          },
          {
            "Flags": 5,
            "Name": "get",
            "PropertyName": "Get",
            "TypeName": 0,
            "Documentation": {
              "Id": 8
            }
          },
          {
            "Flags": 1,
            "Name": "set",
            "PropertyName": "Set",
            "TypeName": 4,
            "Documentation": {
              "Id": 9
            }
          },
          {
            "Flags": 1,
            "Name": "after",
            "PropertyName": "After",
            "TypeName": 4,
            "Documentation": {
              "Id": 4
            }
          }
        ]
      },
      {
        "Flags": 1,
        "Name": "format-checked",
        "PropertyName": "Format_checked",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.BindAttributes.Format_checked",
        "Documentation": {
          "Id": 7,
          "Args": [
            "@bind"
          ]
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
      "Common.TypeNameIdentifier": "BindAttributes",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.Bind.ChangeAttribute": "onchange",
      "Components.Bind.Format": null,
      "Components.Bind.IsInvariantCulture": "False",
      "Components.Bind.TypeAttribute": "checkbox",
      "Components.Bind.ValueAttribute": "checked",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -2305951245256284224,
      "Data2": -7599564941399446719,
      "Data3": 8135081285388485351,
      "Data4": 5703159182405688977
    },
    "Kind": "Components.Bind",
    "Name": "Bind",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
    "Documentation": {
      "Id": 3,
      "Args": [
        "value",
        "onchange"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "type",
            "Value": "text",
            "ValueComparison": 1
          },
          {
            "Flags": 3,
            "Name": "@bind"
          }
        ]
      },
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "type",
            "Value": "text",
            "ValueComparison": 1
          },
          {
            "Flags": 3,
            "Name": "@bind:get"
          },
          {
            "Flags": 3,
            "Name": "@bind:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@bind",
        "PropertyName": "Bind",
        "TypeName": 0,
        "DisplayName": "object Microsoft.AspNetCore.Components.Web.BindAttributes.Bind",
        "Documentation": {
          "Id": 3,
          "Args": [
            "value",
            "onchange"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "format",
            "PropertyName": "Format_value",
            "TypeName": 2,
            "Documentation": {
              "Id": 7,
              "Args": [
                "@bind"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "event",
            "PropertyName": "Event_value",
            "TypeName": 2,
            "Documentation": {
              "Id": 6,
              "Args": [
                "@bind"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "culture",
            "PropertyName": "Culture",
            "TypeName": 3,
            "Documentation": {
              "Id": 5
            }
          },
          {
            "Flags": 5,
            "Name": "get",
            "PropertyName": "Get",
            "TypeName": 0,
            "Documentation": {
              "Id": 8
            }
          },
          {
            "Flags": 1,
            "Name": "set",
            "PropertyName": "Set",
            "TypeName": 4,
            "Documentation": {
              "Id": 9
            }
          },
          {
            "Flags": 1,
            "Name": "after",
            "PropertyName": "After",
            "TypeName": 4,
            "Documentation": {
              "Id": 4
            }
          }
        ]
      },
      {
        "Flags": 1,
        "Name": "format-value",
        "PropertyName": "Format_value",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.BindAttributes.Format_value",
        "Documentation": {
          "Id": 7,
          "Args": [
            "@bind"
          ]
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
      "Common.TypeNameIdentifier": "BindAttributes",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.Bind.ChangeAttribute": "onchange",
      "Components.Bind.Format": null,
      "Components.Bind.IsInvariantCulture": "False",
      "Components.Bind.TypeAttribute": "text",
      "Components.Bind.ValueAttribute": "value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -1360466497335609880,
      "Data2": -805977691023859404,
      "Data3": 9034427829223288986,
      "Data4": 2739462654316032238
    },
    "Kind": "Components.Bind",
    "Name": "Bind",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
    "Documentation": {
      "Id": 3,
      "Args": [
        "value",
        "onchange"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "type",
            "Value": "number",
            "ValueComparison": 1
          },
          {
            "Flags": 3,
            "Name": "@bind"
          }
        ]
      },
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "type",
            "Value": "number",
            "ValueComparison": 1
          },
          {
            "Flags": 3,
            "Name": "@bind:get"
          },
          {
            "Flags": 3,
            "Name": "@bind:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@bind",
        "PropertyName": "Bind",
        "TypeName": 0,
        "DisplayName": "object Microsoft.AspNetCore.Components.Web.BindAttributes.Bind",
        "Documentation": {
          "Id": 3,
          "Args": [
            "value",
            "onchange"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "format",
            "PropertyName": "Format_value",
            "TypeName": 2,
            "Documentation": {
              "Id": 7,
              "Args": [
                "@bind"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "event",
            "PropertyName": "Event_value",
            "TypeName": 2,
            "Documentation": {
              "Id": 6,
              "Args": [
                "@bind"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "culture",
            "PropertyName": "Culture",
            "TypeName": 3,
            "Documentation": {
              "Id": 5
            }
          },
          {
            "Flags": 5,
            "Name": "get",
            "PropertyName": "Get",
            "TypeName": 0,
            "Documentation": {
              "Id": 8
            }
          },
          {
            "Flags": 1,
            "Name": "set",
            "PropertyName": "Set",
            "TypeName": 4,
            "Documentation": {
              "Id": 9
            }
          },
          {
            "Flags": 1,
            "Name": "after",
            "PropertyName": "After",
            "TypeName": 4,
            "Documentation": {
              "Id": 4
            }
          }
        ]
      },
      {
        "Flags": 1,
        "Name": "format-value",
        "PropertyName": "Format_value",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.BindAttributes.Format_value",
        "Documentation": {
          "Id": 7,
          "Args": [
            "@bind"
          ]
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
      "Common.TypeNameIdentifier": "BindAttributes",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.Bind.ChangeAttribute": "onchange",
      "Components.Bind.Format": null,
      "Components.Bind.IsInvariantCulture": "True",
      "Components.Bind.TypeAttribute": "number",
      "Components.Bind.ValueAttribute": "value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -6235740818683616599,
      "Data2": -586818228202192802,
      "Data3": -2344230496511378112,
      "Data4": -7700390292192278850
    },
    "Kind": "Components.Bind",
    "Name": "Bind_value",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
    "Documentation": {
      "Id": 3,
      "Args": [
        "value",
        "onchange"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "type",
            "Value": "number",
            "ValueComparison": 1
          },
          {
            "Flags": 3,
            "Name": "@bind-value"
          }
        ]
      },
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "type",
            "Value": "number",
            "ValueComparison": 1
          },
          {
            "Flags": 3,
            "Name": "@bind-value:get"
          },
          {
            "Flags": 3,
            "Name": "@bind-value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@bind-value",
        "PropertyName": "Bind_value",
        "TypeName": 0,
        "DisplayName": "object Microsoft.AspNetCore.Components.Web.BindAttributes.Bind_value",
        "Documentation": {
          "Id": 3,
          "Args": [
            "value",
            "onchange"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "format",
            "PropertyName": "Format_value",
            "TypeName": 2,
            "Documentation": {
              "Id": 7,
              "Args": [
                "@bind-value"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "event",
            "PropertyName": "Event_value",
            "TypeName": 2,
            "Documentation": {
              "Id": 6,
              "Args": [
                "@bind-value"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "culture",
            "PropertyName": "Culture",
            "TypeName": 3,
            "Documentation": {
              "Id": 5
            }
          },
          {
            "Flags": 5,
            "Name": "get",
            "PropertyName": "Get",
            "TypeName": 0,
            "Documentation": {
              "Id": 8
            }
          },
          {
            "Flags": 1,
            "Name": "set",
            "PropertyName": "Set",
            "TypeName": 4,
            "Documentation": {
              "Id": 9
            }
          },
          {
            "Flags": 1,
            "Name": "after",
            "PropertyName": "After",
            "TypeName": 4,
            "Documentation": {
              "Id": 4
            }
          }
        ]
      },
      {
        "Flags": 1,
        "Name": "format-value",
        "PropertyName": "Format_value",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.BindAttributes.Format_value",
        "Documentation": {
          "Id": 7,
          "Args": [
            "@bind-value"
          ]
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
      "Common.TypeNameIdentifier": "BindAttributes",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.Bind.ChangeAttribute": "onchange",
      "Components.Bind.Format": null,
      "Components.Bind.IsInvariantCulture": "True",
      "Components.Bind.TypeAttribute": "number",
      "Components.Bind.ValueAttribute": "value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 4277507092216479904,
      "Data2": 2221389153464374085,
      "Data3": -2092139696777127431,
      "Data4": 439720397756891476
    },
    "Kind": "Components.Bind",
    "Name": "Bind",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
    "Documentation": {
      "Id": 3,
      "Args": [
        "value",
        "onchange"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "type",
            "Value": "date",
            "ValueComparison": 1
          },
          {
            "Flags": 3,
            "Name": "@bind"
          }
        ]
      },
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "type",
            "Value": "date",
            "ValueComparison": 1
          },
          {
            "Flags": 3,
            "Name": "@bind:get"
          },
          {
            "Flags": 3,
            "Name": "@bind:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@bind",
        "PropertyName": "Bind",
        "TypeName": 0,
        "DisplayName": "object Microsoft.AspNetCore.Components.Web.BindAttributes.Bind",
        "Documentation": {
          "Id": 3,
          "Args": [
            "value",
            "onchange"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "format",
            "PropertyName": "Format_value",
            "TypeName": 2,
            "Documentation": {
              "Id": 7,
              "Args": [
                "@bind"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "event",
            "PropertyName": "Event_value",
            "TypeName": 2,
            "Documentation": {
              "Id": 6,
              "Args": [
                "@bind"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "culture",
            "PropertyName": "Culture",
            "TypeName": 3,
            "Documentation": {
              "Id": 5
            }
          },
          {
            "Flags": 5,
            "Name": "get",
            "PropertyName": "Get",
            "TypeName": 0,
            "Documentation": {
              "Id": 8
            }
          },
          {
            "Flags": 1,
            "Name": "set",
            "PropertyName": "Set",
            "TypeName": 4,
            "Documentation": {
              "Id": 9
            }
          },
          {
            "Flags": 1,
            "Name": "after",
            "PropertyName": "After",
            "TypeName": 4,
            "Documentation": {
              "Id": 4
            }
          }
        ]
      },
      {
        "Flags": 1,
        "Name": "format-value",
        "PropertyName": "Format_value",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.BindAttributes.Format_value",
        "Documentation": {
          "Id": 7,
          "Args": [
            "@bind"
          ]
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
      "Common.TypeNameIdentifier": "BindAttributes",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.Bind.ChangeAttribute": "onchange",
      "Components.Bind.Format": "yyyy-MM-dd",
      "Components.Bind.IsInvariantCulture": "True",
      "Components.Bind.TypeAttribute": "date",
      "Components.Bind.ValueAttribute": "value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -823436498409632506,
      "Data2": 6834336378787441444,
      "Data3": 2475746553004199769,
      "Data4": -4722516328212563362
    },
    "Kind": "Components.Bind",
    "Name": "Bind_value",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
    "Documentation": {
      "Id": 3,
      "Args": [
        "value",
        "onchange"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "type",
            "Value": "date",
            "ValueComparison": 1
          },
          {
            "Flags": 3,
            "Name": "@bind-value"
          }
        ]
      },
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "type",
            "Value": "date",
            "ValueComparison": 1
          },
          {
            "Flags": 3,
            "Name": "@bind-value:get"
          },
          {
            "Flags": 3,
            "Name": "@bind-value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@bind-value",
        "PropertyName": "Bind_value",
        "TypeName": 0,
        "DisplayName": "object Microsoft.AspNetCore.Components.Web.BindAttributes.Bind_value",
        "Documentation": {
          "Id": 3,
          "Args": [
            "value",
            "onchange"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "format",
            "PropertyName": "Format_value",
            "TypeName": 2,
            "Documentation": {
              "Id": 7,
              "Args": [
                "@bind-value"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "event",
            "PropertyName": "Event_value",
            "TypeName": 2,
            "Documentation": {
              "Id": 6,
              "Args": [
                "@bind-value"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "culture",
            "PropertyName": "Culture",
            "TypeName": 3,
            "Documentation": {
              "Id": 5
            }
          },
          {
            "Flags": 5,
            "Name": "get",
            "PropertyName": "Get",
            "TypeName": 0,
            "Documentation": {
              "Id": 8
            }
          },
          {
            "Flags": 1,
            "Name": "set",
            "PropertyName": "Set",
            "TypeName": 4,
            "Documentation": {
              "Id": 9
            }
          },
          {
            "Flags": 1,
            "Name": "after",
            "PropertyName": "After",
            "TypeName": 4,
            "Documentation": {
              "Id": 4
            }
          }
        ]
      },
      {
        "Flags": 1,
        "Name": "format-value",
        "PropertyName": "Format_value",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.BindAttributes.Format_value",
        "Documentation": {
          "Id": 7,
          "Args": [
            "@bind-value"
          ]
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
      "Common.TypeNameIdentifier": "BindAttributes",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.Bind.ChangeAttribute": "onchange",
      "Components.Bind.Format": "yyyy-MM-dd",
      "Components.Bind.IsInvariantCulture": "True",
      "Components.Bind.TypeAttribute": "date",
      "Components.Bind.ValueAttribute": "value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -3259890319261173156,
      "Data2": 2702454799021225446,
      "Data3": -1906339020725125661,
      "Data4": 1435596701197124752
    },
    "Kind": "Components.Bind",
    "Name": "Bind",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
    "Documentation": {
      "Id": 3,
      "Args": [
        "value",
        "onchange"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "type",
            "Value": "datetime-local",
            "ValueComparison": 1
          },
          {
            "Flags": 3,
            "Name": "@bind"
          }
        ]
      },
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "type",
            "Value": "datetime-local",
            "ValueComparison": 1
          },
          {
            "Flags": 3,
            "Name": "@bind:get"
          },
          {
            "Flags": 3,
            "Name": "@bind:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@bind",
        "PropertyName": "Bind",
        "TypeName": 0,
        "DisplayName": "object Microsoft.AspNetCore.Components.Web.BindAttributes.Bind",
        "Documentation": {
          "Id": 3,
          "Args": [
            "value",
            "onchange"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "format",
            "PropertyName": "Format_value",
            "TypeName": 2,
            "Documentation": {
              "Id": 7,
              "Args": [
                "@bind"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "event",
            "PropertyName": "Event_value",
            "TypeName": 2,
            "Documentation": {
              "Id": 6,
              "Args": [
                "@bind"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "culture",
            "PropertyName": "Culture",
            "TypeName": 3,
            "Documentation": {
              "Id": 5
            }
          },
          {
            "Flags": 5,
            "Name": "get",
            "PropertyName": "Get",
            "TypeName": 0,
            "Documentation": {
              "Id": 8
            }
          },
          {
            "Flags": 1,
            "Name": "set",
            "PropertyName": "Set",
            "TypeName": 4,
            "Documentation": {
              "Id": 9
            }
          },
          {
            "Flags": 1,
            "Name": "after",
            "PropertyName": "After",
            "TypeName": 4,
            "Documentation": {
              "Id": 4
            }
          }
        ]
      },
      {
        "Flags": 1,
        "Name": "format-value",
        "PropertyName": "Format_value",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.BindAttributes.Format_value",
        "Documentation": {
          "Id": 7,
          "Args": [
            "@bind"
          ]
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
      "Common.TypeNameIdentifier": "BindAttributes",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.Bind.ChangeAttribute": "onchange",
      "Components.Bind.Format": "yyyy-MM-ddTHH:mm:ss",
      "Components.Bind.IsInvariantCulture": "True",
      "Components.Bind.TypeAttribute": "datetime-local",
      "Components.Bind.ValueAttribute": "value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -3094542817927377152,
      "Data2": -8291832726373672259,
      "Data3": 2276427197782626222,
      "Data4": -7763396352867112489
    },
    "Kind": "Components.Bind",
    "Name": "Bind_value",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
    "Documentation": {
      "Id": 3,
      "Args": [
        "value",
        "onchange"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "type",
            "Value": "datetime-local",
            "ValueComparison": 1
          },
          {
            "Flags": 3,
            "Name": "@bind-value"
          }
        ]
      },
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "type",
            "Value": "datetime-local",
            "ValueComparison": 1
          },
          {
            "Flags": 3,
            "Name": "@bind-value:get"
          },
          {
            "Flags": 3,
            "Name": "@bind-value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@bind-value",
        "PropertyName": "Bind_value",
        "TypeName": 0,
        "DisplayName": "object Microsoft.AspNetCore.Components.Web.BindAttributes.Bind_value",
        "Documentation": {
          "Id": 3,
          "Args": [
            "value",
            "onchange"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "format",
            "PropertyName": "Format_value",
            "TypeName": 2,
            "Documentation": {
              "Id": 7,
              "Args": [
                "@bind-value"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "event",
            "PropertyName": "Event_value",
            "TypeName": 2,
            "Documentation": {
              "Id": 6,
              "Args": [
                "@bind-value"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "culture",
            "PropertyName": "Culture",
            "TypeName": 3,
            "Documentation": {
              "Id": 5
            }
          },
          {
            "Flags": 5,
            "Name": "get",
            "PropertyName": "Get",
            "TypeName": 0,
            "Documentation": {
              "Id": 8
            }
          },
          {
            "Flags": 1,
            "Name": "set",
            "PropertyName": "Set",
            "TypeName": 4,
            "Documentation": {
              "Id": 9
            }
          },
          {
            "Flags": 1,
            "Name": "after",
            "PropertyName": "After",
            "TypeName": 4,
            "Documentation": {
              "Id": 4
            }
          }
        ]
      },
      {
        "Flags": 1,
        "Name": "format-value",
        "PropertyName": "Format_value",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.BindAttributes.Format_value",
        "Documentation": {
          "Id": 7,
          "Args": [
            "@bind-value"
          ]
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
      "Common.TypeNameIdentifier": "BindAttributes",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.Bind.ChangeAttribute": "onchange",
      "Components.Bind.Format": "yyyy-MM-ddTHH:mm:ss",
      "Components.Bind.IsInvariantCulture": "True",
      "Components.Bind.TypeAttribute": "datetime-local",
      "Components.Bind.ValueAttribute": "value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 4058556632495695560,
      "Data2": -3603349242184917775,
      "Data3": 2096545031352456921,
      "Data4": 9084230166945128335
    },
    "Kind": "Components.Bind",
    "Name": "Bind",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
    "Documentation": {
      "Id": 3,
      "Args": [
        "value",
        "onchange"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "type",
            "Value": "month",
            "ValueComparison": 1
          },
          {
            "Flags": 3,
            "Name": "@bind"
          }
        ]
      },
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "type",
            "Value": "month",
            "ValueComparison": 1
          },
          {
            "Flags": 3,
            "Name": "@bind:get"
          },
          {
            "Flags": 3,
            "Name": "@bind:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@bind",
        "PropertyName": "Bind",
        "TypeName": 0,
        "DisplayName": "object Microsoft.AspNetCore.Components.Web.BindAttributes.Bind",
        "Documentation": {
          "Id": 3,
          "Args": [
            "value",
            "onchange"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "format",
            "PropertyName": "Format_value",
            "TypeName": 2,
            "Documentation": {
              "Id": 7,
              "Args": [
                "@bind"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "event",
            "PropertyName": "Event_value",
            "TypeName": 2,
            "Documentation": {
              "Id": 6,
              "Args": [
                "@bind"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "culture",
            "PropertyName": "Culture",
            "TypeName": 3,
            "Documentation": {
              "Id": 5
            }
          },
          {
            "Flags": 5,
            "Name": "get",
            "PropertyName": "Get",
            "TypeName": 0,
            "Documentation": {
              "Id": 8
            }
          },
          {
            "Flags": 1,
            "Name": "set",
            "PropertyName": "Set",
            "TypeName": 4,
            "Documentation": {
              "Id": 9
            }
          },
          {
            "Flags": 1,
            "Name": "after",
            "PropertyName": "After",
            "TypeName": 4,
            "Documentation": {
              "Id": 4
            }
          }
        ]
      },
      {
        "Flags": 1,
        "Name": "format-value",
        "PropertyName": "Format_value",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.BindAttributes.Format_value",
        "Documentation": {
          "Id": 7,
          "Args": [
            "@bind"
          ]
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
      "Common.TypeNameIdentifier": "BindAttributes",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.Bind.ChangeAttribute": "onchange",
      "Components.Bind.Format": "yyyy-MM",
      "Components.Bind.IsInvariantCulture": "True",
      "Components.Bind.TypeAttribute": "month",
      "Components.Bind.ValueAttribute": "value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 1252589956390864402,
      "Data2": 3517308629794338733,
      "Data3": -3650950290169108206,
      "Data4": 4607301677988040654
    },
    "Kind": "Components.Bind",
    "Name": "Bind_value",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
    "Documentation": {
      "Id": 3,
      "Args": [
        "value",
        "onchange"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "type",
            "Value": "month",
            "ValueComparison": 1
          },
          {
            "Flags": 3,
            "Name": "@bind-value"
          }
        ]
      },
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "type",
            "Value": "month",
            "ValueComparison": 1
          },
          {
            "Flags": 3,
            "Name": "@bind-value:get"
          },
          {
            "Flags": 3,
            "Name": "@bind-value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@bind-value",
        "PropertyName": "Bind_value",
        "TypeName": 0,
        "DisplayName": "object Microsoft.AspNetCore.Components.Web.BindAttributes.Bind_value",
        "Documentation": {
          "Id": 3,
          "Args": [
            "value",
            "onchange"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "format",
            "PropertyName": "Format_value",
            "TypeName": 2,
            "Documentation": {
              "Id": 7,
              "Args": [
                "@bind-value"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "event",
            "PropertyName": "Event_value",
            "TypeName": 2,
            "Documentation": {
              "Id": 6,
              "Args": [
                "@bind-value"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "culture",
            "PropertyName": "Culture",
            "TypeName": 3,
            "Documentation": {
              "Id": 5
            }
          },
          {
            "Flags": 5,
            "Name": "get",
            "PropertyName": "Get",
            "TypeName": 0,
            "Documentation": {
              "Id": 8
            }
          },
          {
            "Flags": 1,
            "Name": "set",
            "PropertyName": "Set",
            "TypeName": 4,
            "Documentation": {
              "Id": 9
            }
          },
          {
            "Flags": 1,
            "Name": "after",
            "PropertyName": "After",
            "TypeName": 4,
            "Documentation": {
              "Id": 4
            }
          }
        ]
      },
      {
        "Flags": 1,
        "Name": "format-value",
        "PropertyName": "Format_value",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.BindAttributes.Format_value",
        "Documentation": {
          "Id": 7,
          "Args": [
            "@bind-value"
          ]
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
      "Common.TypeNameIdentifier": "BindAttributes",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.Bind.ChangeAttribute": "onchange",
      "Components.Bind.Format": "yyyy-MM",
      "Components.Bind.IsInvariantCulture": "True",
      "Components.Bind.TypeAttribute": "month",
      "Components.Bind.ValueAttribute": "value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -1297739758075582039,
      "Data2": 471779659376553505,
      "Data3": 4403855569760071400,
      "Data4": -3839717464725313186
    },
    "Kind": "Components.Bind",
    "Name": "Bind",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
    "Documentation": {
      "Id": 3,
      "Args": [
        "value",
        "onchange"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "type",
            "Value": "time",
            "ValueComparison": 1
          },
          {
            "Flags": 3,
            "Name": "@bind"
          }
        ]
      },
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "type",
            "Value": "time",
            "ValueComparison": 1
          },
          {
            "Flags": 3,
            "Name": "@bind:get"
          },
          {
            "Flags": 3,
            "Name": "@bind:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@bind",
        "PropertyName": "Bind",
        "TypeName": 0,
        "DisplayName": "object Microsoft.AspNetCore.Components.Web.BindAttributes.Bind",
        "Documentation": {
          "Id": 3,
          "Args": [
            "value",
            "onchange"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "format",
            "PropertyName": "Format_value",
            "TypeName": 2,
            "Documentation": {
              "Id": 7,
              "Args": [
                "@bind"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "event",
            "PropertyName": "Event_value",
            "TypeName": 2,
            "Documentation": {
              "Id": 6,
              "Args": [
                "@bind"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "culture",
            "PropertyName": "Culture",
            "TypeName": 3,
            "Documentation": {
              "Id": 5
            }
          },
          {
            "Flags": 5,
            "Name": "get",
            "PropertyName": "Get",
            "TypeName": 0,
            "Documentation": {
              "Id": 8
            }
          },
          {
            "Flags": 1,
            "Name": "set",
            "PropertyName": "Set",
            "TypeName": 4,
            "Documentation": {
              "Id": 9
            }
          },
          {
            "Flags": 1,
            "Name": "after",
            "PropertyName": "After",
            "TypeName": 4,
            "Documentation": {
              "Id": 4
            }
          }
        ]
      },
      {
        "Flags": 1,
        "Name": "format-value",
        "PropertyName": "Format_value",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.BindAttributes.Format_value",
        "Documentation": {
          "Id": 7,
          "Args": [
            "@bind"
          ]
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
      "Common.TypeNameIdentifier": "BindAttributes",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.Bind.ChangeAttribute": "onchange",
      "Components.Bind.Format": "HH:mm:ss",
      "Components.Bind.IsInvariantCulture": "True",
      "Components.Bind.TypeAttribute": "time",
      "Components.Bind.ValueAttribute": "value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -2473767627049206800,
      "Data2": -7520719684015277487,
      "Data3": 8243944872536488695,
      "Data4": -3671032048306334724
    },
    "Kind": "Components.Bind",
    "Name": "Bind_value",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
    "Documentation": {
      "Id": 3,
      "Args": [
        "value",
        "onchange"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "type",
            "Value": "time",
            "ValueComparison": 1
          },
          {
            "Flags": 3,
            "Name": "@bind-value"
          }
        ]
      },
      {
        "TagName": "input",
        "Attributes": [
          {
            "Flags": 1,
            "Name": "type",
            "Value": "time",
            "ValueComparison": 1
          },
          {
            "Flags": 3,
            "Name": "@bind-value:get"
          },
          {
            "Flags": 3,
            "Name": "@bind-value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@bind-value",
        "PropertyName": "Bind_value",
        "TypeName": 0,
        "DisplayName": "object Microsoft.AspNetCore.Components.Web.BindAttributes.Bind_value",
        "Documentation": {
          "Id": 3,
          "Args": [
            "value",
            "onchange"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "format",
            "PropertyName": "Format_value",
            "TypeName": 2,
            "Documentation": {
              "Id": 7,
              "Args": [
                "@bind-value"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "event",
            "PropertyName": "Event_value",
            "TypeName": 2,
            "Documentation": {
              "Id": 6,
              "Args": [
                "@bind-value"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "culture",
            "PropertyName": "Culture",
            "TypeName": 3,
            "Documentation": {
              "Id": 5
            }
          },
          {
            "Flags": 5,
            "Name": "get",
            "PropertyName": "Get",
            "TypeName": 0,
            "Documentation": {
              "Id": 8
            }
          },
          {
            "Flags": 1,
            "Name": "set",
            "PropertyName": "Set",
            "TypeName": 4,
            "Documentation": {
              "Id": 9
            }
          },
          {
            "Flags": 1,
            "Name": "after",
            "PropertyName": "After",
            "TypeName": 4,
            "Documentation": {
              "Id": 4
            }
          }
        ]
      },
      {
        "Flags": 1,
        "Name": "format-value",
        "PropertyName": "Format_value",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.BindAttributes.Format_value",
        "Documentation": {
          "Id": 7,
          "Args": [
            "@bind-value"
          ]
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
      "Common.TypeNameIdentifier": "BindAttributes",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.Bind.ChangeAttribute": "onchange",
      "Components.Bind.Format": "HH:mm:ss",
      "Components.Bind.IsInvariantCulture": "True",
      "Components.Bind.TypeAttribute": "time",
      "Components.Bind.ValueAttribute": "value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -5798259023313543459,
      "Data2": 2787458642443864891,
      "Data3": -3628938702966140302,
      "Data4": 210045366109606841
    },
    "Kind": "Components.Bind",
    "Name": "Bind",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
    "Documentation": {
      "Id": 3,
      "Args": [
        "value",
        "onchange"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "select",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind"
          }
        ]
      },
      {
        "TagName": "select",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind:get"
          },
          {
            "Flags": 3,
            "Name": "@bind:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@bind",
        "PropertyName": "Bind",
        "TypeName": 0,
        "DisplayName": "object Microsoft.AspNetCore.Components.Web.BindAttributes.Bind",
        "Documentation": {
          "Id": 3,
          "Args": [
            "value",
            "onchange"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "format",
            "PropertyName": "Format_value",
            "TypeName": 2,
            "Documentation": {
              "Id": 7,
              "Args": [
                "@bind"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "event",
            "PropertyName": "Event_value",
            "TypeName": 2,
            "Documentation": {
              "Id": 6,
              "Args": [
                "@bind"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "culture",
            "PropertyName": "Culture",
            "TypeName": 3,
            "Documentation": {
              "Id": 5
            }
          },
          {
            "Flags": 5,
            "Name": "get",
            "PropertyName": "Get",
            "TypeName": 0,
            "Documentation": {
              "Id": 8
            }
          },
          {
            "Flags": 1,
            "Name": "set",
            "PropertyName": "Set",
            "TypeName": 4,
            "Documentation": {
              "Id": 9
            }
          },
          {
            "Flags": 1,
            "Name": "after",
            "PropertyName": "After",
            "TypeName": 4,
            "Documentation": {
              "Id": 4
            }
          }
        ]
      },
      {
        "Flags": 1,
        "Name": "format-value",
        "PropertyName": "Format_value",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.BindAttributes.Format_value",
        "Documentation": {
          "Id": 7,
          "Args": [
            "@bind"
          ]
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
      "Common.TypeNameIdentifier": "BindAttributes",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.Bind.ChangeAttribute": "onchange",
      "Components.Bind.Format": null,
      "Components.Bind.IsInvariantCulture": "False",
      "Components.Bind.ValueAttribute": "value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 8179046682322690020,
      "Data2": 4582374976602192777,
      "Data3": 4710554258466931215,
      "Data4": 7806431574456163365
    },
    "Kind": "Components.Bind",
    "Name": "Bind",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
    "Documentation": {
      "Id": 3,
      "Args": [
        "value",
        "onchange"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "textarea",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind"
          }
        ]
      },
      {
        "TagName": "textarea",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind:get"
          },
          {
            "Flags": 3,
            "Name": "@bind:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@bind",
        "PropertyName": "Bind",
        "TypeName": 0,
        "DisplayName": "object Microsoft.AspNetCore.Components.Web.BindAttributes.Bind",
        "Documentation": {
          "Id": 3,
          "Args": [
            "value",
            "onchange"
          ]
        },
        "Parameters": [
          {
            "Flags": 1,
            "Name": "format",
            "PropertyName": "Format_value",
            "TypeName": 2,
            "Documentation": {
              "Id": 7,
              "Args": [
                "@bind"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "event",
            "PropertyName": "Event_value",
            "TypeName": 2,
            "Documentation": {
              "Id": 6,
              "Args": [
                "@bind"
              ]
            }
          },
          {
            "Flags": 1,
            "Name": "culture",
            "PropertyName": "Culture",
            "TypeName": 3,
            "Documentation": {
              "Id": 5
            }
          },
          {
            "Flags": 5,
            "Name": "get",
            "PropertyName": "Get",
            "TypeName": 0,
            "Documentation": {
              "Id": 8
            }
          },
          {
            "Flags": 1,
            "Name": "set",
            "PropertyName": "Set",
            "TypeName": 4,
            "Documentation": {
              "Id": 9
            }
          },
          {
            "Flags": 1,
            "Name": "after",
            "PropertyName": "After",
            "TypeName": 4,
            "Documentation": {
              "Id": 4
            }
          }
        ]
      },
      {
        "Flags": 1,
        "Name": "format-value",
        "PropertyName": "Format_value",
        "TypeName": 14,
        "DisplayName": "string Microsoft.AspNetCore.Components.Web.BindAttributes.Format_value",
        "Documentation": {
          "Id": 7,
          "Args": [
            "@bind"
          ]
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
      "Common.TypeNameIdentifier": "BindAttributes",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
      "Components.Bind.ChangeAttribute": "onchange",
      "Components.Bind.Format": null,
      "Components.Bind.IsInvariantCulture": "False",
      "Components.Bind.ValueAttribute": "value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 8839697239420593922,
      "Data2": -8933943792994347941,
      "Data3": 4366012542322094350,
      "Data4": 7709654900997436221
    },
    "Kind": "Components.Bind",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
    "Documentation": {
      "Id": 10,
      "Args": [
        "Value",
        "ValueChanged"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "InputCheckbox",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind-Value"
          }
        ]
      },
      {
        "TagName": "InputCheckbox",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind-Value:get"
          },
          {
            "Flags": 3,
            "Name": "@bind-Value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@bind-Value",
        "PropertyName": "Value",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean> Microsoft.AspNetCore.Components.Forms.InputCheckbox.Value",
        "Documentation": {
          "Id": 10,
          "Args": [
            "Value",
            "ValueChanged"
          ]
        },
        "Parameters": [
          {
            "Flags": 5,
            "Name": "get",
            "PropertyName": "Get",
            "TypeName": 0,
            "Documentation": {
              "Id": 8
            }
          },
          {
            "Flags": 1,
            "Name": "set",
            "PropertyName": "Set",
            "TypeName": 4,
            "Documentation": {
              "Id": 9
            }
          },
          {
            "Flags": 1,
            "Name": "after",
            "PropertyName": "After",
            "TypeName": 4,
            "Documentation": {
              "Id": 4
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
      "Common.TypeNameIdentifier": "InputCheckbox",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.Bind.ChangeAttribute": "ValueChanged",
      "Components.Bind.ExpressionAttribute": "ValueExpression",
      "Components.Bind.ValueAttribute": "Value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -7399652802930575135,
      "Data2": -6452851829873273560,
      "Data3": 877470428261460656,
      "Data4": 3729558753086053112
    },
    "Kind": "Components.Bind",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
    "Documentation": {
      "Id": 10,
      "Args": [
        "Value",
        "ValueChanged"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind-Value"
          }
        ]
      },
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind-Value:get"
          },
          {
            "Flags": 3,
            "Name": "@bind-Value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@bind-Value",
        "PropertyName": "Value",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean> Microsoft.AspNetCore.Components.Forms.InputCheckbox.Value",
        "Documentation": {
          "Id": 10,
          "Args": [
            "Value",
            "ValueChanged"
          ]
        },
        "Parameters": [
          {
            "Flags": 5,
            "Name": "get",
            "PropertyName": "Get",
            "TypeName": 0,
            "Documentation": {
              "Id": 8
            }
          },
          {
            "Flags": 1,
            "Name": "set",
            "PropertyName": "Set",
            "TypeName": 4,
            "Documentation": {
              "Id": 9
            }
          },
          {
            "Flags": 1,
            "Name": "after",
            "PropertyName": "After",
            "TypeName": 4,
            "Documentation": {
              "Id": 4
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
      "Common.TypeNameIdentifier": "InputCheckbox",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.Bind.ChangeAttribute": "ValueChanged",
      "Components.Bind.ExpressionAttribute": "ValueExpression",
      "Components.Bind.ValueAttribute": "Value",
      "Components.IsSpecialKind": "Components.Bind",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -3644322657025227719,
      "Data2": 2156819309367210227,
      "Data3": -8258766258802310143,
      "Data4": -6799068082360683177
    },
    "Kind": "Components.Bind",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
    "Documentation": {
      "Id": 10,
      "Args": [
        "Value",
        "ValueChanged"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "InputDate",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind-Value"
          }
        ]
      },
      {
        "TagName": "InputDate",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind-Value:get"
          },
          {
            "Flags": 3,
            "Name": "@bind-Value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@bind-Value",
        "PropertyName": "Value",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<TValue> Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.Value",
        "Documentation": {
          "Id": 10,
          "Args": [
            "Value",
            "ValueChanged"
          ]
        },
        "Parameters": [
          {
            "Flags": 5,
            "Name": "get",
            "PropertyName": "Get",
            "TypeName": 0,
            "Documentation": {
              "Id": 8
            }
          },
          {
            "Flags": 1,
            "Name": "set",
            "PropertyName": "Set",
            "TypeName": 4,
            "Documentation": {
              "Id": 9
            }
          },
          {
            "Flags": 1,
            "Name": "after",
            "PropertyName": "After",
            "TypeName": 4,
            "Documentation": {
              "Id": 4
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
      "Common.TypeNameIdentifier": "InputDate",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.Bind.ChangeAttribute": "ValueChanged",
      "Components.Bind.ExpressionAttribute": "ValueExpression",
      "Components.Bind.ValueAttribute": "Value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -3377051238106533780,
      "Data2": 2587107333133747203,
      "Data3": 2905343480987558073,
      "Data4": -4793859969910274197
    },
    "Kind": "Components.Bind",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
    "Documentation": {
      "Id": 10,
      "Args": [
        "Value",
        "ValueChanged"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputDate",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind-Value"
          }
        ]
      },
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputDate",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind-Value:get"
          },
          {
            "Flags": 3,
            "Name": "@bind-Value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@bind-Value",
        "PropertyName": "Value",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<TValue> Microsoft.AspNetCore.Components.Forms.InputDate<TValue>.Value",
        "Documentation": {
          "Id": 10,
          "Args": [
            "Value",
            "ValueChanged"
          ]
        },
        "Parameters": [
          {
            "Flags": 5,
            "Name": "get",
            "PropertyName": "Get",
            "TypeName": 0,
            "Documentation": {
              "Id": 8
            }
          },
          {
            "Flags": 1,
            "Name": "set",
            "PropertyName": "Set",
            "TypeName": 4,
            "Documentation": {
              "Id": 9
            }
          },
          {
            "Flags": 1,
            "Name": "after",
            "PropertyName": "After",
            "TypeName": 4,
            "Documentation": {
              "Id": 4
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
      "Common.TypeNameIdentifier": "InputDate",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.Bind.ChangeAttribute": "ValueChanged",
      "Components.Bind.ExpressionAttribute": "ValueExpression",
      "Components.Bind.ValueAttribute": "Value",
      "Components.IsSpecialKind": "Components.Bind",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -802101775526964402,
      "Data2": -2438223317911332726,
      "Data3": -1688413219727733888,
      "Data4": -1945400744824109652
    },
    "Kind": "Components.Bind",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
    "Documentation": {
      "Id": 10,
      "Args": [
        "Value",
        "ValueChanged"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "InputNumber",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind-Value"
          }
        ]
      },
      {
        "TagName": "InputNumber",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind-Value:get"
          },
          {
            "Flags": 3,
            "Name": "@bind-Value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@bind-Value",
        "PropertyName": "Value",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<TValue> Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>.Value",
        "Documentation": {
          "Id": 10,
          "Args": [
            "Value",
            "ValueChanged"
          ]
        },
        "Parameters": [
          {
            "Flags": 5,
            "Name": "get",
            "PropertyName": "Get",
            "TypeName": 0,
            "Documentation": {
              "Id": 8
            }
          },
          {
            "Flags": 1,
            "Name": "set",
            "PropertyName": "Set",
            "TypeName": 4,
            "Documentation": {
              "Id": 9
            }
          },
          {
            "Flags": 1,
            "Name": "after",
            "PropertyName": "After",
            "TypeName": 4,
            "Documentation": {
              "Id": 4
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
      "Common.TypeNameIdentifier": "InputNumber",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.Bind.ChangeAttribute": "ValueChanged",
      "Components.Bind.ExpressionAttribute": "ValueExpression",
      "Components.Bind.ValueAttribute": "Value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 6933729322597805468,
      "Data2": 2509510113274161108,
      "Data3": -5784098004396095848,
      "Data4": 4837244988611838927
    },
    "Kind": "Components.Bind",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
    "Documentation": {
      "Id": 10,
      "Args": [
        "Value",
        "ValueChanged"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputNumber",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind-Value"
          }
        ]
      },
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputNumber",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind-Value:get"
          },
          {
            "Flags": 3,
            "Name": "@bind-Value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@bind-Value",
        "PropertyName": "Value",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<TValue> Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>.Value",
        "Documentation": {
          "Id": 10,
          "Args": [
            "Value",
            "ValueChanged"
          ]
        },
        "Parameters": [
          {
            "Flags": 5,
            "Name": "get",
            "PropertyName": "Get",
            "TypeName": 0,
            "Documentation": {
              "Id": 8
            }
          },
          {
            "Flags": 1,
            "Name": "set",
            "PropertyName": "Set",
            "TypeName": 4,
            "Documentation": {
              "Id": 9
            }
          },
          {
            "Flags": 1,
            "Name": "after",
            "PropertyName": "After",
            "TypeName": 4,
            "Documentation": {
              "Id": 4
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
      "Common.TypeNameIdentifier": "InputNumber",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.Bind.ChangeAttribute": "ValueChanged",
      "Components.Bind.ExpressionAttribute": "ValueExpression",
      "Components.Bind.ValueAttribute": "Value",
      "Components.IsSpecialKind": "Components.Bind",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -2688813420584726175,
      "Data2": 4684755855448546964,
      "Data3": -8549715772050437241,
      "Data4": 5384782215020963550
    },
    "Kind": "Components.Bind",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
    "Documentation": {
      "Id": 10,
      "Args": [
        "Value",
        "ValueChanged"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "InputRadioGroup",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind-Value"
          }
        ]
      },
      {
        "TagName": "InputRadioGroup",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind-Value:get"
          },
          {
            "Flags": 3,
            "Name": "@bind-Value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@bind-Value",
        "PropertyName": "Value",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<TValue> Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.Value",
        "Documentation": {
          "Id": 10,
          "Args": [
            "Value",
            "ValueChanged"
          ]
        },
        "Parameters": [
          {
            "Flags": 5,
            "Name": "get",
            "PropertyName": "Get",
            "TypeName": 0,
            "Documentation": {
              "Id": 8
            }
          },
          {
            "Flags": 1,
            "Name": "set",
            "PropertyName": "Set",
            "TypeName": 4,
            "Documentation": {
              "Id": 9
            }
          },
          {
            "Flags": 1,
            "Name": "after",
            "PropertyName": "After",
            "TypeName": 4,
            "Documentation": {
              "Id": 4
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
      "Common.TypeNameIdentifier": "InputRadioGroup",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.Bind.ChangeAttribute": "ValueChanged",
      "Components.Bind.ExpressionAttribute": "ValueExpression",
      "Components.Bind.ValueAttribute": "Value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 2625042816483463383,
      "Data2": -8385728796619266960,
      "Data3": -6409883070539365222,
      "Data4": -856112062947971004
    },
    "Kind": "Components.Bind",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
    "Documentation": {
      "Id": 10,
      "Args": [
        "Value",
        "ValueChanged"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind-Value"
          }
        ]
      },
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind-Value:get"
          },
          {
            "Flags": 3,
            "Name": "@bind-Value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@bind-Value",
        "PropertyName": "Value",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<TValue> Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.Value",
        "Documentation": {
          "Id": 10,
          "Args": [
            "Value",
            "ValueChanged"
          ]
        },
        "Parameters": [
          {
            "Flags": 5,
            "Name": "get",
            "PropertyName": "Get",
            "TypeName": 0,
            "Documentation": {
              "Id": 8
            }
          },
          {
            "Flags": 1,
            "Name": "set",
            "PropertyName": "Set",
            "TypeName": 4,
            "Documentation": {
              "Id": 9
            }
          },
          {
            "Flags": 1,
            "Name": "after",
            "PropertyName": "After",
            "TypeName": 4,
            "Documentation": {
              "Id": 4
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
      "Common.TypeNameIdentifier": "InputRadioGroup",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.Bind.ChangeAttribute": "ValueChanged",
      "Components.Bind.ExpressionAttribute": "ValueExpression",
      "Components.Bind.ValueAttribute": "Value",
      "Components.IsSpecialKind": "Components.Bind",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 5171406388596321398,
      "Data2": -1310652921237418567,
      "Data3": 5070688961671093365,
      "Data4": 8113507930686322233
    },
    "Kind": "Components.Bind",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
    "Documentation": {
      "Id": 10,
      "Args": [
        "Value",
        "ValueChanged"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "InputSelect",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind-Value"
          }
        ]
      },
      {
        "TagName": "InputSelect",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind-Value:get"
          },
          {
            "Flags": 3,
            "Name": "@bind-Value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@bind-Value",
        "PropertyName": "Value",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<TValue> Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.Value",
        "Documentation": {
          "Id": 10,
          "Args": [
            "Value",
            "ValueChanged"
          ]
        },
        "Parameters": [
          {
            "Flags": 5,
            "Name": "get",
            "PropertyName": "Get",
            "TypeName": 0,
            "Documentation": {
              "Id": 8
            }
          },
          {
            "Flags": 1,
            "Name": "set",
            "PropertyName": "Set",
            "TypeName": 4,
            "Documentation": {
              "Id": 9
            }
          },
          {
            "Flags": 1,
            "Name": "after",
            "PropertyName": "After",
            "TypeName": 4,
            "Documentation": {
              "Id": 4
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
      "Common.TypeNameIdentifier": "InputSelect",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.Bind.ChangeAttribute": "ValueChanged",
      "Components.Bind.ExpressionAttribute": "ValueExpression",
      "Components.Bind.ValueAttribute": "Value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 5937953503573379749,
      "Data2": 7834817727294935827,
      "Data3": -6488165407787402670,
      "Data4": 8593071540820213005
    },
    "Kind": "Components.Bind",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
    "Documentation": {
      "Id": 10,
      "Args": [
        "Value",
        "ValueChanged"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputSelect",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind-Value"
          }
        ]
      },
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputSelect",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind-Value:get"
          },
          {
            "Flags": 3,
            "Name": "@bind-Value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@bind-Value",
        "PropertyName": "Value",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<TValue> Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.Value",
        "Documentation": {
          "Id": 10,
          "Args": [
            "Value",
            "ValueChanged"
          ]
        },
        "Parameters": [
          {
            "Flags": 5,
            "Name": "get",
            "PropertyName": "Get",
            "TypeName": 0,
            "Documentation": {
              "Id": 8
            }
          },
          {
            "Flags": 1,
            "Name": "set",
            "PropertyName": "Set",
            "TypeName": 4,
            "Documentation": {
              "Id": 9
            }
          },
          {
            "Flags": 1,
            "Name": "after",
            "PropertyName": "After",
            "TypeName": 4,
            "Documentation": {
              "Id": 4
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
      "Common.TypeNameIdentifier": "InputSelect",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.Bind.ChangeAttribute": "ValueChanged",
      "Components.Bind.ExpressionAttribute": "ValueExpression",
      "Components.Bind.ValueAttribute": "Value",
      "Components.IsSpecialKind": "Components.Bind",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 1228224687806099891,
      "Data2": 2384328423430015452,
      "Data3": -244953737298681994,
      "Data4": 6159812037210350901
    },
    "Kind": "Components.Bind",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputText",
    "Documentation": {
      "Id": 10,
      "Args": [
        "Value",
        "ValueChanged"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "InputText",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind-Value"
          }
        ]
      },
      {
        "TagName": "InputText",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind-Value:get"
          },
          {
            "Flags": 3,
            "Name": "@bind-Value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@bind-Value",
        "PropertyName": "Value",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.String> Microsoft.AspNetCore.Components.Forms.InputText.Value",
        "Documentation": {
          "Id": 10,
          "Args": [
            "Value",
            "ValueChanged"
          ]
        },
        "Parameters": [
          {
            "Flags": 5,
            "Name": "get",
            "PropertyName": "Get",
            "TypeName": 0,
            "Documentation": {
              "Id": 8
            }
          },
          {
            "Flags": 1,
            "Name": "set",
            "PropertyName": "Set",
            "TypeName": 4,
            "Documentation": {
              "Id": 9
            }
          },
          {
            "Flags": 1,
            "Name": "after",
            "PropertyName": "After",
            "TypeName": 4,
            "Documentation": {
              "Id": 4
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText",
      "Common.TypeNameIdentifier": "InputText",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.Bind.ChangeAttribute": "ValueChanged",
      "Components.Bind.ExpressionAttribute": "ValueExpression",
      "Components.Bind.ValueAttribute": "Value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -7061428486294904187,
      "Data2": -1640536820247714875,
      "Data3": 3132488530974186390,
      "Data4": -4161680560254109048
    },
    "Kind": "Components.Bind",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputText",
    "Documentation": {
      "Id": 10,
      "Args": [
        "Value",
        "ValueChanged"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputText",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind-Value"
          }
        ]
      },
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputText",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind-Value:get"
          },
          {
            "Flags": 3,
            "Name": "@bind-Value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@bind-Value",
        "PropertyName": "Value",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.String> Microsoft.AspNetCore.Components.Forms.InputText.Value",
        "Documentation": {
          "Id": 10,
          "Args": [
            "Value",
            "ValueChanged"
          ]
        },
        "Parameters": [
          {
            "Flags": 5,
            "Name": "get",
            "PropertyName": "Get",
            "TypeName": 0,
            "Documentation": {
              "Id": 8
            }
          },
          {
            "Flags": 1,
            "Name": "set",
            "PropertyName": "Set",
            "TypeName": 4,
            "Documentation": {
              "Id": 9
            }
          },
          {
            "Flags": 1,
            "Name": "after",
            "PropertyName": "After",
            "TypeName": 4,
            "Documentation": {
              "Id": 4
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText",
      "Common.TypeNameIdentifier": "InputText",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.Bind.ChangeAttribute": "ValueChanged",
      "Components.Bind.ExpressionAttribute": "ValueExpression",
      "Components.Bind.ValueAttribute": "Value",
      "Components.IsSpecialKind": "Components.Bind",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -1518002235572494746,
      "Data2": 8873246522289996000,
      "Data3": -1249196914860670971,
      "Data4": -6635049929997739151
    },
    "Kind": "Components.Bind",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
    "Documentation": {
      "Id": 10,
      "Args": [
        "Value",
        "ValueChanged"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "InputTextArea",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind-Value"
          }
        ]
      },
      {
        "TagName": "InputTextArea",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind-Value:get"
          },
          {
            "Flags": 3,
            "Name": "@bind-Value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@bind-Value",
        "PropertyName": "Value",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.String> Microsoft.AspNetCore.Components.Forms.InputTextArea.Value",
        "Documentation": {
          "Id": 10,
          "Args": [
            "Value",
            "ValueChanged"
          ]
        },
        "Parameters": [
          {
            "Flags": 5,
            "Name": "get",
            "PropertyName": "Get",
            "TypeName": 0,
            "Documentation": {
              "Id": 8
            }
          },
          {
            "Flags": 1,
            "Name": "set",
            "PropertyName": "Set",
            "TypeName": 4,
            "Documentation": {
              "Id": 9
            }
          },
          {
            "Flags": 1,
            "Name": "after",
            "PropertyName": "After",
            "TypeName": 4,
            "Documentation": {
              "Id": 4
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
      "Common.TypeNameIdentifier": "InputTextArea",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.Bind.ChangeAttribute": "ValueChanged",
      "Components.Bind.ExpressionAttribute": "ValueExpression",
      "Components.Bind.ValueAttribute": "Value",
      "Components.IsSpecialKind": "Components.Bind",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -3138437897119669201,
      "Data2": -1241627025179212091,
      "Data3": 5013388638526013464,
      "Data4": -1376540477589955325
    },
    "Kind": "Components.Bind",
    "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
    "AssemblyName": "Microsoft.AspNetCore.Components.Web",
    "DisplayName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
    "Documentation": {
      "Id": 10,
      "Args": [
        "Value",
        "ValueChanged"
      ]
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind-Value"
          }
        ]
      },
      {
        "TagName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@bind-Value:get"
          },
          {
            "Flags": 3,
            "Name": "@bind-Value:set"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@bind-Value",
        "PropertyName": "Value",
        "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
        "DisplayName": "Microsoft.AspNetCore.Components.EventCallback<System.String> Microsoft.AspNetCore.Components.Forms.InputTextArea.Value",
        "Documentation": {
          "Id": 10,
          "Args": [
            "Value",
            "ValueChanged"
          ]
        },
        "Parameters": [
          {
            "Flags": 5,
            "Name": "get",
            "PropertyName": "Get",
            "TypeName": 0,
            "Documentation": {
              "Id": 8
            }
          },
          {
            "Flags": 1,
            "Name": "set",
            "PropertyName": "Set",
            "TypeName": 4,
            "Documentation": {
              "Id": 9
            }
          },
          {
            "Flags": 1,
            "Name": "after",
            "PropertyName": "After",
            "TypeName": 4,
            "Documentation": {
              "Id": 4
            }
          }
        ]
      }
    ],
    "Metadata": {
      "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
      "Common.TypeNameIdentifier": "InputTextArea",
      "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
      "Components.Bind.ChangeAttribute": "ValueChanged",
      "Components.Bind.ExpressionAttribute": "ValueExpression",
      "Components.Bind.ValueAttribute": "Value",
      "Components.IsSpecialKind": "Components.Bind",
      "Components.NameMatch": "Components.FullyQualifiedNameMatch",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": -531558236319226791,
      "Data2": -6948560676751789114,
      "Data3": 273259235689265139,
      "Data4": -6708993449118985615
    },
    "Kind": "Components.Ref",
    "Name": "Ref",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Ref",
    "Documentation": {
      "Id": 18
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@ref"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@ref",
        "PropertyName": "Ref",
        "TypeName": 0,
        "DisplayName": "object Microsoft.AspNetCore.Components.Ref.Ref",
        "Documentation": {
          "Id": 18
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Ref",
      "Components.IsSpecialKind": "Components.Ref",
      "Runtime.Name": "Components.None"
    }
  },
  {
    "__Checksum": {
      "Data1": 6715321598549764912,
      "Data2": -893505161956388151,
      "Data3": -6934769826776225552,
      "Data4": -1879775532332819150
    },
    "Kind": "Components.Key",
    "Name": "Key",
    "AssemblyName": "Microsoft.AspNetCore.Components",
    "DisplayName": "Microsoft.AspNetCore.Components.Key",
    "Documentation": {
      "Id": 17
    },
    "CaseSensitive": true,
    "TagMatchingRules": [
      {
        "TagName": "*",
        "Attributes": [
          {
            "Flags": 3,
            "Name": "@key"
          }
        ]
      }
    ],
    "BoundAttributes": [
      {
        "Flags": 17,
        "Name": "@key",
        "PropertyName": "Key",
        "TypeName": 0,
        "DisplayName": "object Microsoft.AspNetCore.Components.Key.Key",
        "Documentation": {
          "Id": 17
        }
      }
    ],
    "Metadata": {
      "Common.ClassifyAttributesOnly": "True",
      "Common.TypeName": "Microsoft.AspNetCore.Components.Key",
      "Components.IsSpecialKind": "Components.Key",
      "Runtime.Name": "Components.None"
    }
  }
]